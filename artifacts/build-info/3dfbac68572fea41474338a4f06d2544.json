{"id":"3dfbac68572fea41474338a4f06d2544","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"contracts/ManualToken.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ninterface tokenRecipient {\r\n    function receiveApproval(\r\n        address _from,\r\n        uint256 _value,\r\n        address _token,\r\n        bytes calldata _extraData\r\n    ) external;\r\n}\r\n\r\ncontract TokenERC20 {\r\n    // Public variables of the token\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals = 18;\r\n    // 18 decimals is the strongly suggested default, avoid changing it\r\n    uint256 public totalSupply;\r\n\r\n    // This creates an array with all balances\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => mapping(address => uint256)) public allowance;\r\n\r\n    // This generates a public event on the blockchain that will notify clients\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    // This generates a public event on the blockchain that will notify clients\r\n    event Approval(\r\n        address indexed _owner,\r\n        address indexed _spender,\r\n        uint256 _value\r\n    );\r\n\r\n    // This notifies clients about the amount burnt\r\n    event Burn(address indexed from, uint256 value);\r\n\r\n    /**\r\n     * Constructor function\r\n     *\r\n     * Initializes contract with initial supply tokens to the creator of the contract\r\n     */\r\n    constructor(\r\n        uint256 initialSupply,\r\n        string memory tokenName,\r\n        string memory tokenSymbol\r\n    ) {\r\n        totalSupply = initialSupply * 10 ** uint256(decimals); // Update total supply with the decimal amount\r\n        balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens\r\n        name = tokenName; // Set the name for display purposes\r\n        symbol = tokenSymbol; // Set the symbol for display purposes\r\n    }\r\n\r\n    /**\r\n     * Internal transfer, only can be called by this contract\r\n     */\r\n    function _transfer(address _from, address _to, uint256 _value) internal {\r\n        // Prevent transfer to 0x0 address. Use burn() instead\r\n        require(_to != address(0x0));\r\n        // Check if the sender has enough\r\n        require(balanceOf[_from] >= _value);\r\n        // Check for overflows\r\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\r\n        // Save this for an assertion in the future\r\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\r\n        // Subtract from the sender\r\n        balanceOf[_from] -= _value;\r\n        // Add the same to the recipient\r\n        balanceOf[_to] += _value;\r\n        emit Transfer(_from, _to, _value);\r\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\r\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\r\n    }\r\n\r\n    /**\r\n     * Transfer tokens\r\n     *\r\n     * Send `_value` tokens to `_to` from your account\r\n     *\r\n     * @param _to The address of the recipient\r\n     * @param _value the amount to send\r\n     */\r\n    function transfer(\r\n        address _to,\r\n        uint256 _value\r\n    ) public returns (bool success) {\r\n        _transfer(msg.sender, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Transfer tokens from other address\r\n     *\r\n     * Send `_value` tokens to `_to` on behalf of `_from`\r\n     *\r\n     * @param _from The address of the sender\r\n     * @param _to The address of the recipient\r\n     * @param _value the amount to send\r\n     */\r\n    function transferFrom(\r\n        address _from,\r\n        address _to,\r\n        uint256 _value\r\n    ) public returns (bool success) {\r\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\r\n        allowance[_from][msg.sender] -= _value;\r\n        _transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set allowance for other address\r\n     *\r\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\r\n     *\r\n     * @param _spender The address authorized to spend\r\n     * @param _value the max amount they can spend\r\n     */\r\n    function approve(\r\n        address _spender,\r\n        uint256 _value\r\n    ) public returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Set allowance for other address and notify\r\n     *\r\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\r\n     *\r\n     * @param _spender The address authorized to spend\r\n     * @param _value the max amount they can spend\r\n     * @param _extraData some extra information to send to the approved contract\r\n     */\r\n    function approveAndCall(\r\n        address _spender,\r\n        uint256 _value,\r\n        bytes memory _extraData\r\n    ) public returns (bool success) {\r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(\r\n                msg.sender,\r\n                _value,\r\n                address(this),\r\n                _extraData\r\n            );\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroy tokens\r\n     *\r\n     * Remove `_value` tokens from the system irreversibly\r\n     *\r\n     * @param _value the amount of money to burn\r\n     */\r\n    function burn(uint256 _value) public returns (bool success) {\r\n        require(balanceOf[msg.sender] >= _value); // Check if the sender has enough\r\n        balanceOf[msg.sender] -= _value; // Subtract from the sender\r\n        totalSupply -= _value; // Updates totalSupply\r\n        emit Burn(msg.sender, _value);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Destroy tokens from other account\r\n     *\r\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\r\n     *\r\n     * @param _from the address of the sender\r\n     * @param _value the amount of money to burn\r\n     */\r\n    function burnFrom(\r\n        address _from,\r\n        uint256 _value\r\n    ) public returns (bool success) {\r\n        require(balanceOf[_from] >= _value); // Check if the targeted balance is enough\r\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\r\n        balanceOf[_from] -= _value; // Subtract from the targeted balance\r\n        allowance[_from][msg.sender] -= _value; // Subtract from the sender's allowance\r\n        totalSupply -= _value; // Update totalSupply\r\n        emit Burn(_from, _value);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n\r\n// pragma solidity ^0.8.3;\r\n\r\n// contract ManualToken {\r\n//     mapping(address => uint) public balanceOf;\r\n//     mapping(address => mapping(address => uint)) public allowance;\r\n\r\n//     function transfer(address from, uint256 amount, address to) public {\r\n//         balanceOf[from] = balanceOf[from] - amount;\r\n//         balanceOf[to] = balanceOf[to] + amount;\r\n//     }\r\n\r\n//     function transferFrom(\r\n//         address _from,\r\n//         address _to,\r\n//         uint256 _value\r\n//     ) public returns (bool success) {\r\n//         require(_value <= allowance[_from][msg.sender]);\r\n//         allowance[_from][msg.sender] -= _value;\r\n//         transfer(_from, _value, _to);\r\n//         return true;\r\n//     }\r\n// }\r\n"},"contracts/OurToken.sol":{"content":"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\r\npragma solidity ^0.8.3;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract OurToken is ERC20 {\r\n    constructor(uint256 initialSupply) ERC20(\"OurToken\", \"OT\") {\r\n        _mint(msg.sender, initialSupply);\r\n    }\r\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[136],"IERC20Errors":[41],"IERC721Errors":[89]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"138:141:0","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":41,"linearizedBaseContracts":[41],"name":"IERC20Errors","nameLocation":"290:12:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"309:309:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":11,"name":"ERC20InsufficientBalance","nameLocation":"629:24:0","nodeType":"ErrorDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sender","nameLocation":"662:6:0","nodeType":"VariableDeclaration","scope":11,"src":"654:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"balance","nameLocation":"678:7:0","nodeType":"VariableDeclaration","scope":11,"src":"670:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"needed","nameLocation":"695:6:0","nodeType":"VariableDeclaration","scope":11,"src":"687:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:0"},"src":"623:80:0"},{"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"709:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":16,"name":"ERC20InvalidSender","nameLocation":"872:18:0","nodeType":"ErrorDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"sender","nameLocation":"899:6:0","nodeType":"VariableDeclaration","scope":16,"src":"891:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:0"},"src":"866:41:0"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"913:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":21,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:0","nodeType":"ErrorDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:0","nodeType":"VariableDeclaration","scope":21,"src":"1104:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:0"},"src":"1077:45:0"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"1128:345:0","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":30,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"spender","nameLocation":"1519:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1511:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:0","nodeType":"VariableDeclaration","scope":30,"src":"1528:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"needed","nameLocation":"1555:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:0"},"src":"1478:85:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1569:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":35,"name":"ERC20InvalidApprover","nameLocation":"1754:20:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"approver","nameLocation":"1783:8:0","nodeType":"VariableDeclaration","scope":35,"src":"1775:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:0"},"src":"1748:45:0"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1799:195:0","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":40,"name":"ERC20InvalidSpender","nameLocation":"2005:19:0","nodeType":"ErrorDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"spender","nameLocation":"2033:7:0","nodeType":"VariableDeclaration","scope":40,"src":"2025:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:0"},"src":"1999:43:0"}],"scope":137,"src":"280:1764:0","usedErrors":[11,16,21,30,35,40],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2046:143:0","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":89,"linearizedBaseContracts":[89],"name":"IERC721Errors","nameLocation":"2200:13:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"2220:219:0","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":47,"name":"ERC721InvalidOwner","nameLocation":"2450:18:0","nodeType":"ErrorDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"owner","nameLocation":"2477:5:0","nodeType":"VariableDeclaration","scope":47,"src":"2469:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:0"},"src":"2444:40:0"},{"documentation":{"id":48,"nodeType":"StructuredDocumentation","src":"2490:132:0","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":52,"name":"ERC721NonexistentToken","nameLocation":"2633:22:0","nodeType":"ErrorDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:0","nodeType":"VariableDeclaration","scope":52,"src":"2656:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":49,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:0"},"src":"2627:46:0"},{"documentation":{"id":53,"nodeType":"StructuredDocumentation","src":"2679:289:0","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":61,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:0","nodeType":"ErrorDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":55,"mutability":"mutable","name":"sender","nameLocation":"3008:6:0","nodeType":"VariableDeclaration","scope":61,"src":"3000:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":54,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:0","nodeType":"VariableDeclaration","scope":61,"src":"3016:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"owner","nameLocation":"3041:5:0","nodeType":"VariableDeclaration","scope":61,"src":"3033:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:0"},"src":"2973:75:0"},{"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"3054:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":66,"name":"ERC721InvalidSender","nameLocation":"3217:19:0","nodeType":"ErrorDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"sender","nameLocation":"3245:6:0","nodeType":"VariableDeclaration","scope":66,"src":"3237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:0"},"src":"3211:42:0"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3259:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":71,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:0","nodeType":"ErrorDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:0","nodeType":"VariableDeclaration","scope":71,"src":"3451:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:0"},"src":"3423:46:0"},{"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"3475:247:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":78,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:0","nodeType":"ErrorDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"operator","nameLocation":"3768:8:0","nodeType":"VariableDeclaration","scope":78,"src":"3760:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:0","nodeType":"VariableDeclaration","scope":78,"src":"3778:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:0"},"src":"3727:68:0"},{"documentation":{"id":79,"nodeType":"StructuredDocumentation","src":"3801:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":83,"name":"ERC721InvalidApprover","nameLocation":"3986:21:0","nodeType":"ErrorDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":81,"mutability":"mutable","name":"approver","nameLocation":"4016:8:0","nodeType":"VariableDeclaration","scope":83,"src":"4008:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":80,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:0"},"src":"3980:46:0"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"4032:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":88,"name":"ERC721InvalidOperator","nameLocation":"4240:21:0","nodeType":"ErrorDefinition","parameters":{"id":87,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"operator","nameLocation":"4270:8:0","nodeType":"VariableDeclaration","scope":88,"src":"4262:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:0"},"src":"4234:46:0"}],"scope":137,"src":"2190:2092:0","usedErrors":[47,52,61,66,71,78,83,88],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"4284:145:0","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136],"name":"IERC1155Errors","nameLocation":"4440:14:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":91,"nodeType":"StructuredDocumentation","src":"4461:361:0","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":101,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:0","nodeType":"ErrorDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"sender","nameLocation":"4868:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4860:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"balance","nameLocation":"4884:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4876:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"needed","nameLocation":"4901:6:0","nodeType":"VariableDeclaration","scope":101,"src":"4893:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":96,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:0","nodeType":"VariableDeclaration","scope":101,"src":"4909:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:0"},"src":"4827:99:0"},{"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"4932:152:0","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":106,"name":"ERC1155InvalidSender","nameLocation":"5095:20:0","nodeType":"ErrorDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":104,"mutability":"mutable","name":"sender","nameLocation":"5124:6:0","nodeType":"VariableDeclaration","scope":106,"src":"5116:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:0"},"src":"5089:43:0"},{"documentation":{"id":107,"nodeType":"StructuredDocumentation","src":"5138:159:0","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":111,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:0","nodeType":"ErrorDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":109,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:0","nodeType":"VariableDeclaration","scope":111,"src":"5331:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:0"},"src":"5302:47:0"},{"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"5355:256:0","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":118,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:0","nodeType":"ErrorDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":114,"mutability":"mutable","name":"operator","nameLocation":"5659:8:0","nodeType":"VariableDeclaration","scope":118,"src":"5651:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":116,"mutability":"mutable","name":"owner","nameLocation":"5677:5:0","nodeType":"VariableDeclaration","scope":118,"src":"5669:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:0"},"src":"5616:68:0"},{"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"5690:174:0","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":123,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:0","nodeType":"ErrorDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"approver","nameLocation":"5906:8:0","nodeType":"VariableDeclaration","scope":123,"src":"5898:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:0"},"src":"5869:47:0"},{"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5922:197:0","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":128,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:0","nodeType":"ErrorDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"mutability":"mutable","name":"operator","nameLocation":"6161:8:0","nodeType":"VariableDeclaration","scope":128,"src":"6153:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:0"},"src":"6124:47:0"},{"documentation":{"id":129,"nodeType":"StructuredDocumentation","src":"6177:280:0","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":135,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:0","nodeType":"ErrorDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:0","nodeType":"VariableDeclaration","scope":135,"src":"6494:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":133,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:0","nodeType":"VariableDeclaration","scope":135,"src":"6513:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":132,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:0"},"src":"6462:73:0"}],"scope":137,"src":"4430:2107:0","usedErrors":[101,106,111,118,123,128,135],"usedEvents":[]}],"src":"112:6426:0"},"id":0},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755]},"id":652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":730,"src":"131:36:1","symbolAliases":[{"foreign":{"id":139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"139:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":756,"src":"168:63:1","symbolAliases":[{"foreign":{"id":141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"176:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":786,"src":"232:48:1","symbolAliases":[{"foreign":{"id":143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"240:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":652,"sourceUnit":137,"src":"281:65:1","symbolAliases":[{"foreign":{"id":145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"289:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":148,"name":"Context","nameLocations":["1133:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"1133:7:1"},"id":149,"nodeType":"InheritanceSpecifier","src":"1133:7:1"},{"baseName":{"id":150,"name":"IERC20","nameLocations":["1142:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"1142:6:1"},"id":151,"nodeType":"InheritanceSpecifier","src":"1142:6:1"},{"baseName":{"id":152,"name":"IERC20Metadata","nameLocations":["1150:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"1150:14:1"},"id":153,"nodeType":"InheritanceSpecifier","src":"1150:14:1"},{"baseName":{"id":154,"name":"IERC20Errors","nameLocations":["1166:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1166:12:1"},"id":155,"nodeType":"InheritanceSpecifier","src":"1166:12:1"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"348:757:1","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":651,"linearizedBaseContracts":[651,41,755,729,785],"name":"ERC20","nameLocation":"1124:5:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":159,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:1","nodeType":"VariableDeclaration","scope":651,"src":"1185:53:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":158,"keyName":"account","keyNameLocation":"1201:7:1","keyType":{"id":156,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":165,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:1","nodeType":"VariableDeclaration","scope":651,"src":"1245:83:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":164,"keyName":"account","keyNameLocation":"1261:7:1","keyType":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":163,"keyName":"spender","keyNameLocation":"1288:7:1","keyType":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:1","nodeType":"VariableDeclaration","scope":651,"src":"1335:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":169,"mutability":"mutable","name":"_name","nameLocation":"1385:5:1","nodeType":"VariableDeclaration","scope":651,"src":"1370:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":168,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":171,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:1","nodeType":"VariableDeclaration","scope":651,"src":"1396:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":170,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":187,"nodeType":"Block","src":"1657:57:1","statements":[{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1667:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":174,"src":"1675:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":182,"nodeType":"ExpressionStatement","src":"1667:13:1"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"1690:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1700:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":186,"nodeType":"ExpressionStatement","src":"1690:17:1"}]},"documentation":{"id":172,"nodeType":"StructuredDocumentation","src":"1425:171:1","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"mutability":"mutable","name":"name_","nameLocation":"1627:5:1","nodeType":"VariableDeclaration","scope":188,"src":"1613:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":173,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:1","nodeType":"VariableDeclaration","scope":188,"src":"1634:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":175,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:1"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1657:0:1"},"scope":651,"src":"1601:113:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[742],"body":{"id":196,"nodeType":"Block","src":"1839:29:1","statements":[{"expression":{"id":194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"1856:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":193,"id":195,"nodeType":"Return","src":"1849:12:1"}]},"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"1720:54:1","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:1","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"1792:2:1"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":197,"src":"1824:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":191,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:1"},"scope":651,"src":"1779:89:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[748],"body":{"id":205,"nodeType":"Block","src":"2043:31:1","statements":[{"expression":{"id":203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2060:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":202,"id":204,"nodeType":"Return","src":"2053:14:1"}]},"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"1874:102:1","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:1","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[],"src":"1996:2:1"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"2028:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":200,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:1"},"scope":651,"src":"1981:93:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[754],"body":{"id":214,"nodeType":"Block","src":"2763:26:1","statements":[{"expression":{"hexValue":"3138","id":212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":211,"id":213,"nodeType":"Return","src":"2773:9:1"}]},"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"2080:622:1","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:1","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2724:2:1"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":215,"src":"2756:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":209,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:1"},"scope":651,"src":"2707:82:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[678],"body":{"id":223,"nodeType":"Block","src":"2910:36:1","statements":[{"expression":{"id":221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2927:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":220,"id":222,"nodeType":"Return","src":"2920:19:1"}]},"documentation":{"id":216,"nodeType":"StructuredDocumentation","src":"2795:49:1","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:1","nodeType":"FunctionDefinition","parameters":{"id":217,"nodeType":"ParameterList","parameters":[],"src":"2869:2:1"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"2901:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:1"},"scope":651,"src":"2849:97:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[686],"body":{"id":236,"nodeType":"Block","src":"3078:42:1","statements":[{"expression":{"baseExpression":{"id":232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"3095:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":234,"indexExpression":{"id":233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3105:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":231,"id":235,"nodeType":"Return","src":"3088:25:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"2952:47:1","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"account","nameLocation":"3031:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3023:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3069:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:1"},"scope":651,"src":"3004:116:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[696],"body":{"id":260,"nodeType":"Block","src":"3390:103:1","statements":[{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"owner","nameLocation":"3408:5:1","nodeType":"VariableDeclaration","scope":260,"src":"3400:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"3416:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:1"},{"expression":{"arguments":[{"id":253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3448:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"3455:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3459:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"3438:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":257,"nodeType":"ExpressionStatement","src":"3438:27:1"},{"expression":{"hexValue":"74727565","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":246,"id":259,"nodeType":"Return","src":"3475:11:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3126:184:1","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:1","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"to","nameLocation":"3341:2:1","nodeType":"VariableDeclaration","scope":261,"src":"3333:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"value","nameLocation":"3353:5:1","nodeType":"VariableDeclaration","scope":261,"src":"3345:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:1"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":261,"src":"3384:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":244,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:1"},"scope":651,"src":"3315:178:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[706],"body":{"id":277,"nodeType":"Block","src":"3640:51:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"3657:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":273,"indexExpression":{"id":272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"3669:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":275,"indexExpression":{"id":274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3676:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":270,"id":276,"nodeType":"Return","src":"3650:34:1"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"3499:47:1","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"3578:5:1","nodeType":"VariableDeclaration","scope":278,"src":"3570:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"spender","nameLocation":"3593:7:1","nodeType":"VariableDeclaration","scope":278,"src":"3585:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":278,"src":"3631:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:1"},"scope":651,"src":"3551:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[716],"body":{"id":301,"nodeType":"Block","src":"4077:107:1","statements":[{"assignments":[289],"declarations":[{"constant":false,"id":289,"mutability":"mutable","name":"owner","nameLocation":"4095:5:1","nodeType":"VariableDeclaration","scope":301,"src":"4087:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4103:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:1"},{"expression":{"arguments":[{"id":294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"4134:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"4141:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4150:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":542,"src":"4125:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"ExpressionStatement","src":"4125:31:1"},{"expression":{"hexValue":"74727565","id":299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":287,"id":300,"nodeType":"Return","src":"4166:11:1"}]},"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"3697:296:1","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"spender","nameLocation":"4023:7:1","nodeType":"VariableDeclaration","scope":302,"src":"4015:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"value","nameLocation":"4040:5:1","nodeType":"VariableDeclaration","scope":302,"src":"4032:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"4071:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:1"},"scope":651,"src":"3998:186:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[728],"body":{"id":333,"nodeType":"Block","src":"4869:151:1","statements":[{"assignments":[315],"declarations":[{"constant":false,"id":315,"mutability":"mutable","name":"spender","nameLocation":"4887:7:1","nodeType":"VariableDeclaration","scope":333,"src":"4879:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"4897:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:1"},{"expression":{"arguments":[{"id":320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4935:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"4941:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4950:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4919:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":324,"nodeType":"ExpressionStatement","src":"4919:37:1"},{"expression":{"arguments":[{"id":326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4976:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4982:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"4986:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"4966:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4966:26:1"},{"expression":{"hexValue":"74727565","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":313,"id":332,"nodeType":"Return","src":"5002:11:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"4190:581:1","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:1","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"4806:4:1","nodeType":"VariableDeclaration","scope":334,"src":"4798:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"4820:2:1","nodeType":"VariableDeclaration","scope":334,"src":"4812:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"4832:5:1","nodeType":"VariableDeclaration","scope":334,"src":"4824:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:1"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":334,"src":"4863:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:1"},"scope":651,"src":"4776:244:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":380,"nodeType":"Block","src":"5462:231:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5476:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:1","typeDescriptions":{}}},"id":348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":358,"nodeType":"IfStatement","src":"5472:86:1","trueBody":{"id":357,"nodeType":"Block","src":"5496:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:1","typeDescriptions":{}}},"id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"5517:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":356,"nodeType":"RevertStatement","src":"5510:37:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5571:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:1","typeDescriptions":{}}},"id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":373,"nodeType":"IfStatement","src":"5567:86:1","trueBody":{"id":372,"nodeType":"Block","src":"5589:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:1","typeDescriptions":{}}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"5610:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":371,"nodeType":"RevertStatement","src":"5603:39:1"}]}},{"expression":{"arguments":[{"id":375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"5670:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"5676:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"5680:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"5662:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":379,"nodeType":"ExpressionStatement","src":"5662:24:1"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"5026:362:1","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"from","nameLocation":"5420:4:1","nodeType":"VariableDeclaration","scope":381,"src":"5412:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"to","nameLocation":"5434:2:1","nodeType":"VariableDeclaration","scope":381,"src":"5426:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"value","nameLocation":"5446:5:1","nodeType":"VariableDeclaration","scope":381,"src":"5438:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:1"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"5462:0:1"},"scope":651,"src":"5393:300:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"6083:1032:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6097:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:1","typeDescriptions":{}}},"id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":428,"nodeType":"Block","src":"6271:362:1","statements":[{"assignments":[403],"declarations":[{"constant":false,"id":403,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:1","nodeType":"VariableDeclaration","scope":428,"src":"6285:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":407,"initialValue":{"baseExpression":{"id":404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6307:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":406,"indexExpression":{"id":405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6317:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6340:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6354:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":418,"nodeType":"IfStatement","src":"6336:115:1","trueBody":{"id":417,"nodeType":"Block","src":"6361:90:1","statements":[{"errorCall":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6411:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6417:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6430:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"6386:24:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":416,"nodeType":"RevertStatement","src":"6379:57:1"}]}},{"id":427,"nodeType":"UncheckedBlock","src":"6464:159:1","statements":[{"expression":{"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6571:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":421,"indexExpression":{"id":420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"6581:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"6589:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6603:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":426,"nodeType":"ExpressionStatement","src":"6571:37:1"}]}]},"id":429,"nodeType":"IfStatement","src":"6093:540:1","trueBody":{"id":401,"nodeType":"Block","src":"6117:148:1","statements":[{"expression":{"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6233:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6249:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":400,"nodeType":"ExpressionStatement","src":"6233:21:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6647:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:1","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":449,"nodeType":"Block","src":"6862:206:1","statements":[{"id":448,"nodeType":"UncheckedBlock","src":"6876:182:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"7021:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":444,"indexExpression":{"id":443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7031:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7038:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":447,"nodeType":"ExpressionStatement","src":"7021:22:1"}]}]},"id":450,"nodeType":"IfStatement","src":"6643:425:1","trueBody":{"id":441,"nodeType":"Block","src":"6665:191:1","statements":[{"id":440,"nodeType":"UncheckedBlock","src":"6679:167:1","statements":[{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"6810:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"6826:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"6810:21:1"}]}]}},{"eventCall":{"arguments":[{"id":452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7092:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"7098:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7102:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7083:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":456,"nodeType":"EmitStatement","src":"7078:30:1"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"5699:304:1","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:1","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"from","nameLocation":"6033:4:1","nodeType":"VariableDeclaration","scope":458,"src":"6025:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"to","nameLocation":"6047:2:1","nodeType":"VariableDeclaration","scope":458,"src":"6039:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":385,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"value","nameLocation":"6059:5:1","nodeType":"VariableDeclaration","scope":458,"src":"6051:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:1"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"6083:0:1"},"scope":651,"src":"6008:1107:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":490,"nodeType":"Block","src":"7514:152:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7528:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:1","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"IfStatement","src":"7524:91:1","trueBody":{"id":479,"nodeType":"Block","src":"7551:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":473,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:1","typeDescriptions":{}}},"id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"7572:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":478,"nodeType":"RevertStatement","src":"7565:39:1"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:1","typeDescriptions":{}}},"id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7644:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"7653:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7624:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":489,"nodeType":"ExpressionStatement","src":"7624:35:1"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"7121:332:1","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:1","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"account","nameLocation":"7481:7:1","nodeType":"VariableDeclaration","scope":491,"src":"7473:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"value","nameLocation":"7498:5:1","nodeType":"VariableDeclaration","scope":491,"src":"7490:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:1"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"7514:0:1"},"scope":651,"src":"7458:208:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":523,"nodeType":"Block","src":"8040:150:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8054:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:1","typeDescriptions":{}}},"id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":513,"nodeType":"IfStatement","src":"8050:89:1","trueBody":{"id":512,"nodeType":"Block","src":"8077:62:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:1","typeDescriptions":{}}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"8098:18:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":511,"nodeType":"RevertStatement","src":"8091:37:1"}]}},{"expression":{"arguments":[{"id":515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"8156:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:1","typeDescriptions":{}}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":496,"src":"8177:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"8148:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":522,"nodeType":"ExpressionStatement","src":"8148:35:1"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"7672:307:1","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:1","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"account","nameLocation":"8007:7:1","nodeType":"VariableDeclaration","scope":524,"src":"7999:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"value","nameLocation":"8024:5:1","nodeType":"VariableDeclaration","scope":524,"src":"8016:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:1"},"returnParameters":{"id":498,"nodeType":"ParameterList","parameters":[],"src":"8040:0:1"},"scope":651,"src":"7984:206:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":541,"nodeType":"Block","src":"8800:54:1","statements":[{"expression":{"arguments":[{"id":535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"8819:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"8826:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"8835:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"8810:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"8810:37:1"}]},"documentation":{"id":525,"nodeType":"StructuredDocumentation","src":"8196:525:1","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:1","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"8752:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8744:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":529,"mutability":"mutable","name":"spender","nameLocation":"8767:7:1","nodeType":"VariableDeclaration","scope":542,"src":"8759:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"value","nameLocation":"8784:5:1","nodeType":"VariableDeclaration","scope":542,"src":"8776:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:1"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"8800:0:1"},"scope":651,"src":"8726:128:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"9799:334:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"9813:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:1","typeDescriptions":{}}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"IfStatement","src":"9809:89:1","trueBody":{"id":567,"nodeType":"Block","src":"9834:64:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:1","typeDescriptions":{}}},"id":564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"9855:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":566,"nodeType":"RevertStatement","src":"9848:39:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"9911:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":570,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:1","typeDescriptions":{}}},"id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":583,"nodeType":"IfStatement","src":"9907:90:1","trueBody":{"id":582,"nodeType":"Block","src":"9934:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:1","typeDescriptions":{}}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"9955:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":581,"nodeType":"RevertStatement","src":"9948:38:1"}]}},{"expression":{"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"10006:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":587,"indexExpression":{"id":585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10018:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":588,"indexExpression":{"id":586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10025:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10036:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ExpressionStatement","src":"10006:35:1"},{"condition":{"id":592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"10055:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":600,"nodeType":"IfStatement","src":"10051:76:1","trueBody":{"id":599,"nodeType":"Block","src":"10066:61:1","statements":[{"eventCall":{"arguments":[{"id":594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"10094:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"10101:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"10110:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"10085:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"EmitStatement","src":"10080:36:1"}]}}]},"documentation":{"id":543,"nodeType":"StructuredDocumentation","src":"8860:836:1","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:1","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"owner","nameLocation":"9727:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9719:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"spender","nameLocation":"9742:7:1","nodeType":"VariableDeclaration","scope":602,"src":"9734:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"value","nameLocation":"9759:5:1","nodeType":"VariableDeclaration","scope":602,"src":"9751:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":551,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:1","nodeType":"VariableDeclaration","scope":602,"src":"9766:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":550,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:1"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"9799:0:1"},"scope":651,"src":"9701:432:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"10504:387:1","statements":[{"assignments":[613],"declarations":[{"constant":false,"id":613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:1","nodeType":"VariableDeclaration","scope":649,"src":"10514:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":618,"initialValue":{"arguments":[{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10551:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10558:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"10541:9:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10580:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:1","memberName":"max","nodeType":"MemberAccess","src":"10599:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":648,"nodeType":"IfStatement","src":"10576:309:1","trueBody":{"id":647,"nodeType":"Block","src":"10618:267:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10636:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10655:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"10632:130:1","trueBody":{"id":635,"nodeType":"Block","src":"10662:100:1","statements":[{"errorCall":{"arguments":[{"id":630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10714:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10723:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10741:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"10687:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":634,"nodeType":"RevertStatement","src":"10680:67:1"}]}},{"id":646,"nodeType":"UncheckedBlock","src":"10775:100:1","statements":[{"expression":{"arguments":[{"id":638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"10812:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"10819:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"10828:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"10847:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[542,602],"referencedDeclaration":602,"src":"10803:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"10803:57:1"}]}]}}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"10139:271:1","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:1","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"owner","nameLocation":"10448:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10440:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"spender","nameLocation":"10463:7:1","nodeType":"VariableDeclaration","scope":650,"src":"10455:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"value","nameLocation":"10480:5:1","nodeType":"VariableDeclaration","scope":650,"src":"10472:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:1"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"10504:0:1"},"scope":651,"src":"10415:476:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":652,"src":"1106:9787:1","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"105:10789:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[729]},"id":730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"132:71:2","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":729,"linearizedBaseContracts":[729],"name":"IERC20","nameLocation":"214:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"227:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":663,"name":"Transfer","nameLocation":"396:8:2","nodeType":"EventDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:2","nodeType":"VariableDeclaration","scope":663,"src":"405:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:2","nodeType":"VariableDeclaration","scope":663,"src":"427:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:2","nodeType":"VariableDeclaration","scope":663,"src":"447:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:2"},"src":"390:72:2"},{"anonymous":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"468:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":672,"name":"Approval","nameLocation":"627:8:2","nodeType":"EventDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:2","nodeType":"VariableDeclaration","scope":672,"src":"636:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:2","nodeType":"VariableDeclaration","scope":672,"src":"659:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:2","nodeType":"VariableDeclaration","scope":672,"src":"684:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:2"},"src":"621:78:2"},{"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"705:65:2","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"795:2:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":678,"src":"821:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":675,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:2"},"scope":729,"src":"775:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"836:71:2","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":686,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":729,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"986:213:2","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:2","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"to","nameLocation":"1230:2:2","nodeType":"VariableDeclaration","scope":696,"src":"1222:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":691,"mutability":"mutable","name":"value","nameLocation":"1242:5:2","nodeType":"VariableDeclaration","scope":696,"src":"1234:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:2"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"1267:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:2"},"scope":729,"src":"1204:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"1279:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:2","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"1575:5:2","nodeType":"VariableDeclaration","scope":706,"src":"1567:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"1590:7:2","nodeType":"VariableDeclaration","scope":706,"src":"1582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"1622:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:2"},"scope":729,"src":"1548:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"1637:667:2","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:2","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"spender","nameLocation":"2334:7:2","nodeType":"VariableDeclaration","scope":716,"src":"2326:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"value","nameLocation":"2351:5:2","nodeType":"VariableDeclaration","scope":716,"src":"2343:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:2"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"2376:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:2"},"scope":729,"src":"2309:73:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"2388:297:2","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"from","nameLocation":"2720:4:2","nodeType":"VariableDeclaration","scope":728,"src":"2712:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"to","nameLocation":"2734:2:2","nodeType":"VariableDeclaration","scope":728,"src":"2726:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"2746:5:2","nodeType":"VariableDeclaration","scope":728,"src":"2738:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":728,"src":"2771:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":725,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:2"},"scope":729,"src":"2690:87:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":730,"src":"204:2575:2","usedErrors":[],"usedEvents":[663,672]}],"src":"106:2674:2"},"id":2},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[729],"IERC20Metadata":[755]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":730,"src":"151:37:3","symbolAliases":[{"foreign":{"id":732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"159:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":735,"name":"IERC20","nameLocations":["306:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":729,"src":"306:6:3"},"id":736,"nodeType":"InheritanceSpecifier","src":"306:6:3"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"190:87:3","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":755,"linearizedBaseContracts":[755,729],"name":"IERC20Metadata","nameLocation":"288:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"319:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:3","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"391:2:3"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"417:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:3"},"scope":755,"src":"378:54:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"438:56:3","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"514:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":748,"src":"540:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:3"},"scope":755,"src":"499:56:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"561:65:3","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:3","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"648:2:3"},"returnParameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"674:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":751,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:3"},"scope":755,"src":"631:50:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":756,"src":"278:405:3","usedErrors":[],"usedEvents":[663,672]}],"src":"125:559:3"},"id":3},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[785]},"id":786,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"127:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":785,"linearizedBaseContracts":[785],"name":"Context","nameLocation":"642:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":766,"nodeType":"Block","src":"718:34:4","statements":[{"expression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:4","memberName":"sender","nodeType":"MemberAccess","src":"735:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":762,"id":765,"nodeType":"Return","src":"728:17:4"}]},"id":767,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:4","nodeType":"FunctionDefinition","parameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"675:2:4"},"returnParameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"709:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:4"},"scope":785,"src":"656:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":775,"nodeType":"Block","src":"825:32:4","statements":[{"expression":{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:4","memberName":"data","nodeType":"MemberAccess","src":"842:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":771,"id":774,"nodeType":"Return","src":"835:15:4"}]},"id":776,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[],"src":"775:2:4"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":776,"src":"809:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":769,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:4"},"scope":785,"src":"758:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"935:25:4","statements":[{"expression":{"hexValue":"30","id":781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":780,"id":782,"nodeType":"Return","src":"945:8:4"}]},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:4","nodeType":"FunctionDefinition","parameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"892:2:4"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":778,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:4"},"scope":785,"src":"863:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":786,"src":"624:338:4","usedErrors":[],"usedEvents":[]}],"src":"101:862:4"},"id":4},"contracts/ManualToken.sol":{"ast":{"absolutePath":"contracts/ManualToken.sol","exportedSymbols":{"TokenERC20":[1182],"tokenRecipient":[799]},"id":1183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":787,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"33:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"tokenRecipient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":799,"linearizedBaseContracts":[799],"name":"tokenRecipient","nameLocation":"70:14:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8f4ffcb1","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"receiveApproval","nameLocation":"101:15:5","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"_from","nameLocation":"135:5:5","nodeType":"VariableDeclaration","scope":798,"src":"127:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"127:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"_value","nameLocation":"159:6:5","nodeType":"VariableDeclaration","scope":798,"src":"151:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"151:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"_token","nameLocation":"184:6:5","nodeType":"VariableDeclaration","scope":798,"src":"176:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"176:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"_extraData","nameLocation":"216:10:5","nodeType":"VariableDeclaration","scope":798,"src":"201:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":794,"name":"bytes","nodeType":"ElementaryTypeName","src":"201:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"116:117:5"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"242:0:5"},"scope":799,"src":"92:151:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1183,"src":"60:186:5","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"TokenERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1182,"linearizedBaseContracts":[1182],"name":"TokenERC20","nameLocation":"259:10:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"06fdde03","id":801,"mutability":"mutable","name":"name","nameLocation":"329:4:5","nodeType":"VariableDeclaration","scope":1182,"src":"315:18:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":800,"name":"string","nodeType":"ElementaryTypeName","src":"315:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"95d89b41","id":803,"mutability":"mutable","name":"symbol","nameLocation":"354:6:5","nodeType":"VariableDeclaration","scope":1182,"src":"340:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":802,"name":"string","nodeType":"ElementaryTypeName","src":"340:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"313ce567","id":806,"mutability":"mutable","name":"decimals","nameLocation":"380:8:5","nodeType":"VariableDeclaration","scope":1182,"src":"367:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":804,"name":"uint8","nodeType":"ElementaryTypeName","src":"367:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"391:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"public"},{"constant":false,"functionSelector":"18160ddd","id":808,"mutability":"mutable","name":"totalSupply","nameLocation":"488:11:5","nodeType":"VariableDeclaration","scope":1182,"src":"473:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"473:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"70a08231","id":812,"mutability":"mutable","name":"balanceOf","nameLocation":"591:9:5","nodeType":"VariableDeclaration","scope":1182,"src":"556:44:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":811,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"564:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"556:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"dd62ed3e","id":818,"mutability":"mutable","name":"allowance","nameLocation":"662:9:5","nodeType":"VariableDeclaration","scope":1182,"src":"607:64:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":817,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"607:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":816,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"626:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"645:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":826,"name":"Transfer","nameLocation":"767:8:5","nodeType":"EventDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":820,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"792:4:5","nodeType":"VariableDeclaration","scope":826,"src":"776:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":819,"name":"address","nodeType":"ElementaryTypeName","src":"776:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":822,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"814:2:5","nodeType":"VariableDeclaration","scope":826,"src":"798:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"798:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"826:5:5","nodeType":"VariableDeclaration","scope":826,"src":"818:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"775:57:5"},"src":"761:72:5"},{"anonymous":false,"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":834,"name":"Approval","nameLocation":"928:8:5","nodeType":"EventDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"indexed":true,"mutability":"mutable","name":"_owner","nameLocation":"963:6:5","nodeType":"VariableDeclaration","scope":834,"src":"947:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"947:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"indexed":true,"mutability":"mutable","name":"_spender","nameLocation":"996:8:5","nodeType":"VariableDeclaration","scope":834,"src":"980:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"indexed":false,"mutability":"mutable","name":"_value","nameLocation":"1023:6:5","nodeType":"VariableDeclaration","scope":834,"src":"1015:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1015:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"936:100:5"},"src":"922:115:5"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":840,"name":"Burn","nameLocation":"1104:4:5","nodeType":"EventDefinition","parameters":{"id":839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1125:4:5","nodeType":"VariableDeclaration","scope":840,"src":"1109:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"1109:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1139:5:5","nodeType":"VariableDeclaration","scope":840,"src":"1131:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"1131:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1108:37:5"},"src":"1098:48:5"},{"body":{"id":876,"nodeType":"Block","src":"1417:338:5","statements":[{"expression":{"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":850,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1428:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":851,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"1442:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1458:2:5","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[{"id":855,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"1472:8:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1464:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:5","typeDescriptions":{}}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1464:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1458:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1442:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1428:53:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":860,"nodeType":"ExpressionStatement","src":"1428:53:5"},{"expression":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":861,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"1539:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":864,"indexExpression":{"expression":{"id":862,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1549:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1553:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1549:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1539:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":865,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"1563:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1539:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":867,"nodeType":"ExpressionStatement","src":"1539:35:5"},{"expression":{"id":870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":868,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1624:4:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":869,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"1631:9:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1624:16:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":871,"nodeType":"ExpressionStatement","src":"1624:16:5"},{"expression":{"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":872,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"1688:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":873,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"1697:11:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1688:20:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":875,"nodeType":"ExpressionStatement","src":"1688:20:5"}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1154:136:5","text":" Constructor function\n Initializes contract with initial supply tokens to the creator of the contract"},"id":877,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"initialSupply","nameLocation":"1326:13:5","nodeType":"VariableDeclaration","scope":877,"src":"1318:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1318:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"tokenName","nameLocation":"1364:9:5","nodeType":"VariableDeclaration","scope":877,"src":"1350:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":844,"name":"string","nodeType":"ElementaryTypeName","src":"1350:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"tokenSymbol","nameLocation":"1398:11:5","nodeType":"VariableDeclaration","scope":877,"src":"1384:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":846,"name":"string","nodeType":"ElementaryTypeName","src":"1384:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1307:109:5"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"1417:0:5"},"scope":1182,"src":"1296:459:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":956,"nodeType":"Block","src":"1916:786:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"1999:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2014:3:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2006:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"2006:7:5","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2006:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1999:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":887,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1991:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1991:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":895,"nodeType":"ExpressionStatement","src":"1991:28:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":897,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2081:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":899,"indexExpression":{"id":898,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2091:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2081:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":900,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2101:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2081:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2073:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2073:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"2073:35:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":905,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2159:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":907,"indexExpression":{"id":906,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2169:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2159:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":908,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2176:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2159:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":910,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2186:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":912,"indexExpression":{"id":911,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2196:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2186:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2159:41:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2151:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2151:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"ExpressionStatement","src":"2151:50:5"},{"assignments":[917],"declarations":[{"constant":false,"id":917,"mutability":"mutable","name":"previousBalances","nameLocation":"2273:16:5","nodeType":"VariableDeclaration","scope":956,"src":"2265:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":925,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":918,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2292:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":920,"indexExpression":{"id":919,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2302:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2292:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":921,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2311:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":923,"indexExpression":{"id":922,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2321:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2311:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2292:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2265:60:5"},{"expression":{"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":926,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2373:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":928,"indexExpression":{"id":927,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2383:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2373:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":929,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2393:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2373:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":931,"nodeType":"ExpressionStatement","src":"2373:26:5"},{"expression":{"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":932,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2452:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":934,"indexExpression":{"id":933,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2462:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2452:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":935,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2470:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2452:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":937,"nodeType":"ExpressionStatement","src":"2452:24:5"},{"eventCall":{"arguments":[{"id":939,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2501:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":940,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2508:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":941,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"2513:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":938,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"2492:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2492:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"EmitStatement","src":"2487:33:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":945,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2640:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":947,"indexExpression":{"id":946,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"2650:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2640:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":948,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"2659:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":950,"indexExpression":{"id":949,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"2669:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2659:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2640:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":952,"name":"previousBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"2677:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2640:53:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":944,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"2633:6:5","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":955,"nodeType":"ExpressionStatement","src":"2633:61:5"}]},"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"1763:75:5","text":" Internal transfer, only can be called by this contract"},"id":957,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"1853:9:5","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"mutability":"mutable","name":"_from","nameLocation":"1871:5:5","nodeType":"VariableDeclaration","scope":957,"src":"1863:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"1863:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"_to","nameLocation":"1886:3:5","nodeType":"VariableDeclaration","scope":957,"src":"1878:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"_value","nameLocation":"1899:6:5","nodeType":"VariableDeclaration","scope":957,"src":"1891:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1891:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1862:44:5"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"1916:0:5"},"scope":1182,"src":"1844:858:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"3015:75:5","statements":[{"expression":{"arguments":[{"expression":{"id":968,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3036:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3040:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3036:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":960,"src":"3048:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"3053:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3026:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"3026:34:5"},{"expression":{"hexValue":"74727565","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3078:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":966,"id":975,"nodeType":"Return","src":"3071:11:5"}]},"documentation":{"id":958,"nodeType":"StructuredDocumentation","src":"2710:197:5","text":" Transfer tokens\n Send `_value` tokens to `_to` from your account\n @param _to The address of the recipient\n @param _value the amount to send"},"functionSelector":"a9059cbb","id":977,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"2922:8:5","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"_to","nameLocation":"2949:3:5","nodeType":"VariableDeclaration","scope":977,"src":"2941:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"2941:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"_value","nameLocation":"2971:6:5","nodeType":"VariableDeclaration","scope":977,"src":"2963:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"2963:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2930:54:5"},"returnParameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"success","nameLocation":"3006:7:5","nodeType":"VariableDeclaration","scope":977,"src":"3001:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":964,"name":"bool","nodeType":"ElementaryTypeName","src":"3001:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3000:14:5"},"scope":1182,"src":"2913:177:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1017,"nodeType":"Block","src":"3500:196:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3519:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"baseExpression":{"id":991,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3529:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":993,"indexExpression":{"id":992,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3539:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3529:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":996,"indexExpression":{"expression":{"id":994,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3546:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3550:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3546:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3529:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3519:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3511:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3511:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":999,"nodeType":"ExpressionStatement","src":"3511:47:5"},{"expression":{"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1000,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"3588:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1004,"indexExpression":{"id":1001,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3598:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3588:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"expression":{"id":1002,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3605:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3609:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3605:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3588:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1006,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3620:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3588:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1008,"nodeType":"ExpressionStatement","src":"3588:38:5"},{"expression":{"arguments":[{"id":1010,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"3647:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"3654:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1012,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"3659:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1009,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"3637:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3637:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"3637:29:5"},{"expression":{"hexValue":"74727565","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3684:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":988,"id":1016,"nodeType":"Return","src":"3677:11:5"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"3098:266:5","text":" Transfer tokens from other address\n Send `_value` tokens to `_to` on behalf of `_from`\n @param _from The address of the sender\n @param _to The address of the recipient\n @param _value the amount to send"},"functionSelector":"23b872dd","id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3379:12:5","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"_from","nameLocation":"3410:5:5","nodeType":"VariableDeclaration","scope":1018,"src":"3402:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"3402:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"_to","nameLocation":"3434:3:5","nodeType":"VariableDeclaration","scope":1018,"src":"3426:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"3426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"_value","nameLocation":"3456:6:5","nodeType":"VariableDeclaration","scope":1018,"src":"3448:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"3448:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3391:78:5"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"success","nameLocation":"3491:7:5","nodeType":"VariableDeclaration","scope":1018,"src":"3486:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":986,"name":"bool","nodeType":"ElementaryTypeName","src":"3486:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3485:14:5"},"scope":1182,"src":"3370:326:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1046,"nodeType":"Block","src":"4071:135:5","statements":[{"expression":{"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1028,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"4082:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1032,"indexExpression":{"expression":{"id":1029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4092:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4096:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4092:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4082:21:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1033,"indexExpression":{"id":1031,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4104:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4082:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1034,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"4116:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4082:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1036,"nodeType":"ExpressionStatement","src":"4082:40:5"},{"eventCall":{"arguments":[{"expression":{"id":1038,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4147:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4151:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4147:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4159:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"4169:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1037,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4138:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"EmitStatement","src":"4133:43:5"},{"expression":{"hexValue":"74727565","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4194:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1027,"id":1045,"nodeType":"Return","src":"4187:11:5"}]},"documentation":{"id":1019,"nodeType":"StructuredDocumentation","src":"3704:255:5","text":" Set allowance for other address\n Allows `_spender` to spend no more than `_value` tokens on your behalf\n @param _spender The address authorized to spend\n @param _value the max amount they can spend"},"functionSelector":"095ea7b3","id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3974:7:5","nodeType":"FunctionDefinition","parameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1021,"mutability":"mutable","name":"_spender","nameLocation":"4000:8:5","nodeType":"VariableDeclaration","scope":1047,"src":"3992:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"3992:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"_value","nameLocation":"4027:6:5","nodeType":"VariableDeclaration","scope":1047,"src":"4019:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4019:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3981:59:5"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1026,"mutability":"mutable","name":"success","nameLocation":"4062:7:5","nodeType":"VariableDeclaration","scope":1047,"src":"4057:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1025,"name":"bool","nodeType":"ElementaryTypeName","src":"4057:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4056:14:5"},"scope":1182,"src":"3965:241:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1087,"nodeType":"Block","src":"4752:315:5","statements":[{"assignments":[1061],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"spender","nameLocation":"4778:7:5","nodeType":"VariableDeclaration","scope":1087,"src":"4763:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"},"typeName":{"id":1060,"nodeType":"UserDefinedTypeName","pathNode":{"id":1059,"name":"tokenRecipient","nameLocations":["4763:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"4763:14:5"},"referencedDeclaration":799,"src":"4763:14:5","typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"id":1063,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4803:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1062,"name":"tokenRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"4788:14:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_tokenRecipient_$799_$","typeString":"type(contract tokenRecipient)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4788:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"}},"nodeType":"VariableDeclarationStatement","src":"4763:49:5"},{"condition":{"arguments":[{"id":1067,"name":"_spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"4835:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4845:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"4827:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4827:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1086,"nodeType":"IfStatement","src":"4823:237:5","trueBody":{"id":1085,"nodeType":"Block","src":"4854:206:5","statements":[{"expression":{"arguments":[{"expression":{"id":1073,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4911:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4915:6:5","memberName":"sender","nodeType":"MemberAccess","src":"4911:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4940:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1078,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4973:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_TokenERC20_$1182","typeString":"contract TokenERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TokenERC20_$1182","typeString":"contract TokenERC20"}],"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4965:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"4965:7:5","typeDescriptions":{}}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4965:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"4997:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1070,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"4869:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_tokenRecipient_$799","typeString":"contract tokenRecipient"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4877:15:5","memberName":"receiveApproval","nodeType":"MemberAccess","referencedDeclaration":798,"src":"4869:23:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,address,bytes memory) external"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:153:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"ExpressionStatement","src":"4869:153:5"},{"expression":{"hexValue":"74727565","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5044:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1058,"id":1084,"nodeType":"Return","src":"5037:11:5"}]}}]},"documentation":{"id":1048,"nodeType":"StructuredDocumentation","src":"4214:385:5","text":" Set allowance for other address and notify\n Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\n @param _spender The address authorized to spend\n @param _value the max amount they can spend\n @param _extraData some extra information to send to the approved contract"},"functionSelector":"cae9ca51","id":1088,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4614:14:5","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1050,"mutability":"mutable","name":"_spender","nameLocation":"4647:8:5","nodeType":"VariableDeclaration","scope":1088,"src":"4639:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1049,"name":"address","nodeType":"ElementaryTypeName","src":"4639:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1052,"mutability":"mutable","name":"_value","nameLocation":"4674:6:5","nodeType":"VariableDeclaration","scope":1088,"src":"4666:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"_extraData","nameLocation":"4704:10:5","nodeType":"VariableDeclaration","scope":1088,"src":"4691:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"4691:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4628:93:5"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"success","nameLocation":"4743:7:5","nodeType":"VariableDeclaration","scope":1088,"src":"4738:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1056,"name":"bool","nodeType":"ElementaryTypeName","src":"4738:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4737:14:5"},"scope":1182,"src":"4605:462:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1124,"nodeType":"Block","src":"5302:280:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1097,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5321:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1100,"indexExpression":{"expression":{"id":1098,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5331:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5335:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5331:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5321:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1101,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5346:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5321:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5313:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"ExpressionStatement","src":"5313:40:5"},{"expression":{"id":1110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1105,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5398:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1108,"indexExpression":{"expression":{"id":1106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5408:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5412:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5408:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5398:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1109,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5423:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5398:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1111,"nodeType":"ExpressionStatement","src":"5398:31:5"},{"expression":{"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1112,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"5468:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1113,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5483:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5468:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1115,"nodeType":"ExpressionStatement","src":"5468:21:5"},{"eventCall":{"arguments":[{"expression":{"id":1117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5533:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5537:6:5","memberName":"sender","nodeType":"MemberAccess","src":"5533:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1119,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"5545:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1116,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"5528:4:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5528:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"EmitStatement","src":"5523:29:5"},{"expression":{"hexValue":"74727565","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5570:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1095,"id":1123,"nodeType":"Return","src":"5563:11:5"}]},"documentation":{"id":1089,"nodeType":"StructuredDocumentation","src":"5075:161:5","text":" Destroy tokens\n Remove `_value` tokens from the system irreversibly\n @param _value the amount of money to burn"},"functionSelector":"42966c68","id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"5251:4:5","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"mutability":"mutable","name":"_value","nameLocation":"5264:6:5","nodeType":"VariableDeclaration","scope":1125,"src":"5256:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5255:16:5"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"mutability":"mutable","name":"success","nameLocation":"5293:7:5","nodeType":"VariableDeclaration","scope":1125,"src":"5288:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1093,"name":"bool","nodeType":"ElementaryTypeName","src":"5288:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5287:14:5"},"scope":1182,"src":"5242:340:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1180,"nodeType":"Block","src":"5949:449:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1136,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"5968:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1138,"indexExpression":{"id":1137,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"5978:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5968:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1139,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"5988:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5968:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1135,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5960:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"5960:35:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1144,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6057:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"baseExpression":{"id":1145,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"6067:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1147,"indexExpression":{"id":1146,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6077:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6067:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1150,"indexExpression":{"expression":{"id":1148,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6084:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6088:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6084:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6067:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6057:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6049:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6049:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"ExpressionStatement","src":"6049:47:5"},{"expression":{"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1154,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"6126:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1156,"indexExpression":{"id":1155,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6136:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6126:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1157,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6146:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1159,"nodeType":"ExpressionStatement","src":"6126:26:5"},{"expression":{"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1160,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"6201:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1164,"indexExpression":{"id":1161,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6211:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6201:16:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1165,"indexExpression":{"expression":{"id":1162,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6218:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6222:6:5","memberName":"sender","nodeType":"MemberAccess","src":"6218:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6201:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1166,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6233:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6201:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1168,"nodeType":"ExpressionStatement","src":"6201:38:5"},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1169,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"6290:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1170,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6305:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6290:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"nodeType":"ExpressionStatement","src":"6290:21:5"},{"eventCall":{"arguments":[{"id":1174,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"6354:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6361:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1173,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"6349:4:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6349:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1177,"nodeType":"EmitStatement","src":"6344:24:5"},{"expression":{"hexValue":"74727565","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6386:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1134,"id":1179,"nodeType":"Return","src":"6379:11:5"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"5590:249:5","text":" Destroy tokens from other account\n Remove `_value` tokens from the system irreversibly on behalf of `_from`.\n @param _from the address of the sender\n @param _value the amount of money to burn"},"functionSelector":"79cc6790","id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"5854:8:5","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"_from","nameLocation":"5881:5:5","nodeType":"VariableDeclaration","scope":1181,"src":"5873:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"5873:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"_value","nameLocation":"5905:6:5","nodeType":"VariableDeclaration","scope":1181,"src":"5897:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"5897:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:56:5"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"success","nameLocation":"5940:7:5","nodeType":"VariableDeclaration","scope":1181,"src":"5935:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1132,"name":"bool","nodeType":"ElementaryTypeName","src":"5935:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5934:14:5"},"scope":1182,"src":"5845:553:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1183,"src":"250:6151:5","usedErrors":[],"usedEvents":[826,834,840]}],"src":"33:7102:5"},"id":5},"contracts/OurToken.sol":{"ast":{"absolutePath":"contracts/OurToken.sol","exportedSymbols":{"Context":[785],"ERC20":[651],"IERC20":[729],"IERC20Errors":[41],"IERC20Metadata":[755],"OurToken":[1204]},"id":1205,"license":"SEE LICENSE IN LICENSE","nodeType":"SourceUnit","nodes":[{"id":1184,"literals":["solidity","^","0.8",".3"],"nodeType":"PragmaDirective","src":"52:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1185,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1205,"sourceUnit":652,"src":"77:55:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1186,"name":"ERC20","nameLocations":["157:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"157:5:6"},"id":1187,"nodeType":"InheritanceSpecifier","src":"157:5:6"}],"canonicalName":"OurToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1204,"linearizedBaseContracts":[1204,651,41,755,729,785],"name":"OurToken","nameLocation":"145:8:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1202,"nodeType":"Block","src":"229:51:6","statements":[{"expression":{"arguments":[{"expression":{"id":1197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"246:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"250:6:6","memberName":"sender","nodeType":"MemberAccess","src":"246:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"258:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1196,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"240:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"240:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1201,"nodeType":"ExpressionStatement","src":"240:32:6"}]},"id":1203,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4f7572546f6b656e","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"211:10:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_435fb702632fb0697ac03d8afd60d433b0e205993c6b5df1d928bad84d744bd9","typeString":"literal_string \"OurToken\""},"value":"OurToken"},{"hexValue":"4f54","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:4:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_44e9633a7b01361224d6e63fccabb8202c30f9e8afab72c39de8073170153503","typeString":"literal_string \"OT\""},"value":"OT"}],"id":1194,"kind":"baseConstructorSpecifier","modifierName":{"id":1191,"name":"ERC20","nameLocations":["205:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":651,"src":"205:5:6"},"nodeType":"ModifierInvocation","src":"205:23:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"initialSupply","nameLocation":"190:13:6","nodeType":"VariableDeclaration","scope":1203,"src":"182:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"182:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"181:23:6"},"returnParameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"229:0:6"},"scope":1204,"src":"170:110:6","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1205,"src":"136:147:6","usedErrors":[11,16,21,30,35,40],"usedEvents":[663,672]}],"src":"52:231:6"},"id":6}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC-20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ManualToken.sol":{"TokenERC20":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"},{"internalType":"string","name":"tokenName","type":"string"},{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_owner","type":"address"},{"indexed":true,"internalType":"address","name":"_spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"_value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_spender","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burn","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"burnFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"params":{"_spender":"The address authorized to spend","_value":"the max amount they can spend"}},"approveAndCall(address,uint256,bytes)":{"params":{"_extraData":"some extra information to send to the approved contract","_spender":"The address authorized to spend","_value":"the max amount they can spend"}},"burn(uint256)":{"params":{"_value":"the amount of money to burn"}},"burnFrom(address,uint256)":{"params":{"_from":"the address of the sender","_value":"the amount of money to burn"}},"transfer(address,uint256)":{"params":{"_to":"The address of the recipient","_value":"the amount to send"}},"transferFrom(address,address,uint256)":{"params":{"_from":"The address of the sender","_to":"The address of the recipient","_value":"the amount to send"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_877":{"entryPoint":null,"id":877,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":551,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":617,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":289,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":663,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_memory":{"entryPoint":433,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":236,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":460,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1404,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1297,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_helper":{"entryPoint":862,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint256":{"entryPoint":1156,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":945,"id":null,"parameterSlots":3,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1231,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1691,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":256,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1656,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1546,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1832,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":509,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1425,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1355,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1804,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":384,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1536,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1774,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":802,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1308,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":337,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1580,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":310,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":315,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":251,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":246,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":320,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1441,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":849,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1761,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1632,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1454,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1590,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":266,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1627,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:11943:7","nodeType":"YulBlock","src":"0:11943:7","statements":[{"body":{"nativeSrc":"47:35:7","nodeType":"YulBlock","src":"47:35:7","statements":[{"nativeSrc":"57:19:7","nodeType":"YulAssignment","src":"57:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:7","nodeType":"YulLiteral","src":"73:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:7","nodeType":"YulIdentifier","src":"67:5:7"},"nativeSrc":"67:9:7","nodeType":"YulFunctionCall","src":"67:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:7","nodeType":"YulIdentifier","src":"57:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:7","nodeType":"YulTypedName","src":"40:6:7","type":""}],"src":"7:75:7"},{"body":{"nativeSrc":"177:28:7","nodeType":"YulBlock","src":"177:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:7","nodeType":"YulLiteral","src":"194:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:7","nodeType":"YulLiteral","src":"197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:7","nodeType":"YulIdentifier","src":"187:6:7"},"nativeSrc":"187:12:7","nodeType":"YulFunctionCall","src":"187:12:7"},"nativeSrc":"187:12:7","nodeType":"YulExpressionStatement","src":"187:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:7","nodeType":"YulFunctionDefinition","src":"88:117:7"},{"body":{"nativeSrc":"300:28:7","nodeType":"YulBlock","src":"300:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:7","nodeType":"YulLiteral","src":"317:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:7","nodeType":"YulLiteral","src":"320:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:7","nodeType":"YulIdentifier","src":"310:6:7"},"nativeSrc":"310:12:7","nodeType":"YulFunctionCall","src":"310:12:7"},"nativeSrc":"310:12:7","nodeType":"YulExpressionStatement","src":"310:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:7","nodeType":"YulFunctionDefinition","src":"211:117:7"},{"body":{"nativeSrc":"379:32:7","nodeType":"YulBlock","src":"379:32:7","statements":[{"nativeSrc":"389:16:7","nodeType":"YulAssignment","src":"389:16:7","value":{"name":"value","nativeSrc":"400:5:7","nodeType":"YulIdentifier","src":"400:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:7","nodeType":"YulIdentifier","src":"389:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:7","nodeType":"YulTypedName","src":"361:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:7","nodeType":"YulTypedName","src":"371:7:7","type":""}],"src":"334:77:7"},{"body":{"nativeSrc":"460:79:7","nodeType":"YulBlock","src":"460:79:7","statements":[{"body":{"nativeSrc":"517:16:7","nodeType":"YulBlock","src":"517:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:7","nodeType":"YulLiteral","src":"526:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:7","nodeType":"YulLiteral","src":"529:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:7","nodeType":"YulIdentifier","src":"519:6:7"},"nativeSrc":"519:12:7","nodeType":"YulFunctionCall","src":"519:12:7"},"nativeSrc":"519:12:7","nodeType":"YulExpressionStatement","src":"519:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:7","nodeType":"YulIdentifier","src":"483:5:7"},{"arguments":[{"name":"value","nativeSrc":"508:5:7","nodeType":"YulIdentifier","src":"508:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:7","nodeType":"YulIdentifier","src":"490:17:7"},"nativeSrc":"490:24:7","nodeType":"YulFunctionCall","src":"490:24:7"}],"functionName":{"name":"eq","nativeSrc":"480:2:7","nodeType":"YulIdentifier","src":"480:2:7"},"nativeSrc":"480:35:7","nodeType":"YulFunctionCall","src":"480:35:7"}],"functionName":{"name":"iszero","nativeSrc":"473:6:7","nodeType":"YulIdentifier","src":"473:6:7"},"nativeSrc":"473:43:7","nodeType":"YulFunctionCall","src":"473:43:7"},"nativeSrc":"470:63:7","nodeType":"YulIf","src":"470:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:7","nodeType":"YulTypedName","src":"453:5:7","type":""}],"src":"417:122:7"},{"body":{"nativeSrc":"608:80:7","nodeType":"YulBlock","src":"608:80:7","statements":[{"nativeSrc":"618:22:7","nodeType":"YulAssignment","src":"618:22:7","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:7","nodeType":"YulIdentifier","src":"633:6:7"}],"functionName":{"name":"mload","nativeSrc":"627:5:7","nodeType":"YulIdentifier","src":"627:5:7"},"nativeSrc":"627:13:7","nodeType":"YulFunctionCall","src":"627:13:7"},"variableNames":[{"name":"value","nativeSrc":"618:5:7","nodeType":"YulIdentifier","src":"618:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:7","nodeType":"YulIdentifier","src":"676:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:7","nodeType":"YulIdentifier","src":"649:26:7"},"nativeSrc":"649:33:7","nodeType":"YulFunctionCall","src":"649:33:7"},"nativeSrc":"649:33:7","nodeType":"YulExpressionStatement","src":"649:33:7"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:7","nodeType":"YulTypedName","src":"586:6:7","type":""},{"name":"end","nativeSrc":"594:3:7","nodeType":"YulTypedName","src":"594:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:7","nodeType":"YulTypedName","src":"602:5:7","type":""}],"src":"545:143:7"},{"body":{"nativeSrc":"783:28:7","nodeType":"YulBlock","src":"783:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"800:1:7","nodeType":"YulLiteral","src":"800:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"803:1:7","nodeType":"YulLiteral","src":"803:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"793:6:7","nodeType":"YulIdentifier","src":"793:6:7"},"nativeSrc":"793:12:7","nodeType":"YulFunctionCall","src":"793:12:7"},"nativeSrc":"793:12:7","nodeType":"YulExpressionStatement","src":"793:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"694:117:7","nodeType":"YulFunctionDefinition","src":"694:117:7"},{"body":{"nativeSrc":"906:28:7","nodeType":"YulBlock","src":"906:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"923:1:7","nodeType":"YulLiteral","src":"923:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"926:1:7","nodeType":"YulLiteral","src":"926:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"916:6:7","nodeType":"YulIdentifier","src":"916:6:7"},"nativeSrc":"916:12:7","nodeType":"YulFunctionCall","src":"916:12:7"},"nativeSrc":"916:12:7","nodeType":"YulExpressionStatement","src":"916:12:7"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"817:117:7","nodeType":"YulFunctionDefinition","src":"817:117:7"},{"body":{"nativeSrc":"988:54:7","nodeType":"YulBlock","src":"988:54:7","statements":[{"nativeSrc":"998:38:7","nodeType":"YulAssignment","src":"998:38:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1016:5:7","nodeType":"YulIdentifier","src":"1016:5:7"},{"kind":"number","nativeSrc":"1023:2:7","nodeType":"YulLiteral","src":"1023:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1012:3:7","nodeType":"YulIdentifier","src":"1012:3:7"},"nativeSrc":"1012:14:7","nodeType":"YulFunctionCall","src":"1012:14:7"},{"arguments":[{"kind":"number","nativeSrc":"1032:2:7","nodeType":"YulLiteral","src":"1032:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1028:3:7","nodeType":"YulIdentifier","src":"1028:3:7"},"nativeSrc":"1028:7:7","nodeType":"YulFunctionCall","src":"1028:7:7"}],"functionName":{"name":"and","nativeSrc":"1008:3:7","nodeType":"YulIdentifier","src":"1008:3:7"},"nativeSrc":"1008:28:7","nodeType":"YulFunctionCall","src":"1008:28:7"},"variableNames":[{"name":"result","nativeSrc":"998:6:7","nodeType":"YulIdentifier","src":"998:6:7"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"940:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"971:5:7","nodeType":"YulTypedName","src":"971:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"981:6:7","nodeType":"YulTypedName","src":"981:6:7","type":""}],"src":"940:102:7"},{"body":{"nativeSrc":"1076:152:7","nodeType":"YulBlock","src":"1076:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1093:1:7","nodeType":"YulLiteral","src":"1093:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1096:77:7","nodeType":"YulLiteral","src":"1096:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1086:6:7","nodeType":"YulIdentifier","src":"1086:6:7"},"nativeSrc":"1086:88:7","nodeType":"YulFunctionCall","src":"1086:88:7"},"nativeSrc":"1086:88:7","nodeType":"YulExpressionStatement","src":"1086:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1190:1:7","nodeType":"YulLiteral","src":"1190:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"1193:4:7","nodeType":"YulLiteral","src":"1193:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1183:6:7","nodeType":"YulIdentifier","src":"1183:6:7"},"nativeSrc":"1183:15:7","nodeType":"YulFunctionCall","src":"1183:15:7"},"nativeSrc":"1183:15:7","nodeType":"YulExpressionStatement","src":"1183:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:7","nodeType":"YulLiteral","src":"1214:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:4:7","nodeType":"YulLiteral","src":"1217:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1207:6:7","nodeType":"YulIdentifier","src":"1207:6:7"},"nativeSrc":"1207:15:7","nodeType":"YulFunctionCall","src":"1207:15:7"},"nativeSrc":"1207:15:7","nodeType":"YulExpressionStatement","src":"1207:15:7"}]},"name":"panic_error_0x41","nativeSrc":"1048:180:7","nodeType":"YulFunctionDefinition","src":"1048:180:7"},{"body":{"nativeSrc":"1277:238:7","nodeType":"YulBlock","src":"1277:238:7","statements":[{"nativeSrc":"1287:58:7","nodeType":"YulVariableDeclaration","src":"1287:58:7","value":{"arguments":[{"name":"memPtr","nativeSrc":"1309:6:7","nodeType":"YulIdentifier","src":"1309:6:7"},{"arguments":[{"name":"size","nativeSrc":"1339:4:7","nodeType":"YulIdentifier","src":"1339:4:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1317:21:7","nodeType":"YulIdentifier","src":"1317:21:7"},"nativeSrc":"1317:27:7","nodeType":"YulFunctionCall","src":"1317:27:7"}],"functionName":{"name":"add","nativeSrc":"1305:3:7","nodeType":"YulIdentifier","src":"1305:3:7"},"nativeSrc":"1305:40:7","nodeType":"YulFunctionCall","src":"1305:40:7"},"variables":[{"name":"newFreePtr","nativeSrc":"1291:10:7","nodeType":"YulTypedName","src":"1291:10:7","type":""}]},{"body":{"nativeSrc":"1456:22:7","nodeType":"YulBlock","src":"1456:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1458:16:7","nodeType":"YulIdentifier","src":"1458:16:7"},"nativeSrc":"1458:18:7","nodeType":"YulFunctionCall","src":"1458:18:7"},"nativeSrc":"1458:18:7","nodeType":"YulExpressionStatement","src":"1458:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1399:10:7","nodeType":"YulIdentifier","src":"1399:10:7"},{"kind":"number","nativeSrc":"1411:18:7","nodeType":"YulLiteral","src":"1411:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1396:2:7","nodeType":"YulIdentifier","src":"1396:2:7"},"nativeSrc":"1396:34:7","nodeType":"YulFunctionCall","src":"1396:34:7"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1435:10:7","nodeType":"YulIdentifier","src":"1435:10:7"},{"name":"memPtr","nativeSrc":"1447:6:7","nodeType":"YulIdentifier","src":"1447:6:7"}],"functionName":{"name":"lt","nativeSrc":"1432:2:7","nodeType":"YulIdentifier","src":"1432:2:7"},"nativeSrc":"1432:22:7","nodeType":"YulFunctionCall","src":"1432:22:7"}],"functionName":{"name":"or","nativeSrc":"1393:2:7","nodeType":"YulIdentifier","src":"1393:2:7"},"nativeSrc":"1393:62:7","nodeType":"YulFunctionCall","src":"1393:62:7"},"nativeSrc":"1390:88:7","nodeType":"YulIf","src":"1390:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1494:2:7","nodeType":"YulLiteral","src":"1494:2:7","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1498:10:7","nodeType":"YulIdentifier","src":"1498:10:7"}],"functionName":{"name":"mstore","nativeSrc":"1487:6:7","nodeType":"YulIdentifier","src":"1487:6:7"},"nativeSrc":"1487:22:7","nodeType":"YulFunctionCall","src":"1487:22:7"},"nativeSrc":"1487:22:7","nodeType":"YulExpressionStatement","src":"1487:22:7"}]},"name":"finalize_allocation","nativeSrc":"1234:281:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1263:6:7","nodeType":"YulTypedName","src":"1263:6:7","type":""},{"name":"size","nativeSrc":"1271:4:7","nodeType":"YulTypedName","src":"1271:4:7","type":""}],"src":"1234:281:7"},{"body":{"nativeSrc":"1562:88:7","nodeType":"YulBlock","src":"1562:88:7","statements":[{"nativeSrc":"1572:30:7","nodeType":"YulAssignment","src":"1572:30:7","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1582:18:7","nodeType":"YulIdentifier","src":"1582:18:7"},"nativeSrc":"1582:20:7","nodeType":"YulFunctionCall","src":"1582:20:7"},"variableNames":[{"name":"memPtr","nativeSrc":"1572:6:7","nodeType":"YulIdentifier","src":"1572:6:7"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1631:6:7","nodeType":"YulIdentifier","src":"1631:6:7"},{"name":"size","nativeSrc":"1639:4:7","nodeType":"YulIdentifier","src":"1639:4:7"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1611:19:7","nodeType":"YulIdentifier","src":"1611:19:7"},"nativeSrc":"1611:33:7","nodeType":"YulFunctionCall","src":"1611:33:7"},"nativeSrc":"1611:33:7","nodeType":"YulExpressionStatement","src":"1611:33:7"}]},"name":"allocate_memory","nativeSrc":"1521:129:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1546:4:7","nodeType":"YulTypedName","src":"1546:4:7","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1555:6:7","nodeType":"YulTypedName","src":"1555:6:7","type":""}],"src":"1521:129:7"},{"body":{"nativeSrc":"1723:241:7","nodeType":"YulBlock","src":"1723:241:7","statements":[{"body":{"nativeSrc":"1828:22:7","nodeType":"YulBlock","src":"1828:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1830:16:7","nodeType":"YulIdentifier","src":"1830:16:7"},"nativeSrc":"1830:18:7","nodeType":"YulFunctionCall","src":"1830:18:7"},"nativeSrc":"1830:18:7","nodeType":"YulExpressionStatement","src":"1830:18:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1800:6:7","nodeType":"YulIdentifier","src":"1800:6:7"},{"kind":"number","nativeSrc":"1808:18:7","nodeType":"YulLiteral","src":"1808:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1797:2:7","nodeType":"YulIdentifier","src":"1797:2:7"},"nativeSrc":"1797:30:7","nodeType":"YulFunctionCall","src":"1797:30:7"},"nativeSrc":"1794:56:7","nodeType":"YulIf","src":"1794:56:7"},{"nativeSrc":"1860:37:7","nodeType":"YulAssignment","src":"1860:37:7","value":{"arguments":[{"name":"length","nativeSrc":"1890:6:7","nodeType":"YulIdentifier","src":"1890:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1868:21:7","nodeType":"YulIdentifier","src":"1868:21:7"},"nativeSrc":"1868:29:7","nodeType":"YulFunctionCall","src":"1868:29:7"},"variableNames":[{"name":"size","nativeSrc":"1860:4:7","nodeType":"YulIdentifier","src":"1860:4:7"}]},{"nativeSrc":"1934:23:7","nodeType":"YulAssignment","src":"1934:23:7","value":{"arguments":[{"name":"size","nativeSrc":"1946:4:7","nodeType":"YulIdentifier","src":"1946:4:7"},{"kind":"number","nativeSrc":"1952:4:7","nodeType":"YulLiteral","src":"1952:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1942:3:7","nodeType":"YulIdentifier","src":"1942:3:7"},"nativeSrc":"1942:15:7","nodeType":"YulFunctionCall","src":"1942:15:7"},"variableNames":[{"name":"size","nativeSrc":"1934:4:7","nodeType":"YulIdentifier","src":"1934:4:7"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1656:308:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1707:6:7","nodeType":"YulTypedName","src":"1707:6:7","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1718:4:7","nodeType":"YulTypedName","src":"1718:4:7","type":""}],"src":"1656:308:7"},{"body":{"nativeSrc":"2032:186:7","nodeType":"YulBlock","src":"2032:186:7","statements":[{"nativeSrc":"2043:10:7","nodeType":"YulVariableDeclaration","src":"2043:10:7","value":{"kind":"number","nativeSrc":"2052:1:7","nodeType":"YulLiteral","src":"2052:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2047:1:7","nodeType":"YulTypedName","src":"2047:1:7","type":""}]},{"body":{"nativeSrc":"2112:63:7","nodeType":"YulBlock","src":"2112:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2137:3:7","nodeType":"YulIdentifier","src":"2137:3:7"},{"name":"i","nativeSrc":"2142:1:7","nodeType":"YulIdentifier","src":"2142:1:7"}],"functionName":{"name":"add","nativeSrc":"2133:3:7","nodeType":"YulIdentifier","src":"2133:3:7"},"nativeSrc":"2133:11:7","nodeType":"YulFunctionCall","src":"2133:11:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2156:3:7","nodeType":"YulIdentifier","src":"2156:3:7"},{"name":"i","nativeSrc":"2161:1:7","nodeType":"YulIdentifier","src":"2161:1:7"}],"functionName":{"name":"add","nativeSrc":"2152:3:7","nodeType":"YulIdentifier","src":"2152:3:7"},"nativeSrc":"2152:11:7","nodeType":"YulFunctionCall","src":"2152:11:7"}],"functionName":{"name":"mload","nativeSrc":"2146:5:7","nodeType":"YulIdentifier","src":"2146:5:7"},"nativeSrc":"2146:18:7","nodeType":"YulFunctionCall","src":"2146:18:7"}],"functionName":{"name":"mstore","nativeSrc":"2126:6:7","nodeType":"YulIdentifier","src":"2126:6:7"},"nativeSrc":"2126:39:7","nodeType":"YulFunctionCall","src":"2126:39:7"},"nativeSrc":"2126:39:7","nodeType":"YulExpressionStatement","src":"2126:39:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2073:1:7","nodeType":"YulIdentifier","src":"2073:1:7"},{"name":"length","nativeSrc":"2076:6:7","nodeType":"YulIdentifier","src":"2076:6:7"}],"functionName":{"name":"lt","nativeSrc":"2070:2:7","nodeType":"YulIdentifier","src":"2070:2:7"},"nativeSrc":"2070:13:7","nodeType":"YulFunctionCall","src":"2070:13:7"},"nativeSrc":"2062:113:7","nodeType":"YulForLoop","post":{"nativeSrc":"2084:19:7","nodeType":"YulBlock","src":"2084:19:7","statements":[{"nativeSrc":"2086:15:7","nodeType":"YulAssignment","src":"2086:15:7","value":{"arguments":[{"name":"i","nativeSrc":"2095:1:7","nodeType":"YulIdentifier","src":"2095:1:7"},{"kind":"number","nativeSrc":"2098:2:7","nodeType":"YulLiteral","src":"2098:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2091:3:7","nodeType":"YulIdentifier","src":"2091:3:7"},"nativeSrc":"2091:10:7","nodeType":"YulFunctionCall","src":"2091:10:7"},"variableNames":[{"name":"i","nativeSrc":"2086:1:7","nodeType":"YulIdentifier","src":"2086:1:7"}]}]},"pre":{"nativeSrc":"2066:3:7","nodeType":"YulBlock","src":"2066:3:7","statements":[]},"src":"2062:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2195:3:7","nodeType":"YulIdentifier","src":"2195:3:7"},{"name":"length","nativeSrc":"2200:6:7","nodeType":"YulIdentifier","src":"2200:6:7"}],"functionName":{"name":"add","nativeSrc":"2191:3:7","nodeType":"YulIdentifier","src":"2191:3:7"},"nativeSrc":"2191:16:7","nodeType":"YulFunctionCall","src":"2191:16:7"},{"kind":"number","nativeSrc":"2209:1:7","nodeType":"YulLiteral","src":"2209:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2184:6:7","nodeType":"YulIdentifier","src":"2184:6:7"},"nativeSrc":"2184:27:7","nodeType":"YulFunctionCall","src":"2184:27:7"},"nativeSrc":"2184:27:7","nodeType":"YulExpressionStatement","src":"2184:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1970:248:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2014:3:7","nodeType":"YulTypedName","src":"2014:3:7","type":""},{"name":"dst","nativeSrc":"2019:3:7","nodeType":"YulTypedName","src":"2019:3:7","type":""},{"name":"length","nativeSrc":"2024:6:7","nodeType":"YulTypedName","src":"2024:6:7","type":""}],"src":"1970:248:7"},{"body":{"nativeSrc":"2319:339:7","nodeType":"YulBlock","src":"2319:339:7","statements":[{"nativeSrc":"2329:75:7","nodeType":"YulAssignment","src":"2329:75:7","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2396:6:7","nodeType":"YulIdentifier","src":"2396:6:7"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2354:41:7","nodeType":"YulIdentifier","src":"2354:41:7"},"nativeSrc":"2354:49:7","nodeType":"YulFunctionCall","src":"2354:49:7"}],"functionName":{"name":"allocate_memory","nativeSrc":"2338:15:7","nodeType":"YulIdentifier","src":"2338:15:7"},"nativeSrc":"2338:66:7","nodeType":"YulFunctionCall","src":"2338:66:7"},"variableNames":[{"name":"array","nativeSrc":"2329:5:7","nodeType":"YulIdentifier","src":"2329:5:7"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2420:5:7","nodeType":"YulIdentifier","src":"2420:5:7"},{"name":"length","nativeSrc":"2427:6:7","nodeType":"YulIdentifier","src":"2427:6:7"}],"functionName":{"name":"mstore","nativeSrc":"2413:6:7","nodeType":"YulIdentifier","src":"2413:6:7"},"nativeSrc":"2413:21:7","nodeType":"YulFunctionCall","src":"2413:21:7"},"nativeSrc":"2413:21:7","nodeType":"YulExpressionStatement","src":"2413:21:7"},{"nativeSrc":"2443:27:7","nodeType":"YulVariableDeclaration","src":"2443:27:7","value":{"arguments":[{"name":"array","nativeSrc":"2458:5:7","nodeType":"YulIdentifier","src":"2458:5:7"},{"kind":"number","nativeSrc":"2465:4:7","nodeType":"YulLiteral","src":"2465:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2454:3:7","nodeType":"YulIdentifier","src":"2454:3:7"},"nativeSrc":"2454:16:7","nodeType":"YulFunctionCall","src":"2454:16:7"},"variables":[{"name":"dst","nativeSrc":"2447:3:7","nodeType":"YulTypedName","src":"2447:3:7","type":""}]},{"body":{"nativeSrc":"2508:83:7","nodeType":"YulBlock","src":"2508:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2510:77:7","nodeType":"YulIdentifier","src":"2510:77:7"},"nativeSrc":"2510:79:7","nodeType":"YulFunctionCall","src":"2510:79:7"},"nativeSrc":"2510:79:7","nodeType":"YulExpressionStatement","src":"2510:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2489:3:7","nodeType":"YulIdentifier","src":"2489:3:7"},{"name":"length","nativeSrc":"2494:6:7","nodeType":"YulIdentifier","src":"2494:6:7"}],"functionName":{"name":"add","nativeSrc":"2485:3:7","nodeType":"YulIdentifier","src":"2485:3:7"},"nativeSrc":"2485:16:7","nodeType":"YulFunctionCall","src":"2485:16:7"},{"name":"end","nativeSrc":"2503:3:7","nodeType":"YulIdentifier","src":"2503:3:7"}],"functionName":{"name":"gt","nativeSrc":"2482:2:7","nodeType":"YulIdentifier","src":"2482:2:7"},"nativeSrc":"2482:25:7","nodeType":"YulFunctionCall","src":"2482:25:7"},"nativeSrc":"2479:112:7","nodeType":"YulIf","src":"2479:112:7"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2635:3:7","nodeType":"YulIdentifier","src":"2635:3:7"},{"name":"dst","nativeSrc":"2640:3:7","nodeType":"YulIdentifier","src":"2640:3:7"},{"name":"length","nativeSrc":"2645:6:7","nodeType":"YulIdentifier","src":"2645:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2600:34:7","nodeType":"YulIdentifier","src":"2600:34:7"},"nativeSrc":"2600:52:7","nodeType":"YulFunctionCall","src":"2600:52:7"},"nativeSrc":"2600:52:7","nodeType":"YulExpressionStatement","src":"2600:52:7"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2224:434:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2292:3:7","nodeType":"YulTypedName","src":"2292:3:7","type":""},{"name":"length","nativeSrc":"2297:6:7","nodeType":"YulTypedName","src":"2297:6:7","type":""},{"name":"end","nativeSrc":"2305:3:7","nodeType":"YulTypedName","src":"2305:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2313:5:7","nodeType":"YulTypedName","src":"2313:5:7","type":""}],"src":"2224:434:7"},{"body":{"nativeSrc":"2751:282:7","nodeType":"YulBlock","src":"2751:282:7","statements":[{"body":{"nativeSrc":"2800:83:7","nodeType":"YulBlock","src":"2800:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2802:77:7","nodeType":"YulIdentifier","src":"2802:77:7"},"nativeSrc":"2802:79:7","nodeType":"YulFunctionCall","src":"2802:79:7"},"nativeSrc":"2802:79:7","nodeType":"YulExpressionStatement","src":"2802:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2779:6:7","nodeType":"YulIdentifier","src":"2779:6:7"},{"kind":"number","nativeSrc":"2787:4:7","nodeType":"YulLiteral","src":"2787:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2775:3:7","nodeType":"YulIdentifier","src":"2775:3:7"},"nativeSrc":"2775:17:7","nodeType":"YulFunctionCall","src":"2775:17:7"},{"name":"end","nativeSrc":"2794:3:7","nodeType":"YulIdentifier","src":"2794:3:7"}],"functionName":{"name":"slt","nativeSrc":"2771:3:7","nodeType":"YulIdentifier","src":"2771:3:7"},"nativeSrc":"2771:27:7","nodeType":"YulFunctionCall","src":"2771:27:7"}],"functionName":{"name":"iszero","nativeSrc":"2764:6:7","nodeType":"YulIdentifier","src":"2764:6:7"},"nativeSrc":"2764:35:7","nodeType":"YulFunctionCall","src":"2764:35:7"},"nativeSrc":"2761:122:7","nodeType":"YulIf","src":"2761:122:7"},{"nativeSrc":"2892:27:7","nodeType":"YulVariableDeclaration","src":"2892:27:7","value":{"arguments":[{"name":"offset","nativeSrc":"2912:6:7","nodeType":"YulIdentifier","src":"2912:6:7"}],"functionName":{"name":"mload","nativeSrc":"2906:5:7","nodeType":"YulIdentifier","src":"2906:5:7"},"nativeSrc":"2906:13:7","nodeType":"YulFunctionCall","src":"2906:13:7"},"variables":[{"name":"length","nativeSrc":"2896:6:7","nodeType":"YulTypedName","src":"2896:6:7","type":""}]},{"nativeSrc":"2928:99:7","nodeType":"YulAssignment","src":"2928:99:7","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3000:6:7","nodeType":"YulIdentifier","src":"3000:6:7"},{"kind":"number","nativeSrc":"3008:4:7","nodeType":"YulLiteral","src":"3008:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2996:3:7","nodeType":"YulIdentifier","src":"2996:3:7"},"nativeSrc":"2996:17:7","nodeType":"YulFunctionCall","src":"2996:17:7"},{"name":"length","nativeSrc":"3015:6:7","nodeType":"YulIdentifier","src":"3015:6:7"},{"name":"end","nativeSrc":"3023:3:7","nodeType":"YulIdentifier","src":"3023:3:7"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nativeSrc":"2937:58:7","nodeType":"YulIdentifier","src":"2937:58:7"},"nativeSrc":"2937:90:7","nodeType":"YulFunctionCall","src":"2937:90:7"},"variableNames":[{"name":"array","nativeSrc":"2928:5:7","nodeType":"YulIdentifier","src":"2928:5:7"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"2678:355:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2729:6:7","nodeType":"YulTypedName","src":"2729:6:7","type":""},{"name":"end","nativeSrc":"2737:3:7","nodeType":"YulTypedName","src":"2737:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2745:5:7","nodeType":"YulTypedName","src":"2745:5:7","type":""}],"src":"2678:355:7"},{"body":{"nativeSrc":"3170:878:7","nodeType":"YulBlock","src":"3170:878:7","statements":[{"body":{"nativeSrc":"3216:83:7","nodeType":"YulBlock","src":"3216:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3218:77:7","nodeType":"YulIdentifier","src":"3218:77:7"},"nativeSrc":"3218:79:7","nodeType":"YulFunctionCall","src":"3218:79:7"},"nativeSrc":"3218:79:7","nodeType":"YulExpressionStatement","src":"3218:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3191:7:7","nodeType":"YulIdentifier","src":"3191:7:7"},{"name":"headStart","nativeSrc":"3200:9:7","nodeType":"YulIdentifier","src":"3200:9:7"}],"functionName":{"name":"sub","nativeSrc":"3187:3:7","nodeType":"YulIdentifier","src":"3187:3:7"},"nativeSrc":"3187:23:7","nodeType":"YulFunctionCall","src":"3187:23:7"},{"kind":"number","nativeSrc":"3212:2:7","nodeType":"YulLiteral","src":"3212:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3183:3:7","nodeType":"YulIdentifier","src":"3183:3:7"},"nativeSrc":"3183:32:7","nodeType":"YulFunctionCall","src":"3183:32:7"},"nativeSrc":"3180:119:7","nodeType":"YulIf","src":"3180:119:7"},{"nativeSrc":"3309:128:7","nodeType":"YulBlock","src":"3309:128:7","statements":[{"nativeSrc":"3324:15:7","nodeType":"YulVariableDeclaration","src":"3324:15:7","value":{"kind":"number","nativeSrc":"3338:1:7","nodeType":"YulLiteral","src":"3338:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3328:6:7","nodeType":"YulTypedName","src":"3328:6:7","type":""}]},{"nativeSrc":"3353:74:7","nodeType":"YulAssignment","src":"3353:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3399:9:7","nodeType":"YulIdentifier","src":"3399:9:7"},{"name":"offset","nativeSrc":"3410:6:7","nodeType":"YulIdentifier","src":"3410:6:7"}],"functionName":{"name":"add","nativeSrc":"3395:3:7","nodeType":"YulIdentifier","src":"3395:3:7"},"nativeSrc":"3395:22:7","nodeType":"YulFunctionCall","src":"3395:22:7"},{"name":"dataEnd","nativeSrc":"3419:7:7","nodeType":"YulIdentifier","src":"3419:7:7"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"3363:31:7","nodeType":"YulIdentifier","src":"3363:31:7"},"nativeSrc":"3363:64:7","nodeType":"YulFunctionCall","src":"3363:64:7"},"variableNames":[{"name":"value0","nativeSrc":"3353:6:7","nodeType":"YulIdentifier","src":"3353:6:7"}]}]},{"nativeSrc":"3447:292:7","nodeType":"YulBlock","src":"3447:292:7","statements":[{"nativeSrc":"3462:39:7","nodeType":"YulVariableDeclaration","src":"3462:39:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3486:9:7","nodeType":"YulIdentifier","src":"3486:9:7"},{"kind":"number","nativeSrc":"3497:2:7","nodeType":"YulLiteral","src":"3497:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3482:3:7","nodeType":"YulIdentifier","src":"3482:3:7"},"nativeSrc":"3482:18:7","nodeType":"YulFunctionCall","src":"3482:18:7"}],"functionName":{"name":"mload","nativeSrc":"3476:5:7","nodeType":"YulIdentifier","src":"3476:5:7"},"nativeSrc":"3476:25:7","nodeType":"YulFunctionCall","src":"3476:25:7"},"variables":[{"name":"offset","nativeSrc":"3466:6:7","nodeType":"YulTypedName","src":"3466:6:7","type":""}]},{"body":{"nativeSrc":"3548:83:7","nodeType":"YulBlock","src":"3548:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3550:77:7","nodeType":"YulIdentifier","src":"3550:77:7"},"nativeSrc":"3550:79:7","nodeType":"YulFunctionCall","src":"3550:79:7"},"nativeSrc":"3550:79:7","nodeType":"YulExpressionStatement","src":"3550:79:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3520:6:7","nodeType":"YulIdentifier","src":"3520:6:7"},{"kind":"number","nativeSrc":"3528:18:7","nodeType":"YulLiteral","src":"3528:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3517:2:7","nodeType":"YulIdentifier","src":"3517:2:7"},"nativeSrc":"3517:30:7","nodeType":"YulFunctionCall","src":"3517:30:7"},"nativeSrc":"3514:117:7","nodeType":"YulIf","src":"3514:117:7"},{"nativeSrc":"3645:84:7","nodeType":"YulAssignment","src":"3645:84:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3701:9:7","nodeType":"YulIdentifier","src":"3701:9:7"},{"name":"offset","nativeSrc":"3712:6:7","nodeType":"YulIdentifier","src":"3712:6:7"}],"functionName":{"name":"add","nativeSrc":"3697:3:7","nodeType":"YulIdentifier","src":"3697:3:7"},"nativeSrc":"3697:22:7","nodeType":"YulFunctionCall","src":"3697:22:7"},{"name":"dataEnd","nativeSrc":"3721:7:7","nodeType":"YulIdentifier","src":"3721:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3655:41:7","nodeType":"YulIdentifier","src":"3655:41:7"},"nativeSrc":"3655:74:7","nodeType":"YulFunctionCall","src":"3655:74:7"},"variableNames":[{"name":"value1","nativeSrc":"3645:6:7","nodeType":"YulIdentifier","src":"3645:6:7"}]}]},{"nativeSrc":"3749:292:7","nodeType":"YulBlock","src":"3749:292:7","statements":[{"nativeSrc":"3764:39:7","nodeType":"YulVariableDeclaration","src":"3764:39:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3788:9:7","nodeType":"YulIdentifier","src":"3788:9:7"},{"kind":"number","nativeSrc":"3799:2:7","nodeType":"YulLiteral","src":"3799:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3784:3:7","nodeType":"YulIdentifier","src":"3784:3:7"},"nativeSrc":"3784:18:7","nodeType":"YulFunctionCall","src":"3784:18:7"}],"functionName":{"name":"mload","nativeSrc":"3778:5:7","nodeType":"YulIdentifier","src":"3778:5:7"},"nativeSrc":"3778:25:7","nodeType":"YulFunctionCall","src":"3778:25:7"},"variables":[{"name":"offset","nativeSrc":"3768:6:7","nodeType":"YulTypedName","src":"3768:6:7","type":""}]},{"body":{"nativeSrc":"3850:83:7","nodeType":"YulBlock","src":"3850:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3852:77:7","nodeType":"YulIdentifier","src":"3852:77:7"},"nativeSrc":"3852:79:7","nodeType":"YulFunctionCall","src":"3852:79:7"},"nativeSrc":"3852:79:7","nodeType":"YulExpressionStatement","src":"3852:79:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3822:6:7","nodeType":"YulIdentifier","src":"3822:6:7"},{"kind":"number","nativeSrc":"3830:18:7","nodeType":"YulLiteral","src":"3830:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3819:2:7","nodeType":"YulIdentifier","src":"3819:2:7"},"nativeSrc":"3819:30:7","nodeType":"YulFunctionCall","src":"3819:30:7"},"nativeSrc":"3816:117:7","nodeType":"YulIf","src":"3816:117:7"},{"nativeSrc":"3947:84:7","nodeType":"YulAssignment","src":"3947:84:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4003:9:7","nodeType":"YulIdentifier","src":"4003:9:7"},{"name":"offset","nativeSrc":"4014:6:7","nodeType":"YulIdentifier","src":"4014:6:7"}],"functionName":{"name":"add","nativeSrc":"3999:3:7","nodeType":"YulIdentifier","src":"3999:3:7"},"nativeSrc":"3999:22:7","nodeType":"YulFunctionCall","src":"3999:22:7"},{"name":"dataEnd","nativeSrc":"4023:7:7","nodeType":"YulIdentifier","src":"4023:7:7"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nativeSrc":"3957:41:7","nodeType":"YulIdentifier","src":"3957:41:7"},"nativeSrc":"3957:74:7","nodeType":"YulFunctionCall","src":"3957:74:7"},"variableNames":[{"name":"value2","nativeSrc":"3947:6:7","nodeType":"YulIdentifier","src":"3947:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"3039:1009:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3124:9:7","nodeType":"YulTypedName","src":"3124:9:7","type":""},{"name":"dataEnd","nativeSrc":"3135:7:7","nodeType":"YulTypedName","src":"3135:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3147:6:7","nodeType":"YulTypedName","src":"3147:6:7","type":""},{"name":"value1","nativeSrc":"3155:6:7","nodeType":"YulTypedName","src":"3155:6:7","type":""},{"name":"value2","nativeSrc":"3163:6:7","nodeType":"YulTypedName","src":"3163:6:7","type":""}],"src":"3039:1009:7"},{"body":{"nativeSrc":"4082:152:7","nodeType":"YulBlock","src":"4082:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4099:1:7","nodeType":"YulLiteral","src":"4099:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4102:77:7","nodeType":"YulLiteral","src":"4102:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4092:6:7","nodeType":"YulIdentifier","src":"4092:6:7"},"nativeSrc":"4092:88:7","nodeType":"YulFunctionCall","src":"4092:88:7"},"nativeSrc":"4092:88:7","nodeType":"YulExpressionStatement","src":"4092:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4196:1:7","nodeType":"YulLiteral","src":"4196:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"4199:4:7","nodeType":"YulLiteral","src":"4199:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"4189:6:7","nodeType":"YulIdentifier","src":"4189:6:7"},"nativeSrc":"4189:15:7","nodeType":"YulFunctionCall","src":"4189:15:7"},"nativeSrc":"4189:15:7","nodeType":"YulExpressionStatement","src":"4189:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4220:1:7","nodeType":"YulLiteral","src":"4220:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"4223:4:7","nodeType":"YulLiteral","src":"4223:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4213:6:7","nodeType":"YulIdentifier","src":"4213:6:7"},"nativeSrc":"4213:15:7","nodeType":"YulFunctionCall","src":"4213:15:7"},"nativeSrc":"4213:15:7","nodeType":"YulExpressionStatement","src":"4213:15:7"}]},"name":"panic_error_0x11","nativeSrc":"4054:180:7","nodeType":"YulFunctionDefinition","src":"4054:180:7"},{"body":{"nativeSrc":"4291:51:7","nodeType":"YulBlock","src":"4291:51:7","statements":[{"nativeSrc":"4301:34:7","nodeType":"YulAssignment","src":"4301:34:7","value":{"arguments":[{"kind":"number","nativeSrc":"4326:1:7","nodeType":"YulLiteral","src":"4326:1:7","type":"","value":"1"},{"name":"value","nativeSrc":"4329:5:7","nodeType":"YulIdentifier","src":"4329:5:7"}],"functionName":{"name":"shr","nativeSrc":"4322:3:7","nodeType":"YulIdentifier","src":"4322:3:7"},"nativeSrc":"4322:13:7","nodeType":"YulFunctionCall","src":"4322:13:7"},"variableNames":[{"name":"newValue","nativeSrc":"4301:8:7","nodeType":"YulIdentifier","src":"4301:8:7"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"4240:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4272:5:7","nodeType":"YulTypedName","src":"4272:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4282:8:7","nodeType":"YulTypedName","src":"4282:8:7","type":""}],"src":"4240:102:7"},{"body":{"nativeSrc":"4421:775:7","nodeType":"YulBlock","src":"4421:775:7","statements":[{"nativeSrc":"4431:15:7","nodeType":"YulAssignment","src":"4431:15:7","value":{"name":"_power","nativeSrc":"4440:6:7","nodeType":"YulIdentifier","src":"4440:6:7"},"variableNames":[{"name":"power","nativeSrc":"4431:5:7","nodeType":"YulIdentifier","src":"4431:5:7"}]},{"nativeSrc":"4455:14:7","nodeType":"YulAssignment","src":"4455:14:7","value":{"name":"_base","nativeSrc":"4464:5:7","nodeType":"YulIdentifier","src":"4464:5:7"},"variableNames":[{"name":"base","nativeSrc":"4455:4:7","nodeType":"YulIdentifier","src":"4455:4:7"}]},{"body":{"nativeSrc":"4513:677:7","nodeType":"YulBlock","src":"4513:677:7","statements":[{"body":{"nativeSrc":"4601:22:7","nodeType":"YulBlock","src":"4601:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4603:16:7","nodeType":"YulIdentifier","src":"4603:16:7"},"nativeSrc":"4603:18:7","nodeType":"YulFunctionCall","src":"4603:18:7"},"nativeSrc":"4603:18:7","nodeType":"YulExpressionStatement","src":"4603:18:7"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"4579:4:7","nodeType":"YulIdentifier","src":"4579:4:7"},{"arguments":[{"name":"max","nativeSrc":"4589:3:7","nodeType":"YulIdentifier","src":"4589:3:7"},{"name":"base","nativeSrc":"4594:4:7","nodeType":"YulIdentifier","src":"4594:4:7"}],"functionName":{"name":"div","nativeSrc":"4585:3:7","nodeType":"YulIdentifier","src":"4585:3:7"},"nativeSrc":"4585:14:7","nodeType":"YulFunctionCall","src":"4585:14:7"}],"functionName":{"name":"gt","nativeSrc":"4576:2:7","nodeType":"YulIdentifier","src":"4576:2:7"},"nativeSrc":"4576:24:7","nodeType":"YulFunctionCall","src":"4576:24:7"},"nativeSrc":"4573:50:7","nodeType":"YulIf","src":"4573:50:7"},{"body":{"nativeSrc":"4668:419:7","nodeType":"YulBlock","src":"4668:419:7","statements":[{"nativeSrc":"5048:25:7","nodeType":"YulAssignment","src":"5048:25:7","value":{"arguments":[{"name":"power","nativeSrc":"5061:5:7","nodeType":"YulIdentifier","src":"5061:5:7"},{"name":"base","nativeSrc":"5068:4:7","nodeType":"YulIdentifier","src":"5068:4:7"}],"functionName":{"name":"mul","nativeSrc":"5057:3:7","nodeType":"YulIdentifier","src":"5057:3:7"},"nativeSrc":"5057:16:7","nodeType":"YulFunctionCall","src":"5057:16:7"},"variableNames":[{"name":"power","nativeSrc":"5048:5:7","nodeType":"YulIdentifier","src":"5048:5:7"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4643:8:7","nodeType":"YulIdentifier","src":"4643:8:7"},{"kind":"number","nativeSrc":"4653:1:7","nodeType":"YulLiteral","src":"4653:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"4639:3:7","nodeType":"YulIdentifier","src":"4639:3:7"},"nativeSrc":"4639:16:7","nodeType":"YulFunctionCall","src":"4639:16:7"},"nativeSrc":"4636:451:7","nodeType":"YulIf","src":"4636:451:7"},{"nativeSrc":"5100:23:7","nodeType":"YulAssignment","src":"5100:23:7","value":{"arguments":[{"name":"base","nativeSrc":"5112:4:7","nodeType":"YulIdentifier","src":"5112:4:7"},{"name":"base","nativeSrc":"5118:4:7","nodeType":"YulIdentifier","src":"5118:4:7"}],"functionName":{"name":"mul","nativeSrc":"5108:3:7","nodeType":"YulIdentifier","src":"5108:3:7"},"nativeSrc":"5108:15:7","nodeType":"YulFunctionCall","src":"5108:15:7"},"variableNames":[{"name":"base","nativeSrc":"5100:4:7","nodeType":"YulIdentifier","src":"5100:4:7"}]},{"nativeSrc":"5136:44:7","nodeType":"YulAssignment","src":"5136:44:7","value":{"arguments":[{"name":"exponent","nativeSrc":"5171:8:7","nodeType":"YulIdentifier","src":"5171:8:7"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"5148:22:7","nodeType":"YulIdentifier","src":"5148:22:7"},"nativeSrc":"5148:32:7","nodeType":"YulFunctionCall","src":"5148:32:7"},"variableNames":[{"name":"exponent","nativeSrc":"5136:8:7","nodeType":"YulIdentifier","src":"5136:8:7"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"4489:8:7","nodeType":"YulIdentifier","src":"4489:8:7"},{"kind":"number","nativeSrc":"4499:1:7","nodeType":"YulLiteral","src":"4499:1:7","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"4486:2:7","nodeType":"YulIdentifier","src":"4486:2:7"},"nativeSrc":"4486:15:7","nodeType":"YulFunctionCall","src":"4486:15:7"},"nativeSrc":"4478:712:7","nodeType":"YulForLoop","post":{"nativeSrc":"4502:2:7","nodeType":"YulBlock","src":"4502:2:7","statements":[]},"pre":{"nativeSrc":"4482:3:7","nodeType":"YulBlock","src":"4482:3:7","statements":[]},"src":"4478:712:7"}]},"name":"checked_exp_helper","nativeSrc":"4348:848:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"4376:6:7","nodeType":"YulTypedName","src":"4376:6:7","type":""},{"name":"_base","nativeSrc":"4384:5:7","nodeType":"YulTypedName","src":"4384:5:7","type":""},{"name":"exponent","nativeSrc":"4391:8:7","nodeType":"YulTypedName","src":"4391:8:7","type":""},{"name":"max","nativeSrc":"4401:3:7","nodeType":"YulTypedName","src":"4401:3:7","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4409:5:7","nodeType":"YulTypedName","src":"4409:5:7","type":""},{"name":"base","nativeSrc":"4416:4:7","nodeType":"YulTypedName","src":"4416:4:7","type":""}],"src":"4348:848:7"},{"body":{"nativeSrc":"5262:1013:7","nodeType":"YulBlock","src":"5262:1013:7","statements":[{"body":{"nativeSrc":"5457:20:7","nodeType":"YulBlock","src":"5457:20:7","statements":[{"nativeSrc":"5459:10:7","nodeType":"YulAssignment","src":"5459:10:7","value":{"kind":"number","nativeSrc":"5468:1:7","nodeType":"YulLiteral","src":"5468:1:7","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"5459:5:7","nodeType":"YulIdentifier","src":"5459:5:7"}]},{"nativeSrc":"5470:5:7","nodeType":"YulLeave","src":"5470:5:7"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5447:8:7","nodeType":"YulIdentifier","src":"5447:8:7"}],"functionName":{"name":"iszero","nativeSrc":"5440:6:7","nodeType":"YulIdentifier","src":"5440:6:7"},"nativeSrc":"5440:16:7","nodeType":"YulFunctionCall","src":"5440:16:7"},"nativeSrc":"5437:40:7","nodeType":"YulIf","src":"5437:40:7"},{"body":{"nativeSrc":"5502:20:7","nodeType":"YulBlock","src":"5502:20:7","statements":[{"nativeSrc":"5504:10:7","nodeType":"YulAssignment","src":"5504:10:7","value":{"kind":"number","nativeSrc":"5513:1:7","nodeType":"YulLiteral","src":"5513:1:7","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"5504:5:7","nodeType":"YulIdentifier","src":"5504:5:7"}]},{"nativeSrc":"5515:5:7","nodeType":"YulLeave","src":"5515:5:7"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"5496:4:7","nodeType":"YulIdentifier","src":"5496:4:7"}],"functionName":{"name":"iszero","nativeSrc":"5489:6:7","nodeType":"YulIdentifier","src":"5489:6:7"},"nativeSrc":"5489:12:7","nodeType":"YulFunctionCall","src":"5489:12:7"},"nativeSrc":"5486:36:7","nodeType":"YulIf","src":"5486:36:7"},{"cases":[{"body":{"nativeSrc":"5632:20:7","nodeType":"YulBlock","src":"5632:20:7","statements":[{"nativeSrc":"5634:10:7","nodeType":"YulAssignment","src":"5634:10:7","value":{"kind":"number","nativeSrc":"5643:1:7","nodeType":"YulLiteral","src":"5643:1:7","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"5634:5:7","nodeType":"YulIdentifier","src":"5634:5:7"}]},{"nativeSrc":"5645:5:7","nodeType":"YulLeave","src":"5645:5:7"}]},"nativeSrc":"5625:27:7","nodeType":"YulCase","src":"5625:27:7","value":{"kind":"number","nativeSrc":"5630:1:7","nodeType":"YulLiteral","src":"5630:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"5676:176:7","nodeType":"YulBlock","src":"5676:176:7","statements":[{"body":{"nativeSrc":"5711:22:7","nodeType":"YulBlock","src":"5711:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5713:16:7","nodeType":"YulIdentifier","src":"5713:16:7"},"nativeSrc":"5713:18:7","nodeType":"YulFunctionCall","src":"5713:18:7"},"nativeSrc":"5713:18:7","nodeType":"YulExpressionStatement","src":"5713:18:7"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5696:8:7","nodeType":"YulIdentifier","src":"5696:8:7"},{"kind":"number","nativeSrc":"5706:3:7","nodeType":"YulLiteral","src":"5706:3:7","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"5693:2:7","nodeType":"YulIdentifier","src":"5693:2:7"},"nativeSrc":"5693:17:7","nodeType":"YulFunctionCall","src":"5693:17:7"},"nativeSrc":"5690:43:7","nodeType":"YulIf","src":"5690:43:7"},{"nativeSrc":"5746:25:7","nodeType":"YulAssignment","src":"5746:25:7","value":{"arguments":[{"kind":"number","nativeSrc":"5759:1:7","nodeType":"YulLiteral","src":"5759:1:7","type":"","value":"2"},{"name":"exponent","nativeSrc":"5762:8:7","nodeType":"YulIdentifier","src":"5762:8:7"}],"functionName":{"name":"exp","nativeSrc":"5755:3:7","nodeType":"YulIdentifier","src":"5755:3:7"},"nativeSrc":"5755:16:7","nodeType":"YulFunctionCall","src":"5755:16:7"},"variableNames":[{"name":"power","nativeSrc":"5746:5:7","nodeType":"YulIdentifier","src":"5746:5:7"}]},{"body":{"nativeSrc":"5802:22:7","nodeType":"YulBlock","src":"5802:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5804:16:7","nodeType":"YulIdentifier","src":"5804:16:7"},"nativeSrc":"5804:18:7","nodeType":"YulFunctionCall","src":"5804:18:7"},"nativeSrc":"5804:18:7","nodeType":"YulExpressionStatement","src":"5804:18:7"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"5790:5:7","nodeType":"YulIdentifier","src":"5790:5:7"},{"name":"max","nativeSrc":"5797:3:7","nodeType":"YulIdentifier","src":"5797:3:7"}],"functionName":{"name":"gt","nativeSrc":"5787:2:7","nodeType":"YulIdentifier","src":"5787:2:7"},"nativeSrc":"5787:14:7","nodeType":"YulFunctionCall","src":"5787:14:7"},"nativeSrc":"5784:40:7","nodeType":"YulIf","src":"5784:40:7"},{"nativeSrc":"5837:5:7","nodeType":"YulLeave","src":"5837:5:7"}]},"nativeSrc":"5661:191:7","nodeType":"YulCase","src":"5661:191:7","value":{"kind":"number","nativeSrc":"5666:1:7","nodeType":"YulLiteral","src":"5666:1:7","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"5582:4:7","nodeType":"YulIdentifier","src":"5582:4:7"},"nativeSrc":"5575:277:7","nodeType":"YulSwitch","src":"5575:277:7"},{"body":{"nativeSrc":"5984:123:7","nodeType":"YulBlock","src":"5984:123:7","statements":[{"nativeSrc":"5998:28:7","nodeType":"YulAssignment","src":"5998:28:7","value":{"arguments":[{"name":"base","nativeSrc":"6011:4:7","nodeType":"YulIdentifier","src":"6011:4:7"},{"name":"exponent","nativeSrc":"6017:8:7","nodeType":"YulIdentifier","src":"6017:8:7"}],"functionName":{"name":"exp","nativeSrc":"6007:3:7","nodeType":"YulIdentifier","src":"6007:3:7"},"nativeSrc":"6007:19:7","nodeType":"YulFunctionCall","src":"6007:19:7"},"variableNames":[{"name":"power","nativeSrc":"5998:5:7","nodeType":"YulIdentifier","src":"5998:5:7"}]},{"body":{"nativeSrc":"6057:22:7","nodeType":"YulBlock","src":"6057:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6059:16:7","nodeType":"YulIdentifier","src":"6059:16:7"},"nativeSrc":"6059:18:7","nodeType":"YulFunctionCall","src":"6059:18:7"},"nativeSrc":"6059:18:7","nodeType":"YulExpressionStatement","src":"6059:18:7"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"6045:5:7","nodeType":"YulIdentifier","src":"6045:5:7"},{"name":"max","nativeSrc":"6052:3:7","nodeType":"YulIdentifier","src":"6052:3:7"}],"functionName":{"name":"gt","nativeSrc":"6042:2:7","nodeType":"YulIdentifier","src":"6042:2:7"},"nativeSrc":"6042:14:7","nodeType":"YulFunctionCall","src":"6042:14:7"},"nativeSrc":"6039:40:7","nodeType":"YulIf","src":"6039:40:7"},{"nativeSrc":"6092:5:7","nodeType":"YulLeave","src":"6092:5:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5887:4:7","nodeType":"YulIdentifier","src":"5887:4:7"},{"kind":"number","nativeSrc":"5893:2:7","nodeType":"YulLiteral","src":"5893:2:7","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"5884:2:7","nodeType":"YulIdentifier","src":"5884:2:7"},"nativeSrc":"5884:12:7","nodeType":"YulFunctionCall","src":"5884:12:7"},{"arguments":[{"name":"exponent","nativeSrc":"5901:8:7","nodeType":"YulIdentifier","src":"5901:8:7"},{"kind":"number","nativeSrc":"5911:2:7","nodeType":"YulLiteral","src":"5911:2:7","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"5898:2:7","nodeType":"YulIdentifier","src":"5898:2:7"},"nativeSrc":"5898:16:7","nodeType":"YulFunctionCall","src":"5898:16:7"}],"functionName":{"name":"and","nativeSrc":"5880:3:7","nodeType":"YulIdentifier","src":"5880:3:7"},"nativeSrc":"5880:35:7","nodeType":"YulFunctionCall","src":"5880:35:7"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"5936:4:7","nodeType":"YulIdentifier","src":"5936:4:7"},{"kind":"number","nativeSrc":"5942:3:7","nodeType":"YulLiteral","src":"5942:3:7","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"5933:2:7","nodeType":"YulIdentifier","src":"5933:2:7"},"nativeSrc":"5933:13:7","nodeType":"YulFunctionCall","src":"5933:13:7"},{"arguments":[{"name":"exponent","nativeSrc":"5951:8:7","nodeType":"YulIdentifier","src":"5951:8:7"},{"kind":"number","nativeSrc":"5961:2:7","nodeType":"YulLiteral","src":"5961:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5948:2:7","nodeType":"YulIdentifier","src":"5948:2:7"},"nativeSrc":"5948:16:7","nodeType":"YulFunctionCall","src":"5948:16:7"}],"functionName":{"name":"and","nativeSrc":"5929:3:7","nodeType":"YulIdentifier","src":"5929:3:7"},"nativeSrc":"5929:36:7","nodeType":"YulFunctionCall","src":"5929:36:7"}],"functionName":{"name":"or","nativeSrc":"5864:2:7","nodeType":"YulIdentifier","src":"5864:2:7"},"nativeSrc":"5864:111:7","nodeType":"YulFunctionCall","src":"5864:111:7"},"nativeSrc":"5861:246:7","nodeType":"YulIf","src":"5861:246:7"},{"nativeSrc":"6117:57:7","nodeType":"YulAssignment","src":"6117:57:7","value":{"arguments":[{"kind":"number","nativeSrc":"6151:1:7","nodeType":"YulLiteral","src":"6151:1:7","type":"","value":"1"},{"name":"base","nativeSrc":"6154:4:7","nodeType":"YulIdentifier","src":"6154:4:7"},{"name":"exponent","nativeSrc":"6160:8:7","nodeType":"YulIdentifier","src":"6160:8:7"},{"name":"max","nativeSrc":"6170:3:7","nodeType":"YulIdentifier","src":"6170:3:7"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"6132:18:7","nodeType":"YulIdentifier","src":"6132:18:7"},"nativeSrc":"6132:42:7","nodeType":"YulFunctionCall","src":"6132:42:7"},"variableNames":[{"name":"power","nativeSrc":"6117:5:7","nodeType":"YulIdentifier","src":"6117:5:7"},{"name":"base","nativeSrc":"6124:4:7","nodeType":"YulIdentifier","src":"6124:4:7"}]},{"body":{"nativeSrc":"6213:22:7","nodeType":"YulBlock","src":"6213:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6215:16:7","nodeType":"YulIdentifier","src":"6215:16:7"},"nativeSrc":"6215:18:7","nodeType":"YulFunctionCall","src":"6215:18:7"},"nativeSrc":"6215:18:7","nodeType":"YulExpressionStatement","src":"6215:18:7"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"6190:5:7","nodeType":"YulIdentifier","src":"6190:5:7"},{"arguments":[{"name":"max","nativeSrc":"6201:3:7","nodeType":"YulIdentifier","src":"6201:3:7"},{"name":"base","nativeSrc":"6206:4:7","nodeType":"YulIdentifier","src":"6206:4:7"}],"functionName":{"name":"div","nativeSrc":"6197:3:7","nodeType":"YulIdentifier","src":"6197:3:7"},"nativeSrc":"6197:14:7","nodeType":"YulFunctionCall","src":"6197:14:7"}],"functionName":{"name":"gt","nativeSrc":"6187:2:7","nodeType":"YulIdentifier","src":"6187:2:7"},"nativeSrc":"6187:25:7","nodeType":"YulFunctionCall","src":"6187:25:7"},"nativeSrc":"6184:51:7","nodeType":"YulIf","src":"6184:51:7"},{"nativeSrc":"6244:25:7","nodeType":"YulAssignment","src":"6244:25:7","value":{"arguments":[{"name":"power","nativeSrc":"6257:5:7","nodeType":"YulIdentifier","src":"6257:5:7"},{"name":"base","nativeSrc":"6264:4:7","nodeType":"YulIdentifier","src":"6264:4:7"}],"functionName":{"name":"mul","nativeSrc":"6253:3:7","nodeType":"YulIdentifier","src":"6253:3:7"},"nativeSrc":"6253:16:7","nodeType":"YulFunctionCall","src":"6253:16:7"},"variableNames":[{"name":"power","nativeSrc":"6244:5:7","nodeType":"YulIdentifier","src":"6244:5:7"}]}]},"name":"checked_exp_unsigned","nativeSrc":"5202:1073:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"5232:4:7","nodeType":"YulTypedName","src":"5232:4:7","type":""},{"name":"exponent","nativeSrc":"5238:8:7","nodeType":"YulTypedName","src":"5238:8:7","type":""},{"name":"max","nativeSrc":"5248:3:7","nodeType":"YulTypedName","src":"5248:3:7","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5256:5:7","nodeType":"YulTypedName","src":"5256:5:7","type":""}],"src":"5202:1073:7"},{"body":{"nativeSrc":"6347:219:7","nodeType":"YulBlock","src":"6347:219:7","statements":[{"nativeSrc":"6357:31:7","nodeType":"YulAssignment","src":"6357:31:7","value":{"arguments":[{"name":"base","nativeSrc":"6383:4:7","nodeType":"YulIdentifier","src":"6383:4:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6365:17:7","nodeType":"YulIdentifier","src":"6365:17:7"},"nativeSrc":"6365:23:7","nodeType":"YulFunctionCall","src":"6365:23:7"},"variableNames":[{"name":"base","nativeSrc":"6357:4:7","nodeType":"YulIdentifier","src":"6357:4:7"}]},{"nativeSrc":"6397:39:7","nodeType":"YulAssignment","src":"6397:39:7","value":{"arguments":[{"name":"exponent","nativeSrc":"6427:8:7","nodeType":"YulIdentifier","src":"6427:8:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6409:17:7","nodeType":"YulIdentifier","src":"6409:17:7"},"nativeSrc":"6409:27:7","nodeType":"YulFunctionCall","src":"6409:27:7"},"variableNames":[{"name":"exponent","nativeSrc":"6397:8:7","nodeType":"YulIdentifier","src":"6397:8:7"}]},{"nativeSrc":"6446:113:7","nodeType":"YulAssignment","src":"6446:113:7","value":{"arguments":[{"name":"base","nativeSrc":"6476:4:7","nodeType":"YulIdentifier","src":"6476:4:7"},{"name":"exponent","nativeSrc":"6482:8:7","nodeType":"YulIdentifier","src":"6482:8:7"},{"kind":"number","nativeSrc":"6492:66:7","nodeType":"YulLiteral","src":"6492:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"6455:20:7","nodeType":"YulIdentifier","src":"6455:20:7"},"nativeSrc":"6455:104:7","nodeType":"YulFunctionCall","src":"6455:104:7"},"variableNames":[{"name":"power","nativeSrc":"6446:5:7","nodeType":"YulIdentifier","src":"6446:5:7"}]}]},"name":"checked_exp_t_uint256_t_uint256","nativeSrc":"6281:285:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6322:4:7","nodeType":"YulTypedName","src":"6322:4:7","type":""},{"name":"exponent","nativeSrc":"6328:8:7","nodeType":"YulTypedName","src":"6328:8:7","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6341:5:7","nodeType":"YulTypedName","src":"6341:5:7","type":""}],"src":"6281:285:7"},{"body":{"nativeSrc":"6620:362:7","nodeType":"YulBlock","src":"6620:362:7","statements":[{"nativeSrc":"6630:25:7","nodeType":"YulAssignment","src":"6630:25:7","value":{"arguments":[{"name":"x","nativeSrc":"6653:1:7","nodeType":"YulIdentifier","src":"6653:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6635:17:7","nodeType":"YulIdentifier","src":"6635:17:7"},"nativeSrc":"6635:20:7","nodeType":"YulFunctionCall","src":"6635:20:7"},"variableNames":[{"name":"x","nativeSrc":"6630:1:7","nodeType":"YulIdentifier","src":"6630:1:7"}]},{"nativeSrc":"6664:25:7","nodeType":"YulAssignment","src":"6664:25:7","value":{"arguments":[{"name":"y","nativeSrc":"6687:1:7","nodeType":"YulIdentifier","src":"6687:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6669:17:7","nodeType":"YulIdentifier","src":"6669:17:7"},"nativeSrc":"6669:20:7","nodeType":"YulFunctionCall","src":"6669:20:7"},"variableNames":[{"name":"y","nativeSrc":"6664:1:7","nodeType":"YulIdentifier","src":"6664:1:7"}]},{"nativeSrc":"6698:28:7","nodeType":"YulVariableDeclaration","src":"6698:28:7","value":{"arguments":[{"name":"x","nativeSrc":"6721:1:7","nodeType":"YulIdentifier","src":"6721:1:7"},{"name":"y","nativeSrc":"6724:1:7","nodeType":"YulIdentifier","src":"6724:1:7"}],"functionName":{"name":"mul","nativeSrc":"6717:3:7","nodeType":"YulIdentifier","src":"6717:3:7"},"nativeSrc":"6717:9:7","nodeType":"YulFunctionCall","src":"6717:9:7"},"variables":[{"name":"product_raw","nativeSrc":"6702:11:7","nodeType":"YulTypedName","src":"6702:11:7","type":""}]},{"nativeSrc":"6735:41:7","nodeType":"YulAssignment","src":"6735:41:7","value":{"arguments":[{"name":"product_raw","nativeSrc":"6764:11:7","nodeType":"YulIdentifier","src":"6764:11:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6746:17:7","nodeType":"YulIdentifier","src":"6746:17:7"},"nativeSrc":"6746:30:7","nodeType":"YulFunctionCall","src":"6746:30:7"},"variableNames":[{"name":"product","nativeSrc":"6735:7:7","nodeType":"YulIdentifier","src":"6735:7:7"}]},{"body":{"nativeSrc":"6953:22:7","nodeType":"YulBlock","src":"6953:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6955:16:7","nodeType":"YulIdentifier","src":"6955:16:7"},"nativeSrc":"6955:18:7","nodeType":"YulFunctionCall","src":"6955:18:7"},"nativeSrc":"6955:18:7","nodeType":"YulExpressionStatement","src":"6955:18:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"6886:1:7","nodeType":"YulIdentifier","src":"6886:1:7"}],"functionName":{"name":"iszero","nativeSrc":"6879:6:7","nodeType":"YulIdentifier","src":"6879:6:7"},"nativeSrc":"6879:9:7","nodeType":"YulFunctionCall","src":"6879:9:7"},{"arguments":[{"name":"y","nativeSrc":"6909:1:7","nodeType":"YulIdentifier","src":"6909:1:7"},{"arguments":[{"name":"product","nativeSrc":"6916:7:7","nodeType":"YulIdentifier","src":"6916:7:7"},{"name":"x","nativeSrc":"6925:1:7","nodeType":"YulIdentifier","src":"6925:1:7"}],"functionName":{"name":"div","nativeSrc":"6912:3:7","nodeType":"YulIdentifier","src":"6912:3:7"},"nativeSrc":"6912:15:7","nodeType":"YulFunctionCall","src":"6912:15:7"}],"functionName":{"name":"eq","nativeSrc":"6906:2:7","nodeType":"YulIdentifier","src":"6906:2:7"},"nativeSrc":"6906:22:7","nodeType":"YulFunctionCall","src":"6906:22:7"}],"functionName":{"name":"or","nativeSrc":"6859:2:7","nodeType":"YulIdentifier","src":"6859:2:7"},"nativeSrc":"6859:83:7","nodeType":"YulFunctionCall","src":"6859:83:7"}],"functionName":{"name":"iszero","nativeSrc":"6839:6:7","nodeType":"YulIdentifier","src":"6839:6:7"},"nativeSrc":"6839:113:7","nodeType":"YulFunctionCall","src":"6839:113:7"},"nativeSrc":"6836:139:7","nodeType":"YulIf","src":"6836:139:7"}]},"name":"checked_mul_t_uint256","nativeSrc":"6572:410:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6603:1:7","nodeType":"YulTypedName","src":"6603:1:7","type":""},{"name":"y","nativeSrc":"6606:1:7","nodeType":"YulTypedName","src":"6606:1:7","type":""}],"returnVariables":[{"name":"product","nativeSrc":"6612:7:7","nodeType":"YulTypedName","src":"6612:7:7","type":""}],"src":"6572:410:7"},{"body":{"nativeSrc":"7047:40:7","nodeType":"YulBlock","src":"7047:40:7","statements":[{"nativeSrc":"7058:22:7","nodeType":"YulAssignment","src":"7058:22:7","value":{"arguments":[{"name":"value","nativeSrc":"7074:5:7","nodeType":"YulIdentifier","src":"7074:5:7"}],"functionName":{"name":"mload","nativeSrc":"7068:5:7","nodeType":"YulIdentifier","src":"7068:5:7"},"nativeSrc":"7068:12:7","nodeType":"YulFunctionCall","src":"7068:12:7"},"variableNames":[{"name":"length","nativeSrc":"7058:6:7","nodeType":"YulIdentifier","src":"7058:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"6988:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7030:5:7","nodeType":"YulTypedName","src":"7030:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7040:6:7","nodeType":"YulTypedName","src":"7040:6:7","type":""}],"src":"6988:99:7"},{"body":{"nativeSrc":"7121:152:7","nodeType":"YulBlock","src":"7121:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7138:1:7","nodeType":"YulLiteral","src":"7138:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7141:77:7","nodeType":"YulLiteral","src":"7141:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7131:6:7","nodeType":"YulIdentifier","src":"7131:6:7"},"nativeSrc":"7131:88:7","nodeType":"YulFunctionCall","src":"7131:88:7"},"nativeSrc":"7131:88:7","nodeType":"YulExpressionStatement","src":"7131:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7235:1:7","nodeType":"YulLiteral","src":"7235:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"7238:4:7","nodeType":"YulLiteral","src":"7238:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"7228:6:7","nodeType":"YulIdentifier","src":"7228:6:7"},"nativeSrc":"7228:15:7","nodeType":"YulFunctionCall","src":"7228:15:7"},"nativeSrc":"7228:15:7","nodeType":"YulExpressionStatement","src":"7228:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7259:1:7","nodeType":"YulLiteral","src":"7259:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7262:4:7","nodeType":"YulLiteral","src":"7262:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7252:6:7","nodeType":"YulIdentifier","src":"7252:6:7"},"nativeSrc":"7252:15:7","nodeType":"YulFunctionCall","src":"7252:15:7"},"nativeSrc":"7252:15:7","nodeType":"YulExpressionStatement","src":"7252:15:7"}]},"name":"panic_error_0x22","nativeSrc":"7093:180:7","nodeType":"YulFunctionDefinition","src":"7093:180:7"},{"body":{"nativeSrc":"7330:269:7","nodeType":"YulBlock","src":"7330:269:7","statements":[{"nativeSrc":"7340:22:7","nodeType":"YulAssignment","src":"7340:22:7","value":{"arguments":[{"name":"data","nativeSrc":"7354:4:7","nodeType":"YulIdentifier","src":"7354:4:7"},{"kind":"number","nativeSrc":"7360:1:7","nodeType":"YulLiteral","src":"7360:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"7350:3:7","nodeType":"YulIdentifier","src":"7350:3:7"},"nativeSrc":"7350:12:7","nodeType":"YulFunctionCall","src":"7350:12:7"},"variableNames":[{"name":"length","nativeSrc":"7340:6:7","nodeType":"YulIdentifier","src":"7340:6:7"}]},{"nativeSrc":"7371:38:7","nodeType":"YulVariableDeclaration","src":"7371:38:7","value":{"arguments":[{"name":"data","nativeSrc":"7401:4:7","nodeType":"YulIdentifier","src":"7401:4:7"},{"kind":"number","nativeSrc":"7407:1:7","nodeType":"YulLiteral","src":"7407:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"7397:3:7","nodeType":"YulIdentifier","src":"7397:3:7"},"nativeSrc":"7397:12:7","nodeType":"YulFunctionCall","src":"7397:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"7375:18:7","nodeType":"YulTypedName","src":"7375:18:7","type":""}]},{"body":{"nativeSrc":"7448:51:7","nodeType":"YulBlock","src":"7448:51:7","statements":[{"nativeSrc":"7462:27:7","nodeType":"YulAssignment","src":"7462:27:7","value":{"arguments":[{"name":"length","nativeSrc":"7476:6:7","nodeType":"YulIdentifier","src":"7476:6:7"},{"kind":"number","nativeSrc":"7484:4:7","nodeType":"YulLiteral","src":"7484:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"7472:3:7","nodeType":"YulIdentifier","src":"7472:3:7"},"nativeSrc":"7472:17:7","nodeType":"YulFunctionCall","src":"7472:17:7"},"variableNames":[{"name":"length","nativeSrc":"7462:6:7","nodeType":"YulIdentifier","src":"7462:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7428:18:7","nodeType":"YulIdentifier","src":"7428:18:7"}],"functionName":{"name":"iszero","nativeSrc":"7421:6:7","nodeType":"YulIdentifier","src":"7421:6:7"},"nativeSrc":"7421:26:7","nodeType":"YulFunctionCall","src":"7421:26:7"},"nativeSrc":"7418:81:7","nodeType":"YulIf","src":"7418:81:7"},{"body":{"nativeSrc":"7551:42:7","nodeType":"YulBlock","src":"7551:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"7565:16:7","nodeType":"YulIdentifier","src":"7565:16:7"},"nativeSrc":"7565:18:7","nodeType":"YulFunctionCall","src":"7565:18:7"},"nativeSrc":"7565:18:7","nodeType":"YulExpressionStatement","src":"7565:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"7515:18:7","nodeType":"YulIdentifier","src":"7515:18:7"},{"arguments":[{"name":"length","nativeSrc":"7538:6:7","nodeType":"YulIdentifier","src":"7538:6:7"},{"kind":"number","nativeSrc":"7546:2:7","nodeType":"YulLiteral","src":"7546:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"7535:2:7","nodeType":"YulIdentifier","src":"7535:2:7"},"nativeSrc":"7535:14:7","nodeType":"YulFunctionCall","src":"7535:14:7"}],"functionName":{"name":"eq","nativeSrc":"7512:2:7","nodeType":"YulIdentifier","src":"7512:2:7"},"nativeSrc":"7512:38:7","nodeType":"YulFunctionCall","src":"7512:38:7"},"nativeSrc":"7509:84:7","nodeType":"YulIf","src":"7509:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"7279:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7314:4:7","nodeType":"YulTypedName","src":"7314:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7323:6:7","nodeType":"YulTypedName","src":"7323:6:7","type":""}],"src":"7279:320:7"},{"body":{"nativeSrc":"7659:87:7","nodeType":"YulBlock","src":"7659:87:7","statements":[{"nativeSrc":"7669:11:7","nodeType":"YulAssignment","src":"7669:11:7","value":{"name":"ptr","nativeSrc":"7677:3:7","nodeType":"YulIdentifier","src":"7677:3:7"},"variableNames":[{"name":"data","nativeSrc":"7669:4:7","nodeType":"YulIdentifier","src":"7669:4:7"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7697:1:7","nodeType":"YulLiteral","src":"7697:1:7","type":"","value":"0"},{"name":"ptr","nativeSrc":"7700:3:7","nodeType":"YulIdentifier","src":"7700:3:7"}],"functionName":{"name":"mstore","nativeSrc":"7690:6:7","nodeType":"YulIdentifier","src":"7690:6:7"},"nativeSrc":"7690:14:7","nodeType":"YulFunctionCall","src":"7690:14:7"},"nativeSrc":"7690:14:7","nodeType":"YulExpressionStatement","src":"7690:14:7"},{"nativeSrc":"7713:26:7","nodeType":"YulAssignment","src":"7713:26:7","value":{"arguments":[{"kind":"number","nativeSrc":"7731:1:7","nodeType":"YulLiteral","src":"7731:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7734:4:7","nodeType":"YulLiteral","src":"7734:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"7721:9:7","nodeType":"YulIdentifier","src":"7721:9:7"},"nativeSrc":"7721:18:7","nodeType":"YulFunctionCall","src":"7721:18:7"},"variableNames":[{"name":"data","nativeSrc":"7713:4:7","nodeType":"YulIdentifier","src":"7713:4:7"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"7605:141:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"7646:3:7","nodeType":"YulTypedName","src":"7646:3:7","type":""}],"returnVariables":[{"name":"data","nativeSrc":"7654:4:7","nodeType":"YulTypedName","src":"7654:4:7","type":""}],"src":"7605:141:7"},{"body":{"nativeSrc":"7796:49:7","nodeType":"YulBlock","src":"7796:49:7","statements":[{"nativeSrc":"7806:33:7","nodeType":"YulAssignment","src":"7806:33:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7824:5:7","nodeType":"YulIdentifier","src":"7824:5:7"},{"kind":"number","nativeSrc":"7831:2:7","nodeType":"YulLiteral","src":"7831:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7820:3:7","nodeType":"YulIdentifier","src":"7820:3:7"},"nativeSrc":"7820:14:7","nodeType":"YulFunctionCall","src":"7820:14:7"},{"kind":"number","nativeSrc":"7836:2:7","nodeType":"YulLiteral","src":"7836:2:7","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"7816:3:7","nodeType":"YulIdentifier","src":"7816:3:7"},"nativeSrc":"7816:23:7","nodeType":"YulFunctionCall","src":"7816:23:7"},"variableNames":[{"name":"result","nativeSrc":"7806:6:7","nodeType":"YulIdentifier","src":"7806:6:7"}]}]},"name":"divide_by_32_ceil","nativeSrc":"7752:93:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7779:5:7","nodeType":"YulTypedName","src":"7779:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7789:6:7","nodeType":"YulTypedName","src":"7789:6:7","type":""}],"src":"7752:93:7"},{"body":{"nativeSrc":"7904:54:7","nodeType":"YulBlock","src":"7904:54:7","statements":[{"nativeSrc":"7914:37:7","nodeType":"YulAssignment","src":"7914:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"7939:4:7","nodeType":"YulIdentifier","src":"7939:4:7"},{"name":"value","nativeSrc":"7945:5:7","nodeType":"YulIdentifier","src":"7945:5:7"}],"functionName":{"name":"shl","nativeSrc":"7935:3:7","nodeType":"YulIdentifier","src":"7935:3:7"},"nativeSrc":"7935:16:7","nodeType":"YulFunctionCall","src":"7935:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"7914:8:7","nodeType":"YulIdentifier","src":"7914:8:7"}]}]},"name":"shift_left_dynamic","nativeSrc":"7851:107:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"7879:4:7","nodeType":"YulTypedName","src":"7879:4:7","type":""},{"name":"value","nativeSrc":"7885:5:7","nodeType":"YulTypedName","src":"7885:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"7895:8:7","nodeType":"YulTypedName","src":"7895:8:7","type":""}],"src":"7851:107:7"},{"body":{"nativeSrc":"8040:317:7","nodeType":"YulBlock","src":"8040:317:7","statements":[{"nativeSrc":"8050:35:7","nodeType":"YulVariableDeclaration","src":"8050:35:7","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"8071:10:7","nodeType":"YulIdentifier","src":"8071:10:7"},{"kind":"number","nativeSrc":"8083:1:7","nodeType":"YulLiteral","src":"8083:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"8067:3:7","nodeType":"YulIdentifier","src":"8067:3:7"},"nativeSrc":"8067:18:7","nodeType":"YulFunctionCall","src":"8067:18:7"},"variables":[{"name":"shiftBits","nativeSrc":"8054:9:7","nodeType":"YulTypedName","src":"8054:9:7","type":""}]},{"nativeSrc":"8094:109:7","nodeType":"YulVariableDeclaration","src":"8094:109:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"8125:9:7","nodeType":"YulIdentifier","src":"8125:9:7"},{"kind":"number","nativeSrc":"8136:66:7","nodeType":"YulLiteral","src":"8136:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"8106:18:7","nodeType":"YulIdentifier","src":"8106:18:7"},"nativeSrc":"8106:97:7","nodeType":"YulFunctionCall","src":"8106:97:7"},"variables":[{"name":"mask","nativeSrc":"8098:4:7","nodeType":"YulTypedName","src":"8098:4:7","type":""}]},{"nativeSrc":"8212:51:7","nodeType":"YulAssignment","src":"8212:51:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"8243:9:7","nodeType":"YulIdentifier","src":"8243:9:7"},{"name":"toInsert","nativeSrc":"8254:8:7","nodeType":"YulIdentifier","src":"8254:8:7"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"8224:18:7","nodeType":"YulIdentifier","src":"8224:18:7"},"nativeSrc":"8224:39:7","nodeType":"YulFunctionCall","src":"8224:39:7"},"variableNames":[{"name":"toInsert","nativeSrc":"8212:8:7","nodeType":"YulIdentifier","src":"8212:8:7"}]},{"nativeSrc":"8272:30:7","nodeType":"YulAssignment","src":"8272:30:7","value":{"arguments":[{"name":"value","nativeSrc":"8285:5:7","nodeType":"YulIdentifier","src":"8285:5:7"},{"arguments":[{"name":"mask","nativeSrc":"8296:4:7","nodeType":"YulIdentifier","src":"8296:4:7"}],"functionName":{"name":"not","nativeSrc":"8292:3:7","nodeType":"YulIdentifier","src":"8292:3:7"},"nativeSrc":"8292:9:7","nodeType":"YulFunctionCall","src":"8292:9:7"}],"functionName":{"name":"and","nativeSrc":"8281:3:7","nodeType":"YulIdentifier","src":"8281:3:7"},"nativeSrc":"8281:21:7","nodeType":"YulFunctionCall","src":"8281:21:7"},"variableNames":[{"name":"value","nativeSrc":"8272:5:7","nodeType":"YulIdentifier","src":"8272:5:7"}]},{"nativeSrc":"8311:40:7","nodeType":"YulAssignment","src":"8311:40:7","value":{"arguments":[{"name":"value","nativeSrc":"8324:5:7","nodeType":"YulIdentifier","src":"8324:5:7"},{"arguments":[{"name":"toInsert","nativeSrc":"8335:8:7","nodeType":"YulIdentifier","src":"8335:8:7"},{"name":"mask","nativeSrc":"8345:4:7","nodeType":"YulIdentifier","src":"8345:4:7"}],"functionName":{"name":"and","nativeSrc":"8331:3:7","nodeType":"YulIdentifier","src":"8331:3:7"},"nativeSrc":"8331:19:7","nodeType":"YulFunctionCall","src":"8331:19:7"}],"functionName":{"name":"or","nativeSrc":"8321:2:7","nodeType":"YulIdentifier","src":"8321:2:7"},"nativeSrc":"8321:30:7","nodeType":"YulFunctionCall","src":"8321:30:7"},"variableNames":[{"name":"result","nativeSrc":"8311:6:7","nodeType":"YulIdentifier","src":"8311:6:7"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"7964:393:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8001:5:7","nodeType":"YulTypedName","src":"8001:5:7","type":""},{"name":"shiftBytes","nativeSrc":"8008:10:7","nodeType":"YulTypedName","src":"8008:10:7","type":""},{"name":"toInsert","nativeSrc":"8020:8:7","nodeType":"YulTypedName","src":"8020:8:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"8033:6:7","nodeType":"YulTypedName","src":"8033:6:7","type":""}],"src":"7964:393:7"},{"body":{"nativeSrc":"8395:28:7","nodeType":"YulBlock","src":"8395:28:7","statements":[{"nativeSrc":"8405:12:7","nodeType":"YulAssignment","src":"8405:12:7","value":{"name":"value","nativeSrc":"8412:5:7","nodeType":"YulIdentifier","src":"8412:5:7"},"variableNames":[{"name":"ret","nativeSrc":"8405:3:7","nodeType":"YulIdentifier","src":"8405:3:7"}]}]},"name":"identity","nativeSrc":"8363:60:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8381:5:7","nodeType":"YulTypedName","src":"8381:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"8391:3:7","nodeType":"YulTypedName","src":"8391:3:7","type":""}],"src":"8363:60:7"},{"body":{"nativeSrc":"8489:82:7","nodeType":"YulBlock","src":"8489:82:7","statements":[{"nativeSrc":"8499:66:7","nodeType":"YulAssignment","src":"8499:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8557:5:7","nodeType":"YulIdentifier","src":"8557:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8539:17:7","nodeType":"YulIdentifier","src":"8539:17:7"},"nativeSrc":"8539:24:7","nodeType":"YulFunctionCall","src":"8539:24:7"}],"functionName":{"name":"identity","nativeSrc":"8530:8:7","nodeType":"YulIdentifier","src":"8530:8:7"},"nativeSrc":"8530:34:7","nodeType":"YulFunctionCall","src":"8530:34:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8512:17:7","nodeType":"YulIdentifier","src":"8512:17:7"},"nativeSrc":"8512:53:7","nodeType":"YulFunctionCall","src":"8512:53:7"},"variableNames":[{"name":"converted","nativeSrc":"8499:9:7","nodeType":"YulIdentifier","src":"8499:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"8429:142:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8469:5:7","nodeType":"YulTypedName","src":"8469:5:7","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8479:9:7","nodeType":"YulTypedName","src":"8479:9:7","type":""}],"src":"8429:142:7"},{"body":{"nativeSrc":"8624:28:7","nodeType":"YulBlock","src":"8624:28:7","statements":[{"nativeSrc":"8634:12:7","nodeType":"YulAssignment","src":"8634:12:7","value":{"name":"value","nativeSrc":"8641:5:7","nodeType":"YulIdentifier","src":"8641:5:7"},"variableNames":[{"name":"ret","nativeSrc":"8634:3:7","nodeType":"YulIdentifier","src":"8634:3:7"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"8577:75:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8610:5:7","nodeType":"YulTypedName","src":"8610:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"8620:3:7","nodeType":"YulTypedName","src":"8620:3:7","type":""}],"src":"8577:75:7"},{"body":{"nativeSrc":"8734:193:7","nodeType":"YulBlock","src":"8734:193:7","statements":[{"nativeSrc":"8744:63:7","nodeType":"YulVariableDeclaration","src":"8744:63:7","value":{"arguments":[{"name":"value_0","nativeSrc":"8799:7:7","nodeType":"YulIdentifier","src":"8799:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"8768:30:7","nodeType":"YulIdentifier","src":"8768:30:7"},"nativeSrc":"8768:39:7","nodeType":"YulFunctionCall","src":"8768:39:7"},"variables":[{"name":"convertedValue_0","nativeSrc":"8748:16:7","nodeType":"YulTypedName","src":"8748:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8823:4:7","nodeType":"YulIdentifier","src":"8823:4:7"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"8863:4:7","nodeType":"YulIdentifier","src":"8863:4:7"}],"functionName":{"name":"sload","nativeSrc":"8857:5:7","nodeType":"YulIdentifier","src":"8857:5:7"},"nativeSrc":"8857:11:7","nodeType":"YulFunctionCall","src":"8857:11:7"},{"name":"offset","nativeSrc":"8870:6:7","nodeType":"YulIdentifier","src":"8870:6:7"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"8902:16:7","nodeType":"YulIdentifier","src":"8902:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"8878:23:7","nodeType":"YulIdentifier","src":"8878:23:7"},"nativeSrc":"8878:41:7","nodeType":"YulFunctionCall","src":"8878:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"8829:27:7","nodeType":"YulIdentifier","src":"8829:27:7"},"nativeSrc":"8829:91:7","nodeType":"YulFunctionCall","src":"8829:91:7"}],"functionName":{"name":"sstore","nativeSrc":"8816:6:7","nodeType":"YulIdentifier","src":"8816:6:7"},"nativeSrc":"8816:105:7","nodeType":"YulFunctionCall","src":"8816:105:7"},"nativeSrc":"8816:105:7","nodeType":"YulExpressionStatement","src":"8816:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"8658:269:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"8711:4:7","nodeType":"YulTypedName","src":"8711:4:7","type":""},{"name":"offset","nativeSrc":"8717:6:7","nodeType":"YulTypedName","src":"8717:6:7","type":""},{"name":"value_0","nativeSrc":"8725:7:7","nodeType":"YulTypedName","src":"8725:7:7","type":""}],"src":"8658:269:7"},{"body":{"nativeSrc":"8982:24:7","nodeType":"YulBlock","src":"8982:24:7","statements":[{"nativeSrc":"8992:8:7","nodeType":"YulAssignment","src":"8992:8:7","value":{"kind":"number","nativeSrc":"8999:1:7","nodeType":"YulLiteral","src":"8999:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"8992:3:7","nodeType":"YulIdentifier","src":"8992:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"8933:73:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"8978:3:7","nodeType":"YulTypedName","src":"8978:3:7","type":""}],"src":"8933:73:7"},{"body":{"nativeSrc":"9065:136:7","nodeType":"YulBlock","src":"9065:136:7","statements":[{"nativeSrc":"9075:46:7","nodeType":"YulVariableDeclaration","src":"9075:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"9089:30:7","nodeType":"YulIdentifier","src":"9089:30:7"},"nativeSrc":"9089:32:7","nodeType":"YulFunctionCall","src":"9089:32:7"},"variables":[{"name":"zero_0","nativeSrc":"9079:6:7","nodeType":"YulTypedName","src":"9079:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"9174:4:7","nodeType":"YulIdentifier","src":"9174:4:7"},{"name":"offset","nativeSrc":"9180:6:7","nodeType":"YulIdentifier","src":"9180:6:7"},{"name":"zero_0","nativeSrc":"9188:6:7","nodeType":"YulIdentifier","src":"9188:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"9130:43:7","nodeType":"YulIdentifier","src":"9130:43:7"},"nativeSrc":"9130:65:7","nodeType":"YulFunctionCall","src":"9130:65:7"},"nativeSrc":"9130:65:7","nodeType":"YulExpressionStatement","src":"9130:65:7"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"9012:189:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"9051:4:7","nodeType":"YulTypedName","src":"9051:4:7","type":""},{"name":"offset","nativeSrc":"9057:6:7","nodeType":"YulTypedName","src":"9057:6:7","type":""}],"src":"9012:189:7"},{"body":{"nativeSrc":"9257:136:7","nodeType":"YulBlock","src":"9257:136:7","statements":[{"body":{"nativeSrc":"9324:63:7","nodeType":"YulBlock","src":"9324:63:7","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"9368:5:7","nodeType":"YulIdentifier","src":"9368:5:7"},{"kind":"number","nativeSrc":"9375:1:7","nodeType":"YulLiteral","src":"9375:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"9338:29:7","nodeType":"YulIdentifier","src":"9338:29:7"},"nativeSrc":"9338:39:7","nodeType":"YulFunctionCall","src":"9338:39:7"},"nativeSrc":"9338:39:7","nodeType":"YulExpressionStatement","src":"9338:39:7"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"9277:5:7","nodeType":"YulIdentifier","src":"9277:5:7"},{"name":"end","nativeSrc":"9284:3:7","nodeType":"YulIdentifier","src":"9284:3:7"}],"functionName":{"name":"lt","nativeSrc":"9274:2:7","nodeType":"YulIdentifier","src":"9274:2:7"},"nativeSrc":"9274:14:7","nodeType":"YulFunctionCall","src":"9274:14:7"},"nativeSrc":"9267:120:7","nodeType":"YulForLoop","post":{"nativeSrc":"9289:26:7","nodeType":"YulBlock","src":"9289:26:7","statements":[{"nativeSrc":"9291:22:7","nodeType":"YulAssignment","src":"9291:22:7","value":{"arguments":[{"name":"start","nativeSrc":"9304:5:7","nodeType":"YulIdentifier","src":"9304:5:7"},{"kind":"number","nativeSrc":"9311:1:7","nodeType":"YulLiteral","src":"9311:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9300:3:7","nodeType":"YulIdentifier","src":"9300:3:7"},"nativeSrc":"9300:13:7","nodeType":"YulFunctionCall","src":"9300:13:7"},"variableNames":[{"name":"start","nativeSrc":"9291:5:7","nodeType":"YulIdentifier","src":"9291:5:7"}]}]},"pre":{"nativeSrc":"9271:2:7","nodeType":"YulBlock","src":"9271:2:7","statements":[]},"src":"9267:120:7"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"9207:186:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"9245:5:7","nodeType":"YulTypedName","src":"9245:5:7","type":""},{"name":"end","nativeSrc":"9252:3:7","nodeType":"YulTypedName","src":"9252:3:7","type":""}],"src":"9207:186:7"},{"body":{"nativeSrc":"9478:464:7","nodeType":"YulBlock","src":"9478:464:7","statements":[{"body":{"nativeSrc":"9504:431:7","nodeType":"YulBlock","src":"9504:431:7","statements":[{"nativeSrc":"9518:54:7","nodeType":"YulVariableDeclaration","src":"9518:54:7","value":{"arguments":[{"name":"array","nativeSrc":"9566:5:7","nodeType":"YulIdentifier","src":"9566:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"9534:31:7","nodeType":"YulIdentifier","src":"9534:31:7"},"nativeSrc":"9534:38:7","nodeType":"YulFunctionCall","src":"9534:38:7"},"variables":[{"name":"dataArea","nativeSrc":"9522:8:7","nodeType":"YulTypedName","src":"9522:8:7","type":""}]},{"nativeSrc":"9585:63:7","nodeType":"YulVariableDeclaration","src":"9585:63:7","value":{"arguments":[{"name":"dataArea","nativeSrc":"9608:8:7","nodeType":"YulIdentifier","src":"9608:8:7"},{"arguments":[{"name":"startIndex","nativeSrc":"9636:10:7","nodeType":"YulIdentifier","src":"9636:10:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"9618:17:7","nodeType":"YulIdentifier","src":"9618:17:7"},"nativeSrc":"9618:29:7","nodeType":"YulFunctionCall","src":"9618:29:7"}],"functionName":{"name":"add","nativeSrc":"9604:3:7","nodeType":"YulIdentifier","src":"9604:3:7"},"nativeSrc":"9604:44:7","nodeType":"YulFunctionCall","src":"9604:44:7"},"variables":[{"name":"deleteStart","nativeSrc":"9589:11:7","nodeType":"YulTypedName","src":"9589:11:7","type":""}]},{"body":{"nativeSrc":"9805:27:7","nodeType":"YulBlock","src":"9805:27:7","statements":[{"nativeSrc":"9807:23:7","nodeType":"YulAssignment","src":"9807:23:7","value":{"name":"dataArea","nativeSrc":"9822:8:7","nodeType":"YulIdentifier","src":"9822:8:7"},"variableNames":[{"name":"deleteStart","nativeSrc":"9807:11:7","nodeType":"YulIdentifier","src":"9807:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"9789:10:7","nodeType":"YulIdentifier","src":"9789:10:7"},{"kind":"number","nativeSrc":"9801:2:7","nodeType":"YulLiteral","src":"9801:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9786:2:7","nodeType":"YulIdentifier","src":"9786:2:7"},"nativeSrc":"9786:18:7","nodeType":"YulFunctionCall","src":"9786:18:7"},"nativeSrc":"9783:49:7","nodeType":"YulIf","src":"9783:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"9874:11:7","nodeType":"YulIdentifier","src":"9874:11:7"},{"arguments":[{"name":"dataArea","nativeSrc":"9891:8:7","nodeType":"YulIdentifier","src":"9891:8:7"},{"arguments":[{"name":"len","nativeSrc":"9919:3:7","nodeType":"YulIdentifier","src":"9919:3:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"9901:17:7","nodeType":"YulIdentifier","src":"9901:17:7"},"nativeSrc":"9901:22:7","nodeType":"YulFunctionCall","src":"9901:22:7"}],"functionName":{"name":"add","nativeSrc":"9887:3:7","nodeType":"YulIdentifier","src":"9887:3:7"},"nativeSrc":"9887:37:7","nodeType":"YulFunctionCall","src":"9887:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"9845:28:7","nodeType":"YulIdentifier","src":"9845:28:7"},"nativeSrc":"9845:80:7","nodeType":"YulFunctionCall","src":"9845:80:7"},"nativeSrc":"9845:80:7","nodeType":"YulExpressionStatement","src":"9845:80:7"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"9495:3:7","nodeType":"YulIdentifier","src":"9495:3:7"},{"kind":"number","nativeSrc":"9500:2:7","nodeType":"YulLiteral","src":"9500:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"9492:2:7","nodeType":"YulIdentifier","src":"9492:2:7"},"nativeSrc":"9492:11:7","nodeType":"YulFunctionCall","src":"9492:11:7"},"nativeSrc":"9489:446:7","nodeType":"YulIf","src":"9489:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"9399:543:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"9454:5:7","nodeType":"YulTypedName","src":"9454:5:7","type":""},{"name":"len","nativeSrc":"9461:3:7","nodeType":"YulTypedName","src":"9461:3:7","type":""},{"name":"startIndex","nativeSrc":"9466:10:7","nodeType":"YulTypedName","src":"9466:10:7","type":""}],"src":"9399:543:7"},{"body":{"nativeSrc":"10011:54:7","nodeType":"YulBlock","src":"10011:54:7","statements":[{"nativeSrc":"10021:37:7","nodeType":"YulAssignment","src":"10021:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"10046:4:7","nodeType":"YulIdentifier","src":"10046:4:7"},{"name":"value","nativeSrc":"10052:5:7","nodeType":"YulIdentifier","src":"10052:5:7"}],"functionName":{"name":"shr","nativeSrc":"10042:3:7","nodeType":"YulIdentifier","src":"10042:3:7"},"nativeSrc":"10042:16:7","nodeType":"YulFunctionCall","src":"10042:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"10021:8:7","nodeType":"YulIdentifier","src":"10021:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"9948:117:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"9986:4:7","nodeType":"YulTypedName","src":"9986:4:7","type":""},{"name":"value","nativeSrc":"9992:5:7","nodeType":"YulTypedName","src":"9992:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"10002:8:7","nodeType":"YulTypedName","src":"10002:8:7","type":""}],"src":"9948:117:7"},{"body":{"nativeSrc":"10122:118:7","nodeType":"YulBlock","src":"10122:118:7","statements":[{"nativeSrc":"10132:68:7","nodeType":"YulVariableDeclaration","src":"10132:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10181:1:7","nodeType":"YulLiteral","src":"10181:1:7","type":"","value":"8"},{"name":"bytes","nativeSrc":"10184:5:7","nodeType":"YulIdentifier","src":"10184:5:7"}],"functionName":{"name":"mul","nativeSrc":"10177:3:7","nodeType":"YulIdentifier","src":"10177:3:7"},"nativeSrc":"10177:13:7","nodeType":"YulFunctionCall","src":"10177:13:7"},{"arguments":[{"kind":"number","nativeSrc":"10196:1:7","nodeType":"YulLiteral","src":"10196:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"10192:3:7","nodeType":"YulIdentifier","src":"10192:3:7"},"nativeSrc":"10192:6:7","nodeType":"YulFunctionCall","src":"10192:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"10148:28:7","nodeType":"YulIdentifier","src":"10148:28:7"},"nativeSrc":"10148:51:7","nodeType":"YulFunctionCall","src":"10148:51:7"}],"functionName":{"name":"not","nativeSrc":"10144:3:7","nodeType":"YulIdentifier","src":"10144:3:7"},"nativeSrc":"10144:56:7","nodeType":"YulFunctionCall","src":"10144:56:7"},"variables":[{"name":"mask","nativeSrc":"10136:4:7","nodeType":"YulTypedName","src":"10136:4:7","type":""}]},{"nativeSrc":"10209:25:7","nodeType":"YulAssignment","src":"10209:25:7","value":{"arguments":[{"name":"data","nativeSrc":"10223:4:7","nodeType":"YulIdentifier","src":"10223:4:7"},{"name":"mask","nativeSrc":"10229:4:7","nodeType":"YulIdentifier","src":"10229:4:7"}],"functionName":{"name":"and","nativeSrc":"10219:3:7","nodeType":"YulIdentifier","src":"10219:3:7"},"nativeSrc":"10219:15:7","nodeType":"YulFunctionCall","src":"10219:15:7"},"variableNames":[{"name":"result","nativeSrc":"10209:6:7","nodeType":"YulIdentifier","src":"10209:6:7"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"10071:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10099:4:7","nodeType":"YulTypedName","src":"10099:4:7","type":""},{"name":"bytes","nativeSrc":"10105:5:7","nodeType":"YulTypedName","src":"10105:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"10115:6:7","nodeType":"YulTypedName","src":"10115:6:7","type":""}],"src":"10071:169:7"},{"body":{"nativeSrc":"10326:214:7","nodeType":"YulBlock","src":"10326:214:7","statements":[{"nativeSrc":"10459:37:7","nodeType":"YulAssignment","src":"10459:37:7","value":{"arguments":[{"name":"data","nativeSrc":"10486:4:7","nodeType":"YulIdentifier","src":"10486:4:7"},{"name":"len","nativeSrc":"10492:3:7","nodeType":"YulIdentifier","src":"10492:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"10467:18:7","nodeType":"YulIdentifier","src":"10467:18:7"},"nativeSrc":"10467:29:7","nodeType":"YulFunctionCall","src":"10467:29:7"},"variableNames":[{"name":"data","nativeSrc":"10459:4:7","nodeType":"YulIdentifier","src":"10459:4:7"}]},{"nativeSrc":"10505:29:7","nodeType":"YulAssignment","src":"10505:29:7","value":{"arguments":[{"name":"data","nativeSrc":"10516:4:7","nodeType":"YulIdentifier","src":"10516:4:7"},{"arguments":[{"kind":"number","nativeSrc":"10526:1:7","nodeType":"YulLiteral","src":"10526:1:7","type":"","value":"2"},{"name":"len","nativeSrc":"10529:3:7","nodeType":"YulIdentifier","src":"10529:3:7"}],"functionName":{"name":"mul","nativeSrc":"10522:3:7","nodeType":"YulIdentifier","src":"10522:3:7"},"nativeSrc":"10522:11:7","nodeType":"YulFunctionCall","src":"10522:11:7"}],"functionName":{"name":"or","nativeSrc":"10513:2:7","nodeType":"YulIdentifier","src":"10513:2:7"},"nativeSrc":"10513:21:7","nodeType":"YulFunctionCall","src":"10513:21:7"},"variableNames":[{"name":"used","nativeSrc":"10505:4:7","nodeType":"YulIdentifier","src":"10505:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"10245:295:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"10307:4:7","nodeType":"YulTypedName","src":"10307:4:7","type":""},{"name":"len","nativeSrc":"10313:3:7","nodeType":"YulTypedName","src":"10313:3:7","type":""}],"returnVariables":[{"name":"used","nativeSrc":"10321:4:7","nodeType":"YulTypedName","src":"10321:4:7","type":""}],"src":"10245:295:7"},{"body":{"nativeSrc":"10637:1303:7","nodeType":"YulBlock","src":"10637:1303:7","statements":[{"nativeSrc":"10648:51:7","nodeType":"YulVariableDeclaration","src":"10648:51:7","value":{"arguments":[{"name":"src","nativeSrc":"10695:3:7","nodeType":"YulIdentifier","src":"10695:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"10662:32:7","nodeType":"YulIdentifier","src":"10662:32:7"},"nativeSrc":"10662:37:7","nodeType":"YulFunctionCall","src":"10662:37:7"},"variables":[{"name":"newLen","nativeSrc":"10652:6:7","nodeType":"YulTypedName","src":"10652:6:7","type":""}]},{"body":{"nativeSrc":"10784:22:7","nodeType":"YulBlock","src":"10784:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10786:16:7","nodeType":"YulIdentifier","src":"10786:16:7"},"nativeSrc":"10786:18:7","nodeType":"YulFunctionCall","src":"10786:18:7"},"nativeSrc":"10786:18:7","nodeType":"YulExpressionStatement","src":"10786:18:7"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"10756:6:7","nodeType":"YulIdentifier","src":"10756:6:7"},{"kind":"number","nativeSrc":"10764:18:7","nodeType":"YulLiteral","src":"10764:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10753:2:7","nodeType":"YulIdentifier","src":"10753:2:7"},"nativeSrc":"10753:30:7","nodeType":"YulFunctionCall","src":"10753:30:7"},"nativeSrc":"10750:56:7","nodeType":"YulIf","src":"10750:56:7"},{"nativeSrc":"10816:52:7","nodeType":"YulVariableDeclaration","src":"10816:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"10862:4:7","nodeType":"YulIdentifier","src":"10862:4:7"}],"functionName":{"name":"sload","nativeSrc":"10856:5:7","nodeType":"YulIdentifier","src":"10856:5:7"},"nativeSrc":"10856:11:7","nodeType":"YulFunctionCall","src":"10856:11:7"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"10830:25:7","nodeType":"YulIdentifier","src":"10830:25:7"},"nativeSrc":"10830:38:7","nodeType":"YulFunctionCall","src":"10830:38:7"},"variables":[{"name":"oldLen","nativeSrc":"10820:6:7","nodeType":"YulTypedName","src":"10820:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"10961:4:7","nodeType":"YulIdentifier","src":"10961:4:7"},{"name":"oldLen","nativeSrc":"10967:6:7","nodeType":"YulIdentifier","src":"10967:6:7"},{"name":"newLen","nativeSrc":"10975:6:7","nodeType":"YulIdentifier","src":"10975:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"10915:45:7","nodeType":"YulIdentifier","src":"10915:45:7"},"nativeSrc":"10915:67:7","nodeType":"YulFunctionCall","src":"10915:67:7"},"nativeSrc":"10915:67:7","nodeType":"YulExpressionStatement","src":"10915:67:7"},{"nativeSrc":"10992:18:7","nodeType":"YulVariableDeclaration","src":"10992:18:7","value":{"kind":"number","nativeSrc":"11009:1:7","nodeType":"YulLiteral","src":"11009:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"10996:9:7","nodeType":"YulTypedName","src":"10996:9:7","type":""}]},{"nativeSrc":"11020:17:7","nodeType":"YulAssignment","src":"11020:17:7","value":{"kind":"number","nativeSrc":"11033:4:7","nodeType":"YulLiteral","src":"11033:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"11020:9:7","nodeType":"YulIdentifier","src":"11020:9:7"}]},{"cases":[{"body":{"nativeSrc":"11084:611:7","nodeType":"YulBlock","src":"11084:611:7","statements":[{"nativeSrc":"11098:37:7","nodeType":"YulVariableDeclaration","src":"11098:37:7","value":{"arguments":[{"name":"newLen","nativeSrc":"11117:6:7","nodeType":"YulIdentifier","src":"11117:6:7"},{"arguments":[{"kind":"number","nativeSrc":"11129:4:7","nodeType":"YulLiteral","src":"11129:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"11125:3:7","nodeType":"YulIdentifier","src":"11125:3:7"},"nativeSrc":"11125:9:7","nodeType":"YulFunctionCall","src":"11125:9:7"}],"functionName":{"name":"and","nativeSrc":"11113:3:7","nodeType":"YulIdentifier","src":"11113:3:7"},"nativeSrc":"11113:22:7","nodeType":"YulFunctionCall","src":"11113:22:7"},"variables":[{"name":"loopEnd","nativeSrc":"11102:7:7","nodeType":"YulTypedName","src":"11102:7:7","type":""}]},{"nativeSrc":"11149:51:7","nodeType":"YulVariableDeclaration","src":"11149:51:7","value":{"arguments":[{"name":"slot","nativeSrc":"11195:4:7","nodeType":"YulIdentifier","src":"11195:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"11163:31:7","nodeType":"YulIdentifier","src":"11163:31:7"},"nativeSrc":"11163:37:7","nodeType":"YulFunctionCall","src":"11163:37:7"},"variables":[{"name":"dstPtr","nativeSrc":"11153:6:7","nodeType":"YulTypedName","src":"11153:6:7","type":""}]},{"nativeSrc":"11213:10:7","nodeType":"YulVariableDeclaration","src":"11213:10:7","value":{"kind":"number","nativeSrc":"11222:1:7","nodeType":"YulLiteral","src":"11222:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"11217:1:7","nodeType":"YulTypedName","src":"11217:1:7","type":""}]},{"body":{"nativeSrc":"11281:163:7","nodeType":"YulBlock","src":"11281:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"11306:6:7","nodeType":"YulIdentifier","src":"11306:6:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11324:3:7","nodeType":"YulIdentifier","src":"11324:3:7"},{"name":"srcOffset","nativeSrc":"11329:9:7","nodeType":"YulIdentifier","src":"11329:9:7"}],"functionName":{"name":"add","nativeSrc":"11320:3:7","nodeType":"YulIdentifier","src":"11320:3:7"},"nativeSrc":"11320:19:7","nodeType":"YulFunctionCall","src":"11320:19:7"}],"functionName":{"name":"mload","nativeSrc":"11314:5:7","nodeType":"YulIdentifier","src":"11314:5:7"},"nativeSrc":"11314:26:7","nodeType":"YulFunctionCall","src":"11314:26:7"}],"functionName":{"name":"sstore","nativeSrc":"11299:6:7","nodeType":"YulIdentifier","src":"11299:6:7"},"nativeSrc":"11299:42:7","nodeType":"YulFunctionCall","src":"11299:42:7"},"nativeSrc":"11299:42:7","nodeType":"YulExpressionStatement","src":"11299:42:7"},{"nativeSrc":"11358:24:7","nodeType":"YulAssignment","src":"11358:24:7","value":{"arguments":[{"name":"dstPtr","nativeSrc":"11372:6:7","nodeType":"YulIdentifier","src":"11372:6:7"},{"kind":"number","nativeSrc":"11380:1:7","nodeType":"YulLiteral","src":"11380:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11368:3:7","nodeType":"YulIdentifier","src":"11368:3:7"},"nativeSrc":"11368:14:7","nodeType":"YulFunctionCall","src":"11368:14:7"},"variableNames":[{"name":"dstPtr","nativeSrc":"11358:6:7","nodeType":"YulIdentifier","src":"11358:6:7"}]},{"nativeSrc":"11399:31:7","nodeType":"YulAssignment","src":"11399:31:7","value":{"arguments":[{"name":"srcOffset","nativeSrc":"11416:9:7","nodeType":"YulIdentifier","src":"11416:9:7"},{"kind":"number","nativeSrc":"11427:2:7","nodeType":"YulLiteral","src":"11427:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11412:3:7","nodeType":"YulIdentifier","src":"11412:3:7"},"nativeSrc":"11412:18:7","nodeType":"YulFunctionCall","src":"11412:18:7"},"variableNames":[{"name":"srcOffset","nativeSrc":"11399:9:7","nodeType":"YulIdentifier","src":"11399:9:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"11247:1:7","nodeType":"YulIdentifier","src":"11247:1:7"},{"name":"loopEnd","nativeSrc":"11250:7:7","nodeType":"YulIdentifier","src":"11250:7:7"}],"functionName":{"name":"lt","nativeSrc":"11244:2:7","nodeType":"YulIdentifier","src":"11244:2:7"},"nativeSrc":"11244:14:7","nodeType":"YulFunctionCall","src":"11244:14:7"},"nativeSrc":"11236:208:7","nodeType":"YulForLoop","post":{"nativeSrc":"11259:21:7","nodeType":"YulBlock","src":"11259:21:7","statements":[{"nativeSrc":"11261:17:7","nodeType":"YulAssignment","src":"11261:17:7","value":{"arguments":[{"name":"i","nativeSrc":"11270:1:7","nodeType":"YulIdentifier","src":"11270:1:7"},{"kind":"number","nativeSrc":"11273:4:7","nodeType":"YulLiteral","src":"11273:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11266:3:7","nodeType":"YulIdentifier","src":"11266:3:7"},"nativeSrc":"11266:12:7","nodeType":"YulFunctionCall","src":"11266:12:7"},"variableNames":[{"name":"i","nativeSrc":"11261:1:7","nodeType":"YulIdentifier","src":"11261:1:7"}]}]},"pre":{"nativeSrc":"11240:3:7","nodeType":"YulBlock","src":"11240:3:7","statements":[]},"src":"11236:208:7"},{"body":{"nativeSrc":"11480:156:7","nodeType":"YulBlock","src":"11480:156:7","statements":[{"nativeSrc":"11498:43:7","nodeType":"YulVariableDeclaration","src":"11498:43:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11525:3:7","nodeType":"YulIdentifier","src":"11525:3:7"},{"name":"srcOffset","nativeSrc":"11530:9:7","nodeType":"YulIdentifier","src":"11530:9:7"}],"functionName":{"name":"add","nativeSrc":"11521:3:7","nodeType":"YulIdentifier","src":"11521:3:7"},"nativeSrc":"11521:19:7","nodeType":"YulFunctionCall","src":"11521:19:7"}],"functionName":{"name":"mload","nativeSrc":"11515:5:7","nodeType":"YulIdentifier","src":"11515:5:7"},"nativeSrc":"11515:26:7","nodeType":"YulFunctionCall","src":"11515:26:7"},"variables":[{"name":"lastValue","nativeSrc":"11502:9:7","nodeType":"YulTypedName","src":"11502:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"11565:6:7","nodeType":"YulIdentifier","src":"11565:6:7"},{"arguments":[{"name":"lastValue","nativeSrc":"11592:9:7","nodeType":"YulIdentifier","src":"11592:9:7"},{"arguments":[{"name":"newLen","nativeSrc":"11607:6:7","nodeType":"YulIdentifier","src":"11607:6:7"},{"kind":"number","nativeSrc":"11615:4:7","nodeType":"YulLiteral","src":"11615:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"11603:3:7","nodeType":"YulIdentifier","src":"11603:3:7"},"nativeSrc":"11603:17:7","nodeType":"YulFunctionCall","src":"11603:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"11573:18:7","nodeType":"YulIdentifier","src":"11573:18:7"},"nativeSrc":"11573:48:7","nodeType":"YulFunctionCall","src":"11573:48:7"}],"functionName":{"name":"sstore","nativeSrc":"11558:6:7","nodeType":"YulIdentifier","src":"11558:6:7"},"nativeSrc":"11558:64:7","nodeType":"YulFunctionCall","src":"11558:64:7"},"nativeSrc":"11558:64:7","nodeType":"YulExpressionStatement","src":"11558:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"11463:7:7","nodeType":"YulIdentifier","src":"11463:7:7"},{"name":"newLen","nativeSrc":"11472:6:7","nodeType":"YulIdentifier","src":"11472:6:7"}],"functionName":{"name":"lt","nativeSrc":"11460:2:7","nodeType":"YulIdentifier","src":"11460:2:7"},"nativeSrc":"11460:19:7","nodeType":"YulFunctionCall","src":"11460:19:7"},"nativeSrc":"11457:179:7","nodeType":"YulIf","src":"11457:179:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"11656:4:7","nodeType":"YulIdentifier","src":"11656:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"11670:6:7","nodeType":"YulIdentifier","src":"11670:6:7"},{"kind":"number","nativeSrc":"11678:1:7","nodeType":"YulLiteral","src":"11678:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"11666:3:7","nodeType":"YulIdentifier","src":"11666:3:7"},"nativeSrc":"11666:14:7","nodeType":"YulFunctionCall","src":"11666:14:7"},{"kind":"number","nativeSrc":"11682:1:7","nodeType":"YulLiteral","src":"11682:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"11662:3:7","nodeType":"YulIdentifier","src":"11662:3:7"},"nativeSrc":"11662:22:7","nodeType":"YulFunctionCall","src":"11662:22:7"}],"functionName":{"name":"sstore","nativeSrc":"11649:6:7","nodeType":"YulIdentifier","src":"11649:6:7"},"nativeSrc":"11649:36:7","nodeType":"YulFunctionCall","src":"11649:36:7"},"nativeSrc":"11649:36:7","nodeType":"YulExpressionStatement","src":"11649:36:7"}]},"nativeSrc":"11077:618:7","nodeType":"YulCase","src":"11077:618:7","value":{"kind":"number","nativeSrc":"11082:1:7","nodeType":"YulLiteral","src":"11082:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"11712:222:7","nodeType":"YulBlock","src":"11712:222:7","statements":[{"nativeSrc":"11726:14:7","nodeType":"YulVariableDeclaration","src":"11726:14:7","value":{"kind":"number","nativeSrc":"11739:1:7","nodeType":"YulLiteral","src":"11739:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"11730:5:7","nodeType":"YulTypedName","src":"11730:5:7","type":""}]},{"body":{"nativeSrc":"11763:67:7","nodeType":"YulBlock","src":"11763:67:7","statements":[{"nativeSrc":"11781:35:7","nodeType":"YulAssignment","src":"11781:35:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"11800:3:7","nodeType":"YulIdentifier","src":"11800:3:7"},{"name":"srcOffset","nativeSrc":"11805:9:7","nodeType":"YulIdentifier","src":"11805:9:7"}],"functionName":{"name":"add","nativeSrc":"11796:3:7","nodeType":"YulIdentifier","src":"11796:3:7"},"nativeSrc":"11796:19:7","nodeType":"YulFunctionCall","src":"11796:19:7"}],"functionName":{"name":"mload","nativeSrc":"11790:5:7","nodeType":"YulIdentifier","src":"11790:5:7"},"nativeSrc":"11790:26:7","nodeType":"YulFunctionCall","src":"11790:26:7"},"variableNames":[{"name":"value","nativeSrc":"11781:5:7","nodeType":"YulIdentifier","src":"11781:5:7"}]}]},"condition":{"name":"newLen","nativeSrc":"11756:6:7","nodeType":"YulIdentifier","src":"11756:6:7"},"nativeSrc":"11753:77:7","nodeType":"YulIf","src":"11753:77:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"11850:4:7","nodeType":"YulIdentifier","src":"11850:4:7"},{"arguments":[{"name":"value","nativeSrc":"11909:5:7","nodeType":"YulIdentifier","src":"11909:5:7"},{"name":"newLen","nativeSrc":"11916:6:7","nodeType":"YulIdentifier","src":"11916:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"11856:52:7","nodeType":"YulIdentifier","src":"11856:52:7"},"nativeSrc":"11856:67:7","nodeType":"YulFunctionCall","src":"11856:67:7"}],"functionName":{"name":"sstore","nativeSrc":"11843:6:7","nodeType":"YulIdentifier","src":"11843:6:7"},"nativeSrc":"11843:81:7","nodeType":"YulFunctionCall","src":"11843:81:7"},"nativeSrc":"11843:81:7","nodeType":"YulExpressionStatement","src":"11843:81:7"}]},"nativeSrc":"11704:230:7","nodeType":"YulCase","src":"11704:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"11057:6:7","nodeType":"YulIdentifier","src":"11057:6:7"},{"kind":"number","nativeSrc":"11065:2:7","nodeType":"YulLiteral","src":"11065:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"11054:2:7","nodeType":"YulIdentifier","src":"11054:2:7"},"nativeSrc":"11054:14:7","nodeType":"YulFunctionCall","src":"11054:14:7"},"nativeSrc":"11047:887:7","nodeType":"YulSwitch","src":"11047:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"10545:1395:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"10626:4:7","nodeType":"YulTypedName","src":"10626:4:7","type":""},{"name":"src","nativeSrc":"10632:3:7","nodeType":"YulTypedName","src":"10632:3:7","type":""}],"src":"10545:1395:7"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526012600260006101000a81548160ff021916908360ff16021790555034801561002c57600080fd5b50604051611c6e380380611c6e833981810160405281019061004e9190610297565b600260009054906101000a900460ff1660ff16600a61006d9190610484565b8361007891906104cf565b600381905550600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600090816100d39190610728565b5080600190816100e39190610728565b505050506107fa565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61011381610100565b811461011e57600080fd5b50565b6000815190506101308161010a565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61018982610140565b810181811067ffffffffffffffff821117156101a8576101a7610151565b5b80604052505050565b60006101bb6100ec565b90506101c78282610180565b919050565b600067ffffffffffffffff8211156101e7576101e6610151565b5b6101f082610140565b9050602081019050919050565b60005b8381101561021b578082015181840152602081019050610200565b60008484015250505050565b600061023a610235846101cc565b6101b1565b9050828152602081018484840111156102565761025561013b565b5b6102618482856101fd565b509392505050565b600082601f83011261027e5761027d610136565b5b815161028e848260208601610227565b91505092915050565b6000806000606084860312156102b0576102af6100f6565b5b60006102be86828701610121565b935050602084015167ffffffffffffffff8111156102df576102de6100fb565b5b6102eb86828701610269565b925050604084015167ffffffffffffffff81111561030c5761030b6100fb565b5b61031886828701610269565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156103a85780860481111561038457610383610322565b5b60018516156103935780820291505b80810290506103a185610351565b9450610368565b94509492505050565b6000826103c1576001905061047d565b816103cf576000905061047d565b81600181146103e557600281146103ef5761041e565b600191505061047d565b60ff84111561040157610400610322565b5b8360020a91508482111561041857610417610322565b5b5061047d565b5060208310610133831016604e8410600b84101617156104535782820a90508381111561044e5761044d610322565b5b61047d565b610460848484600161035e565b9250905081840481111561047757610476610322565b5b81810290505b9392505050565b600061048f82610100565b915061049a83610100565b92506104c77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846103b1565b905092915050565b60006104da82610100565b91506104e583610100565b92508282026104f381610100565b9150828204841483151761050a57610509610322565b5b5092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061056357607f821691505b6020821081036105765761057561051c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105a1565b6105e886836105a1565b95508019841693508086168417925050509392505050565b6000819050919050565b600061062561062061061b84610100565b610600565b610100565b9050919050565b6000819050919050565b61063f8361060a565b61065361064b8261062c565b8484546105ae565b825550505050565b600090565b61066861065b565b610673818484610636565b505050565b5b818110156106975761068c600082610660565b600181019050610679565b5050565b601f8211156106dc576106ad8161057c565b6106b684610591565b810160208510156106c5578190505b6106d96106d185610591565b830182610678565b50505b505050565b600082821c905092915050565b60006106ff600019846008026106e1565b1980831691505092915050565b600061071883836106ee565b9150826002028217905092915050565b61073182610511565b67ffffffffffffffff81111561074a57610749610151565b5b610754825461054b565b61075f82828561069b565b600060209050601f8311600181146107925760008415610780578287015190505b61078a858261070c565b8655506107f2565b601f1984166107a08661057c565b60005b828110156107c8578489015182556001820191506020850194506020810190506107a3565b868310156107e557848901516107e1601f8916826106ee565b8355505b6001600288020188555050505b505050505050565b611465806108096000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101a357806379cc6790146101d357806395d89b4114610203578063a9059cbb14610221578063cae9ca5114610251578063dd62ed3e14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce5671461015557806342966c6814610173575b600080fd5b6100c16102b1565b6040516100ce9190610e27565b60405180910390f35b6100f160048036038101906100ec9190610ef1565b61033f565b6040516100fe9190610f4c565b60405180910390f35b61010f610431565b60405161011c9190610f76565b60405180910390f35b61013f600480360381019061013a9190610f91565b610437565b60405161014c9190610f4c565b60405180910390f35b61015d61056b565b60405161016a9190611000565b60405180910390f35b61018d6004803603810190610188919061101b565b61057e565b60405161019a9190610f4c565b60405180910390f35b6101bd60048036038101906101b89190611048565b610692565b6040516101ca9190610f76565b60405180910390f35b6101ed60048036038101906101e89190610ef1565b6106aa565b6040516101fa9190610f4c565b60405180910390f35b61020b6108db565b6040516102189190610e27565b60405180910390f35b61023b60048036038101906102369190610ef1565b610969565b6040516102489190610f4c565b60405180910390f35b61026b600480360381019061026691906111aa565b610980565b6040516102789190610f4c565b60405180910390f35b61029b60048036038101906102969190611219565b610a19565b6040516102a89190610f76565b60405180910390f35b600080546102be90611288565b80601f01602080910402602001604051908101604052809291908181526020018280546102ea90611288565b80156103375780601f1061030c57610100808354040283529160200191610337565b820191906000526020600020905b81548152906001019060200180831161031a57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161041f9190610f76565b60405180910390a36001905092915050565b60035481565b6000600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211156104c257600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054e91906112e8565b92505081905550610560848484610a3e565b600190509392505050565b600260009054906101000a900460ff1681565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105cc57600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461061b91906112e8565b92505081905550816003600082825461063491906112e8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040516106819190610f76565b60405180910390a260019050919050565b60046020528060005260406000206000915090505481565b600081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106f857600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561078157600080fd5b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d091906112e8565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461086391906112e8565b92505081905550816003600082825461087c91906112e8565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040516108c99190610f76565b60405180910390a26001905092915050565b600180546108e890611288565b80601f016020809104026020016040519081016040528092919081815260200182805461091490611288565b80156109615780601f1061093657610100808354040283529160200191610961565b820191906000526020600020905b81548152906001019060200180831161094457829003601f168201915b505050505081565b6000610976338484610a3e565b6001905092915050565b600080849050610990858561033f565b15610a10578073ffffffffffffffffffffffffffffffffffffffff16638f4ffcb1338630876040518563ffffffff1660e01b81526004016109d49493929190611380565b600060405180830381600087803b1580156109ee57600080fd5b505af1158015610a02573d6000803e3d6000fd5b505050506001915050610a12565b505b9392505050565b6005602052816000526040600020602052806000526040600020600091509150505481565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a7757600080fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610ac357600080fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b4e91906113cc565b1015610b5957600080fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610be591906113cc565b905081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c3691906112e8565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c8c91906113cc565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf09190610f76565b60405180910390a380600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d8391906113cc565b14610d9157610d90611400565b5b50505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dd1578082015181840152602081019050610db6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610df982610d97565b610e038185610da2565b9350610e13818560208601610db3565b610e1c81610ddd565b840191505092915050565b60006020820190508181036000830152610e418184610dee565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8882610e5d565b9050919050565b610e9881610e7d565b8114610ea357600080fd5b50565b600081359050610eb581610e8f565b92915050565b6000819050919050565b610ece81610ebb565b8114610ed957600080fd5b50565b600081359050610eeb81610ec5565b92915050565b60008060408385031215610f0857610f07610e53565b5b6000610f1685828601610ea6565b9250506020610f2785828601610edc565b9150509250929050565b60008115159050919050565b610f4681610f31565b82525050565b6000602082019050610f616000830184610f3d565b92915050565b610f7081610ebb565b82525050565b6000602082019050610f8b6000830184610f67565b92915050565b600080600060608486031215610faa57610fa9610e53565b5b6000610fb886828701610ea6565b9350506020610fc986828701610ea6565b9250506040610fda86828701610edc565b9150509250925092565b600060ff82169050919050565b610ffa81610fe4565b82525050565b60006020820190506110156000830184610ff1565b92915050565b60006020828403121561103157611030610e53565b5b600061103f84828501610edc565b91505092915050565b60006020828403121561105e5761105d610e53565b5b600061106c84828501610ea6565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110b782610ddd565b810181811067ffffffffffffffff821117156110d6576110d561107f565b5b80604052505050565b60006110e9610e49565b90506110f582826110ae565b919050565b600067ffffffffffffffff8211156111155761111461107f565b5b61111e82610ddd565b9050602081019050919050565b82818337600083830152505050565b600061114d611148846110fa565b6110df565b9050828152602081018484840111156111695761116861107a565b5b61117484828561112b565b509392505050565b600082601f83011261119157611190611075565b5b81356111a184826020860161113a565b91505092915050565b6000806000606084860312156111c3576111c2610e53565b5b60006111d186828701610ea6565b93505060206111e286828701610edc565b925050604084013567ffffffffffffffff81111561120357611202610e58565b5b61120f8682870161117c565b9150509250925092565b600080604083850312156112305761122f610e53565b5b600061123e85828601610ea6565b925050602061124f85828601610ea6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112a057607f821691505b6020821081036112b3576112b2611259565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112f382610ebb565b91506112fe83610ebb565b9250828203905081811115611316576113156112b9565b5b92915050565b61132581610e7d565b82525050565b600081519050919050565b600082825260208201905092915050565b60006113528261132b565b61135c8185611336565b935061136c818560208601610db3565b61137581610ddd565b840191505092915050565b6000608082019050611395600083018761131c565b6113a26020830186610f67565b6113af604083018561131c565b81810360608301526113c18184611347565b905095945050505050565b60006113d782610ebb565b91506113e283610ebb565b92508282019050808211156113fa576113f96112b9565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea2646970667358221220f2f835fff8d07bdda7a97d084de7f17a75a31b1de77de3a84763574db4d957a164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x12 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C6E CODESIZE SUB DUP1 PUSH2 0x1C6E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4E SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x484 JUMP JUMPDEST DUP4 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x728 JUMP JUMPDEST POP POP POP POP PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x113 DUP2 PUSH2 0x100 JUMP JUMPDEST DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x130 DUP2 PUSH2 0x10A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x189 DUP3 PUSH2 0x140 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1A8 JUMPI PUSH2 0x1A7 PUSH2 0x151 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB PUSH2 0xEC JUMP JUMPDEST SWAP1 POP PUSH2 0x1C7 DUP3 DUP3 PUSH2 0x180 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E7 JUMPI PUSH2 0x1E6 PUSH2 0x151 JUMP JUMPDEST JUMPDEST PUSH2 0x1F0 DUP3 PUSH2 0x140 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x200 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A PUSH2 0x235 DUP5 PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1B1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x256 JUMPI PUSH2 0x255 PUSH2 0x13B JUMP JUMPDEST JUMPDEST PUSH2 0x261 DUP5 DUP3 DUP6 PUSH2 0x1FD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x136 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x28E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x227 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B0 JUMPI PUSH2 0x2AF PUSH2 0xF6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP7 DUP3 DUP8 ADD PUSH2 0x121 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DF JUMPI PUSH2 0x2DE PUSH2 0xFB JUMP JUMPDEST JUMPDEST PUSH2 0x2EB DUP7 DUP3 DUP8 ADD PUSH2 0x269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30C JUMPI PUSH2 0x30B PUSH2 0xFB JUMP JUMPDEST JUMPDEST PUSH2 0x318 DUP7 DUP3 DUP8 ADD PUSH2 0x269 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x3A8 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x384 JUMPI PUSH2 0x383 PUSH2 0x322 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x393 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x3A1 DUP6 PUSH2 0x351 JUMP JUMPDEST SWAP5 POP PUSH2 0x368 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3C1 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x47D JUMP JUMPDEST DUP2 PUSH2 0x3CF JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x47D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x3E5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x3EF JUMPI PUSH2 0x41E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x47D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x401 JUMPI PUSH2 0x400 PUSH2 0x322 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x418 JUMPI PUSH2 0x417 PUSH2 0x322 JUMP JUMPDEST JUMPDEST POP PUSH2 0x47D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x453 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x44E JUMPI PUSH2 0x44D PUSH2 0x322 JUMP JUMPDEST JUMPDEST PUSH2 0x47D JUMP JUMPDEST PUSH2 0x460 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x35E JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x477 JUMPI PUSH2 0x476 PUSH2 0x322 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48F DUP3 PUSH2 0x100 JUMP JUMPDEST SWAP2 POP PUSH2 0x49A DUP4 PUSH2 0x100 JUMP JUMPDEST SWAP3 POP PUSH2 0x4C7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x3B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DA DUP3 PUSH2 0x100 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E5 DUP4 PUSH2 0x100 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4F3 DUP2 PUSH2 0x100 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x50A JUMPI PUSH2 0x509 PUSH2 0x322 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x563 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x576 JUMPI PUSH2 0x575 PUSH2 0x51C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5DE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x5E8 DUP7 DUP4 PUSH2 0x5A1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x625 PUSH2 0x620 PUSH2 0x61B DUP5 PUSH2 0x100 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x63F DUP4 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x653 PUSH2 0x64B DUP3 PUSH2 0x62C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5AE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x668 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x673 DUP2 DUP5 DUP5 PUSH2 0x636 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x697 JUMPI PUSH2 0x68C PUSH1 0x0 DUP3 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x679 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6DC JUMPI PUSH2 0x6AD DUP2 PUSH2 0x57C JUMP JUMPDEST PUSH2 0x6B6 DUP5 PUSH2 0x591 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6C5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6D9 PUSH2 0x6D1 DUP6 PUSH2 0x591 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x678 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6E1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x718 DUP4 DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x731 DUP3 PUSH2 0x511 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x74A JUMPI PUSH2 0x749 PUSH2 0x151 JUMP JUMPDEST JUMPDEST PUSH2 0x754 DUP3 SLOAD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x75F DUP3 DUP3 DUP6 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x792 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x780 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x78A DUP6 DUP3 PUSH2 0x70C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7A0 DUP7 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7C8 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7A3 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7E5 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7E1 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6EE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1465 DUP1 PUSH2 0x809 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x281 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2BE SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x560 DUP5 DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x936 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 CALLER DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SWAP1 POP PUSH2 0x990 DUP6 DUP6 PUSH2 0x33F JUMP JUMPDEST ISZERO PUSH2 0xA10 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F4FFCB1 CALLER DUP7 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0xA12 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST LT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8C SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD83 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST EQ PUSH2 0xD91 JUMPI PUSH2 0xD90 PUSH2 0x1400 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF9 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xE03 DUP2 DUP6 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xE13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE41 DUP2 DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP2 EQ PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB5 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECE DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP2 EQ PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEEB DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF16 DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF27 DUP6 DUP3 DUP7 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0xF31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF70 DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB8 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFC9 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFDA DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xFE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1015 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1031 JUMPI PUSH2 0x1030 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103F DUP5 DUP3 DUP6 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105E JUMPI PUSH2 0x105D PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106C DUP5 DUP3 DUP6 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10B7 DUP3 PUSH2 0xDDD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0x107F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F5 DUP3 DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0x111E DUP3 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114D PUSH2 0x1148 DUP5 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1169 JUMPI PUSH2 0x1168 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH2 0x1174 DUP5 DUP3 DUP6 PUSH2 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x1075 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH2 0x11C2 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11D1 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11E2 DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST PUSH2 0x120F DUP7 DUP3 DUP8 ADD PUSH2 0x117C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x124F DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x1259 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12F3 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x12FE DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH2 0x1315 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1325 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP3 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x135C DUP2 DUP6 PUSH2 0x1336 JUMP JUMPDEST SWAP4 POP PUSH2 0x136C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x13AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x131C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 DUP5 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x13E2 DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xF8 CALLDATALOAD SELFDESTRUCT 0xF8 0xD0 PUSH28 0xDDA7A97D084DE7F17A75A31B1DE77DE3A84763574DB4D957A164736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"250:6151:5:-:0;;;391:2;367:26;;;;;;;;;;;;;;;;;;;;1296:459;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1472:8;;;;;;;;;;;1464:17;;1458:2;:23;;;;:::i;:::-;1442:13;:39;;;;:::i;:::-;1428:11;:53;;;;1563:11;;1539:9;:21;1549:10;1539:21;;;;;;;;;;;;;;;:35;;;;1631:9;1624:4;:16;;;;;;:::i;:::-;;1697:11;1688:6;:20;;;;;;:::i;:::-;;1296:459;;;250:6151;;7:75:7;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:117::-;803:1;800;793:12;817:117;926:1;923;916:12;940:102;981:6;1032:2;1028:7;1023:2;1016:5;1012:14;1008:28;998:38;;940:102;;;:::o;1048:180::-;1096:77;1093:1;1086:88;1193:4;1190:1;1183:15;1217:4;1214:1;1207:15;1234:281;1317:27;1339:4;1317:27;:::i;:::-;1309:6;1305:40;1447:6;1435:10;1432:22;1411:18;1399:10;1396:34;1393:62;1390:88;;;1458:18;;:::i;:::-;1390:88;1498:10;1494:2;1487:22;1277:238;1234:281;;:::o;1521:129::-;1555:6;1582:20;;:::i;:::-;1572:30;;1611:33;1639:4;1631:6;1611:33;:::i;:::-;1521:129;;;:::o;1656:308::-;1718:4;1808:18;1800:6;1797:30;1794:56;;;1830:18;;:::i;:::-;1794:56;1868:29;1890:6;1868:29;:::i;:::-;1860:37;;1952:4;1946;1942:15;1934:23;;1656:308;;;:::o;1970:248::-;2052:1;2062:113;2076:6;2073:1;2070:13;2062:113;;;2161:1;2156:3;2152:11;2146:18;2142:1;2137:3;2133:11;2126:39;2098:2;2095:1;2091:10;2086:15;;2062:113;;;2209:1;2200:6;2195:3;2191:16;2184:27;2032:186;1970:248;;;:::o;2224:434::-;2313:5;2338:66;2354:49;2396:6;2354:49;:::i;:::-;2338:66;:::i;:::-;2329:75;;2427:6;2420:5;2413:21;2465:4;2458:5;2454:16;2503:3;2494:6;2489:3;2485:16;2482:25;2479:112;;;2510:79;;:::i;:::-;2479:112;2600:52;2645:6;2640:3;2635;2600:52;:::i;:::-;2319:339;2224:434;;;;;:::o;2678:355::-;2745:5;2794:3;2787:4;2779:6;2775:17;2771:27;2761:122;;2802:79;;:::i;:::-;2761:122;2912:6;2906:13;2937:90;3023:3;3015:6;3008:4;3000:6;2996:17;2937:90;:::i;:::-;2928:99;;2751:282;2678:355;;;;:::o;3039:1009::-;3147:6;3155;3163;3212:2;3200:9;3191:7;3187:23;3183:32;3180:119;;;3218:79;;:::i;:::-;3180:119;3338:1;3363:64;3419:7;3410:6;3399:9;3395:22;3363:64;:::i;:::-;3353:74;;3309:128;3497:2;3486:9;3482:18;3476:25;3528:18;3520:6;3517:30;3514:117;;;3550:79;;:::i;:::-;3514:117;3655:74;3721:7;3712:6;3701:9;3697:22;3655:74;:::i;:::-;3645:84;;3447:292;3799:2;3788:9;3784:18;3778:25;3830:18;3822:6;3819:30;3816:117;;;3852:79;;:::i;:::-;3816:117;3957:74;4023:7;4014:6;4003:9;3999:22;3957:74;:::i;:::-;3947:84;;3749:292;3039:1009;;;;;:::o;4054:180::-;4102:77;4099:1;4092:88;4199:4;4196:1;4189:15;4223:4;4220:1;4213:15;4240:102;4282:8;4329:5;4326:1;4322:13;4301:34;;4240:102;;;:::o;4348:848::-;4409:5;4416:4;4440:6;4431:15;;4464:5;4455:14;;4478:712;4499:1;4489:8;4486:15;4478:712;;;4594:4;4589:3;4585:14;4579:4;4576:24;4573:50;;;4603:18;;:::i;:::-;4573:50;4653:1;4643:8;4639:16;4636:451;;;5068:4;5061:5;5057:16;5048:25;;4636:451;5118:4;5112;5108:15;5100:23;;5148:32;5171:8;5148:32;:::i;:::-;5136:44;;4478:712;;;4348:848;;;;;;;:::o;5202:1073::-;5256:5;5447:8;5437:40;;5468:1;5459:10;;5470:5;;5437:40;5496:4;5486:36;;5513:1;5504:10;;5515:5;;5486:36;5582:4;5630:1;5625:27;;;;5666:1;5661:191;;;;5575:277;;5625:27;5643:1;5634:10;;5645:5;;;5661:191;5706:3;5696:8;5693:17;5690:43;;;5713:18;;:::i;:::-;5690:43;5762:8;5759:1;5755:16;5746:25;;5797:3;5790:5;5787:14;5784:40;;;5804:18;;:::i;:::-;5784:40;5837:5;;;5575:277;;5961:2;5951:8;5948:16;5942:3;5936:4;5933:13;5929:36;5911:2;5901:8;5898:16;5893:2;5887:4;5884:12;5880:35;5864:111;5861:246;;;6017:8;6011:4;6007:19;5998:28;;6052:3;6045:5;6042:14;6039:40;;;6059:18;;:::i;:::-;6039:40;6092:5;;5861:246;6132:42;6170:3;6160:8;6154:4;6151:1;6132:42;:::i;:::-;6117:57;;;;6206:4;6201:3;6197:14;6190:5;6187:25;6184:51;;;6215:18;;:::i;:::-;6184:51;6264:4;6257:5;6253:16;6244:25;;5202:1073;;;;;;:::o;6281:285::-;6341:5;6365:23;6383:4;6365:23;:::i;:::-;6357:31;;6409:27;6427:8;6409:27;:::i;:::-;6397:39;;6455:104;6492:66;6482:8;6476:4;6455:104;:::i;:::-;6446:113;;6281:285;;;;:::o;6572:410::-;6612:7;6635:20;6653:1;6635:20;:::i;:::-;6630:25;;6669:20;6687:1;6669:20;:::i;:::-;6664:25;;6724:1;6721;6717:9;6746:30;6764:11;6746:30;:::i;:::-;6735:41;;6925:1;6916:7;6912:15;6909:1;6906:22;6886:1;6879:9;6859:83;6836:139;;6955:18;;:::i;:::-;6836:139;6620:362;6572:410;;;;:::o;6988:99::-;7040:6;7074:5;7068:12;7058:22;;6988:99;;;:::o;7093:180::-;7141:77;7138:1;7131:88;7238:4;7235:1;7228:15;7262:4;7259:1;7252:15;7279:320;7323:6;7360:1;7354:4;7350:12;7340:22;;7407:1;7401:4;7397:12;7428:18;7418:81;;7484:4;7476:6;7472:17;7462:27;;7418:81;7546:2;7538:6;7535:14;7515:18;7512:38;7509:84;;7565:18;;:::i;:::-;7509:84;7330:269;7279:320;;;:::o;7605:141::-;7654:4;7677:3;7669:11;;7700:3;7697:1;7690:14;7734:4;7731:1;7721:18;7713:26;;7605:141;;;:::o;7752:93::-;7789:6;7836:2;7831;7824:5;7820:14;7816:23;7806:33;;7752:93;;;:::o;7851:107::-;7895:8;7945:5;7939:4;7935:16;7914:37;;7851:107;;;;:::o;7964:393::-;8033:6;8083:1;8071:10;8067:18;8106:97;8136:66;8125:9;8106:97;:::i;:::-;8224:39;8254:8;8243:9;8224:39;:::i;:::-;8212:51;;8296:4;8292:9;8285:5;8281:21;8272:30;;8345:4;8335:8;8331:19;8324:5;8321:30;8311:40;;8040:317;;7964:393;;;;;:::o;8363:60::-;8391:3;8412:5;8405:12;;8363:60;;;:::o;8429:142::-;8479:9;8512:53;8530:34;8539:24;8557:5;8539:24;:::i;:::-;8530:34;:::i;:::-;8512:53;:::i;:::-;8499:66;;8429:142;;;:::o;8577:75::-;8620:3;8641:5;8634:12;;8577:75;;;:::o;8658:269::-;8768:39;8799:7;8768:39;:::i;:::-;8829:91;8878:41;8902:16;8878:41;:::i;:::-;8870:6;8863:4;8857:11;8829:91;:::i;:::-;8823:4;8816:105;8734:193;8658:269;;;:::o;8933:73::-;8978:3;8933:73;:::o;9012:189::-;9089:32;;:::i;:::-;9130:65;9188:6;9180;9174:4;9130:65;:::i;:::-;9065:136;9012:189;;:::o;9207:186::-;9267:120;9284:3;9277:5;9274:14;9267:120;;;9338:39;9375:1;9368:5;9338:39;:::i;:::-;9311:1;9304:5;9300:13;9291:22;;9267:120;;;9207:186;;:::o;9399:543::-;9500:2;9495:3;9492:11;9489:446;;;9534:38;9566:5;9534:38;:::i;:::-;9618:29;9636:10;9618:29;:::i;:::-;9608:8;9604:44;9801:2;9789:10;9786:18;9783:49;;;9822:8;9807:23;;9783:49;9845:80;9901:22;9919:3;9901:22;:::i;:::-;9891:8;9887:37;9874:11;9845:80;:::i;:::-;9504:431;;9489:446;9399:543;;;:::o;9948:117::-;10002:8;10052:5;10046:4;10042:16;10021:37;;9948:117;;;;:::o;10071:169::-;10115:6;10148:51;10196:1;10192:6;10184:5;10181:1;10177:13;10148:51;:::i;:::-;10144:56;10229:4;10223;10219:15;10209:25;;10122:118;10071:169;;;;:::o;10245:295::-;10321:4;10467:29;10492:3;10486:4;10467:29;:::i;:::-;10459:37;;10529:3;10526:1;10522:11;10516:4;10513:21;10505:29;;10245:295;;;;:::o;10545:1395::-;10662:37;10695:3;10662:37;:::i;:::-;10764:18;10756:6;10753:30;10750:56;;;10786:18;;:::i;:::-;10750:56;10830:38;10862:4;10856:11;10830:38;:::i;:::-;10915:67;10975:6;10967;10961:4;10915:67;:::i;:::-;11009:1;11033:4;11020:17;;11065:2;11057:6;11054:14;11082:1;11077:618;;;;11739:1;11756:6;11753:77;;;11805:9;11800:3;11796:19;11790:26;11781:35;;11753:77;11856:67;11916:6;11909:5;11856:67;:::i;:::-;11850:4;11843:81;11712:222;11047:887;;11077:618;11129:4;11125:9;11117:6;11113:22;11163:37;11195:4;11163:37;:::i;:::-;11222:1;11236:208;11250:7;11247:1;11244:14;11236:208;;;11329:9;11324:3;11320:19;11314:26;11306:6;11299:42;11380:1;11372:6;11368:14;11358:24;;11427:2;11416:9;11412:18;11399:31;;11273:4;11270:1;11266:12;11261:17;;11236:208;;;11472:6;11463:7;11460:19;11457:179;;;11530:9;11525:3;11521:19;11515:26;11573:48;11615:4;11607:6;11603:17;11592:9;11573:48;:::i;:::-;11565:6;11558:64;11480:156;11457:179;11682:1;11678;11670:6;11666:14;11662:22;11656:4;11649:36;11084:611;;;11047:887;;10637:1303;;;10545:1395;;:::o;250:6151:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transfer_957":{"entryPoint":2622,"id":957,"parameterSlots":3,"returnSlots":0},"@allowance_818":{"entryPoint":2585,"id":818,"parameterSlots":0,"returnSlots":0},"@approveAndCall_1088":{"entryPoint":2432,"id":1088,"parameterSlots":3,"returnSlots":1},"@approve_1047":{"entryPoint":831,"id":1047,"parameterSlots":2,"returnSlots":1},"@balanceOf_812":{"entryPoint":1682,"id":812,"parameterSlots":0,"returnSlots":0},"@burnFrom_1181":{"entryPoint":1706,"id":1181,"parameterSlots":2,"returnSlots":1},"@burn_1125":{"entryPoint":1406,"id":1125,"parameterSlots":1,"returnSlots":1},"@decimals_806":{"entryPoint":1387,"id":806,"parameterSlots":0,"returnSlots":0},"@name_801":{"entryPoint":689,"id":801,"parameterSlots":0,"returnSlots":0},"@symbol_803":{"entryPoint":2267,"id":803,"parameterSlots":0,"returnSlots":0},"@totalSupply_808":{"entryPoint":1073,"id":808,"parameterSlots":0,"returnSlots":0},"@transferFrom_1018":{"entryPoint":1079,"id":1018,"parameterSlots":3,"returnSlots":1},"@transfer_977":{"entryPoint":2409,"id":977,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4410,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3750,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3804,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4633,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3985,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3825,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4522,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":4123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4892,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4935,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3943,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4081,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4992,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3916,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3623,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4096,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":4319,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3657,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":4346,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4907,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3479,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4918,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5068,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":4840,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3709,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3889,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3677,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3771,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4068,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":4395,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3507,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4744,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4270,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x01":{"entryPoint":5120,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":4793,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4697,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4223,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4213,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":4218,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3672,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3667,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3549,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":3727,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3781,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11620:7","nodeType":"YulBlock","src":"0:11620:7","statements":[{"body":{"nativeSrc":"66:40:7","nodeType":"YulBlock","src":"66:40:7","statements":[{"nativeSrc":"77:22:7","nodeType":"YulAssignment","src":"77:22:7","value":{"arguments":[{"name":"value","nativeSrc":"93:5:7","nodeType":"YulIdentifier","src":"93:5:7"}],"functionName":{"name":"mload","nativeSrc":"87:5:7","nodeType":"YulIdentifier","src":"87:5:7"},"nativeSrc":"87:12:7","nodeType":"YulFunctionCall","src":"87:12:7"},"variableNames":[{"name":"length","nativeSrc":"77:6:7","nodeType":"YulIdentifier","src":"77:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:7","nodeType":"YulTypedName","src":"49:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:7","nodeType":"YulTypedName","src":"59:6:7","type":""}],"src":"7:99:7"},{"body":{"nativeSrc":"208:73:7","nodeType":"YulBlock","src":"208:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:7","nodeType":"YulIdentifier","src":"225:3:7"},{"name":"length","nativeSrc":"230:6:7","nodeType":"YulIdentifier","src":"230:6:7"}],"functionName":{"name":"mstore","nativeSrc":"218:6:7","nodeType":"YulIdentifier","src":"218:6:7"},"nativeSrc":"218:19:7","nodeType":"YulFunctionCall","src":"218:19:7"},"nativeSrc":"218:19:7","nodeType":"YulExpressionStatement","src":"218:19:7"},{"nativeSrc":"246:29:7","nodeType":"YulAssignment","src":"246:29:7","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:7","nodeType":"YulIdentifier","src":"265:3:7"},{"kind":"number","nativeSrc":"270:4:7","nodeType":"YulLiteral","src":"270:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:7","nodeType":"YulIdentifier","src":"261:3:7"},"nativeSrc":"261:14:7","nodeType":"YulFunctionCall","src":"261:14:7"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:7","nodeType":"YulIdentifier","src":"246:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:7","nodeType":"YulTypedName","src":"180:3:7","type":""},{"name":"length","nativeSrc":"185:6:7","nodeType":"YulTypedName","src":"185:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:7","nodeType":"YulTypedName","src":"196:11:7","type":""}],"src":"112:169:7"},{"body":{"nativeSrc":"349:186:7","nodeType":"YulBlock","src":"349:186:7","statements":[{"nativeSrc":"360:10:7","nodeType":"YulVariableDeclaration","src":"360:10:7","value":{"kind":"number","nativeSrc":"369:1:7","nodeType":"YulLiteral","src":"369:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:7","nodeType":"YulTypedName","src":"364:1:7","type":""}]},{"body":{"nativeSrc":"429:63:7","nodeType":"YulBlock","src":"429:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:7","nodeType":"YulIdentifier","src":"454:3:7"},{"name":"i","nativeSrc":"459:1:7","nodeType":"YulIdentifier","src":"459:1:7"}],"functionName":{"name":"add","nativeSrc":"450:3:7","nodeType":"YulIdentifier","src":"450:3:7"},"nativeSrc":"450:11:7","nodeType":"YulFunctionCall","src":"450:11:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:7","nodeType":"YulIdentifier","src":"473:3:7"},{"name":"i","nativeSrc":"478:1:7","nodeType":"YulIdentifier","src":"478:1:7"}],"functionName":{"name":"add","nativeSrc":"469:3:7","nodeType":"YulIdentifier","src":"469:3:7"},"nativeSrc":"469:11:7","nodeType":"YulFunctionCall","src":"469:11:7"}],"functionName":{"name":"mload","nativeSrc":"463:5:7","nodeType":"YulIdentifier","src":"463:5:7"},"nativeSrc":"463:18:7","nodeType":"YulFunctionCall","src":"463:18:7"}],"functionName":{"name":"mstore","nativeSrc":"443:6:7","nodeType":"YulIdentifier","src":"443:6:7"},"nativeSrc":"443:39:7","nodeType":"YulFunctionCall","src":"443:39:7"},"nativeSrc":"443:39:7","nodeType":"YulExpressionStatement","src":"443:39:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:7","nodeType":"YulIdentifier","src":"390:1:7"},{"name":"length","nativeSrc":"393:6:7","nodeType":"YulIdentifier","src":"393:6:7"}],"functionName":{"name":"lt","nativeSrc":"387:2:7","nodeType":"YulIdentifier","src":"387:2:7"},"nativeSrc":"387:13:7","nodeType":"YulFunctionCall","src":"387:13:7"},"nativeSrc":"379:113:7","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:7","nodeType":"YulBlock","src":"401:19:7","statements":[{"nativeSrc":"403:15:7","nodeType":"YulAssignment","src":"403:15:7","value":{"arguments":[{"name":"i","nativeSrc":"412:1:7","nodeType":"YulIdentifier","src":"412:1:7"},{"kind":"number","nativeSrc":"415:2:7","nodeType":"YulLiteral","src":"415:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:7","nodeType":"YulIdentifier","src":"408:3:7"},"nativeSrc":"408:10:7","nodeType":"YulFunctionCall","src":"408:10:7"},"variableNames":[{"name":"i","nativeSrc":"403:1:7","nodeType":"YulIdentifier","src":"403:1:7"}]}]},"pre":{"nativeSrc":"383:3:7","nodeType":"YulBlock","src":"383:3:7","statements":[]},"src":"379:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:7","nodeType":"YulIdentifier","src":"512:3:7"},{"name":"length","nativeSrc":"517:6:7","nodeType":"YulIdentifier","src":"517:6:7"}],"functionName":{"name":"add","nativeSrc":"508:3:7","nodeType":"YulIdentifier","src":"508:3:7"},"nativeSrc":"508:16:7","nodeType":"YulFunctionCall","src":"508:16:7"},{"kind":"number","nativeSrc":"526:1:7","nodeType":"YulLiteral","src":"526:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:7","nodeType":"YulIdentifier","src":"501:6:7"},"nativeSrc":"501:27:7","nodeType":"YulFunctionCall","src":"501:27:7"},"nativeSrc":"501:27:7","nodeType":"YulExpressionStatement","src":"501:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:7","nodeType":"YulTypedName","src":"331:3:7","type":""},{"name":"dst","nativeSrc":"336:3:7","nodeType":"YulTypedName","src":"336:3:7","type":""},{"name":"length","nativeSrc":"341:6:7","nodeType":"YulTypedName","src":"341:6:7","type":""}],"src":"287:248:7"},{"body":{"nativeSrc":"589:54:7","nodeType":"YulBlock","src":"589:54:7","statements":[{"nativeSrc":"599:38:7","nodeType":"YulAssignment","src":"599:38:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:7","nodeType":"YulIdentifier","src":"617:5:7"},{"kind":"number","nativeSrc":"624:2:7","nodeType":"YulLiteral","src":"624:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:7","nodeType":"YulIdentifier","src":"613:3:7"},"nativeSrc":"613:14:7","nodeType":"YulFunctionCall","src":"613:14:7"},{"arguments":[{"kind":"number","nativeSrc":"633:2:7","nodeType":"YulLiteral","src":"633:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:7","nodeType":"YulIdentifier","src":"629:3:7"},"nativeSrc":"629:7:7","nodeType":"YulFunctionCall","src":"629:7:7"}],"functionName":{"name":"and","nativeSrc":"609:3:7","nodeType":"YulIdentifier","src":"609:3:7"},"nativeSrc":"609:28:7","nodeType":"YulFunctionCall","src":"609:28:7"},"variableNames":[{"name":"result","nativeSrc":"599:6:7","nodeType":"YulIdentifier","src":"599:6:7"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:7","nodeType":"YulTypedName","src":"572:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:7","nodeType":"YulTypedName","src":"582:6:7","type":""}],"src":"541:102:7"},{"body":{"nativeSrc":"741:285:7","nodeType":"YulBlock","src":"741:285:7","statements":[{"nativeSrc":"751:53:7","nodeType":"YulVariableDeclaration","src":"751:53:7","value":{"arguments":[{"name":"value","nativeSrc":"798:5:7","nodeType":"YulIdentifier","src":"798:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:7","nodeType":"YulIdentifier","src":"765:32:7"},"nativeSrc":"765:39:7","nodeType":"YulFunctionCall","src":"765:39:7"},"variables":[{"name":"length","nativeSrc":"755:6:7","nodeType":"YulTypedName","src":"755:6:7","type":""}]},{"nativeSrc":"813:78:7","nodeType":"YulAssignment","src":"813:78:7","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:7","nodeType":"YulIdentifier","src":"879:3:7"},{"name":"length","nativeSrc":"884:6:7","nodeType":"YulIdentifier","src":"884:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:7","nodeType":"YulIdentifier","src":"820:58:7"},"nativeSrc":"820:71:7","nodeType":"YulFunctionCall","src":"820:71:7"},"variableNames":[{"name":"pos","nativeSrc":"813:3:7","nodeType":"YulIdentifier","src":"813:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:7","nodeType":"YulIdentifier","src":"939:5:7"},{"kind":"number","nativeSrc":"946:4:7","nodeType":"YulLiteral","src":"946:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:7","nodeType":"YulIdentifier","src":"935:3:7"},"nativeSrc":"935:16:7","nodeType":"YulFunctionCall","src":"935:16:7"},{"name":"pos","nativeSrc":"953:3:7","nodeType":"YulIdentifier","src":"953:3:7"},{"name":"length","nativeSrc":"958:6:7","nodeType":"YulIdentifier","src":"958:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:7","nodeType":"YulIdentifier","src":"900:34:7"},"nativeSrc":"900:65:7","nodeType":"YulFunctionCall","src":"900:65:7"},"nativeSrc":"900:65:7","nodeType":"YulExpressionStatement","src":"900:65:7"},{"nativeSrc":"974:46:7","nodeType":"YulAssignment","src":"974:46:7","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:7","nodeType":"YulIdentifier","src":"985:3:7"},{"arguments":[{"name":"length","nativeSrc":"1012:6:7","nodeType":"YulIdentifier","src":"1012:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:7","nodeType":"YulIdentifier","src":"990:21:7"},"nativeSrc":"990:29:7","nodeType":"YulFunctionCall","src":"990:29:7"}],"functionName":{"name":"add","nativeSrc":"981:3:7","nodeType":"YulIdentifier","src":"981:3:7"},"nativeSrc":"981:39:7","nodeType":"YulFunctionCall","src":"981:39:7"},"variableNames":[{"name":"end","nativeSrc":"974:3:7","nodeType":"YulIdentifier","src":"974:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:7","nodeType":"YulTypedName","src":"722:5:7","type":""},{"name":"pos","nativeSrc":"729:3:7","nodeType":"YulTypedName","src":"729:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:7","nodeType":"YulTypedName","src":"737:3:7","type":""}],"src":"649:377:7"},{"body":{"nativeSrc":"1150:195:7","nodeType":"YulBlock","src":"1150:195:7","statements":[{"nativeSrc":"1160:26:7","nodeType":"YulAssignment","src":"1160:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:7","nodeType":"YulIdentifier","src":"1172:9:7"},{"kind":"number","nativeSrc":"1183:2:7","nodeType":"YulLiteral","src":"1183:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:7","nodeType":"YulIdentifier","src":"1168:3:7"},"nativeSrc":"1168:18:7","nodeType":"YulFunctionCall","src":"1168:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:7","nodeType":"YulIdentifier","src":"1160:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:7","nodeType":"YulIdentifier","src":"1207:9:7"},{"kind":"number","nativeSrc":"1218:1:7","nodeType":"YulLiteral","src":"1218:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:7","nodeType":"YulIdentifier","src":"1203:3:7"},"nativeSrc":"1203:17:7","nodeType":"YulFunctionCall","src":"1203:17:7"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:7","nodeType":"YulIdentifier","src":"1226:4:7"},{"name":"headStart","nativeSrc":"1232:9:7","nodeType":"YulIdentifier","src":"1232:9:7"}],"functionName":{"name":"sub","nativeSrc":"1222:3:7","nodeType":"YulIdentifier","src":"1222:3:7"},"nativeSrc":"1222:20:7","nodeType":"YulFunctionCall","src":"1222:20:7"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:7","nodeType":"YulIdentifier","src":"1196:6:7"},"nativeSrc":"1196:47:7","nodeType":"YulFunctionCall","src":"1196:47:7"},"nativeSrc":"1196:47:7","nodeType":"YulExpressionStatement","src":"1196:47:7"},{"nativeSrc":"1252:86:7","nodeType":"YulAssignment","src":"1252:86:7","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:7","nodeType":"YulIdentifier","src":"1324:6:7"},{"name":"tail","nativeSrc":"1333:4:7","nodeType":"YulIdentifier","src":"1333:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:7","nodeType":"YulIdentifier","src":"1260:63:7"},"nativeSrc":"1260:78:7","nodeType":"YulFunctionCall","src":"1260:78:7"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:7","nodeType":"YulIdentifier","src":"1252:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:7","nodeType":"YulTypedName","src":"1122:9:7","type":""},{"name":"value0","nativeSrc":"1134:6:7","nodeType":"YulTypedName","src":"1134:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:7","nodeType":"YulTypedName","src":"1145:4:7","type":""}],"src":"1032:313:7"},{"body":{"nativeSrc":"1391:35:7","nodeType":"YulBlock","src":"1391:35:7","statements":[{"nativeSrc":"1401:19:7","nodeType":"YulAssignment","src":"1401:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:7","nodeType":"YulLiteral","src":"1417:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:7","nodeType":"YulIdentifier","src":"1411:5:7"},"nativeSrc":"1411:9:7","nodeType":"YulFunctionCall","src":"1411:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:7","nodeType":"YulIdentifier","src":"1401:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:7","nodeType":"YulTypedName","src":"1384:6:7","type":""}],"src":"1351:75:7"},{"body":{"nativeSrc":"1521:28:7","nodeType":"YulBlock","src":"1521:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:7","nodeType":"YulLiteral","src":"1538:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:7","nodeType":"YulLiteral","src":"1541:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:7","nodeType":"YulIdentifier","src":"1531:6:7"},"nativeSrc":"1531:12:7","nodeType":"YulFunctionCall","src":"1531:12:7"},"nativeSrc":"1531:12:7","nodeType":"YulExpressionStatement","src":"1531:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:7","nodeType":"YulFunctionDefinition","src":"1432:117:7"},{"body":{"nativeSrc":"1644:28:7","nodeType":"YulBlock","src":"1644:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:7","nodeType":"YulLiteral","src":"1661:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:7","nodeType":"YulLiteral","src":"1664:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:7","nodeType":"YulIdentifier","src":"1654:6:7"},"nativeSrc":"1654:12:7","nodeType":"YulFunctionCall","src":"1654:12:7"},"nativeSrc":"1654:12:7","nodeType":"YulExpressionStatement","src":"1654:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:7","nodeType":"YulFunctionDefinition","src":"1555:117:7"},{"body":{"nativeSrc":"1723:81:7","nodeType":"YulBlock","src":"1723:81:7","statements":[{"nativeSrc":"1733:65:7","nodeType":"YulAssignment","src":"1733:65:7","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:7","nodeType":"YulIdentifier","src":"1748:5:7"},{"kind":"number","nativeSrc":"1755:42:7","nodeType":"YulLiteral","src":"1755:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:7","nodeType":"YulIdentifier","src":"1744:3:7"},"nativeSrc":"1744:54:7","nodeType":"YulFunctionCall","src":"1744:54:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:7","nodeType":"YulIdentifier","src":"1733:7:7"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:7","nodeType":"YulTypedName","src":"1705:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:7","nodeType":"YulTypedName","src":"1715:7:7","type":""}],"src":"1678:126:7"},{"body":{"nativeSrc":"1855:51:7","nodeType":"YulBlock","src":"1855:51:7","statements":[{"nativeSrc":"1865:35:7","nodeType":"YulAssignment","src":"1865:35:7","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:7","nodeType":"YulIdentifier","src":"1894:5:7"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:7","nodeType":"YulIdentifier","src":"1876:17:7"},"nativeSrc":"1876:24:7","nodeType":"YulFunctionCall","src":"1876:24:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:7","nodeType":"YulIdentifier","src":"1865:7:7"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:7","nodeType":"YulTypedName","src":"1837:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:7","nodeType":"YulTypedName","src":"1847:7:7","type":""}],"src":"1810:96:7"},{"body":{"nativeSrc":"1955:79:7","nodeType":"YulBlock","src":"1955:79:7","statements":[{"body":{"nativeSrc":"2012:16:7","nodeType":"YulBlock","src":"2012:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:7","nodeType":"YulLiteral","src":"2021:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:7","nodeType":"YulLiteral","src":"2024:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:7","nodeType":"YulIdentifier","src":"2014:6:7"},"nativeSrc":"2014:12:7","nodeType":"YulFunctionCall","src":"2014:12:7"},"nativeSrc":"2014:12:7","nodeType":"YulExpressionStatement","src":"2014:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:7","nodeType":"YulIdentifier","src":"1978:5:7"},{"arguments":[{"name":"value","nativeSrc":"2003:5:7","nodeType":"YulIdentifier","src":"2003:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:7","nodeType":"YulIdentifier","src":"1985:17:7"},"nativeSrc":"1985:24:7","nodeType":"YulFunctionCall","src":"1985:24:7"}],"functionName":{"name":"eq","nativeSrc":"1975:2:7","nodeType":"YulIdentifier","src":"1975:2:7"},"nativeSrc":"1975:35:7","nodeType":"YulFunctionCall","src":"1975:35:7"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:7","nodeType":"YulIdentifier","src":"1968:6:7"},"nativeSrc":"1968:43:7","nodeType":"YulFunctionCall","src":"1968:43:7"},"nativeSrc":"1965:63:7","nodeType":"YulIf","src":"1965:63:7"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:7","nodeType":"YulTypedName","src":"1948:5:7","type":""}],"src":"1912:122:7"},{"body":{"nativeSrc":"2092:87:7","nodeType":"YulBlock","src":"2092:87:7","statements":[{"nativeSrc":"2102:29:7","nodeType":"YulAssignment","src":"2102:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:7","nodeType":"YulIdentifier","src":"2124:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:7","nodeType":"YulIdentifier","src":"2111:12:7"},"nativeSrc":"2111:20:7","nodeType":"YulFunctionCall","src":"2111:20:7"},"variableNames":[{"name":"value","nativeSrc":"2102:5:7","nodeType":"YulIdentifier","src":"2102:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:7","nodeType":"YulIdentifier","src":"2167:5:7"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:7","nodeType":"YulIdentifier","src":"2140:26:7"},"nativeSrc":"2140:33:7","nodeType":"YulFunctionCall","src":"2140:33:7"},"nativeSrc":"2140:33:7","nodeType":"YulExpressionStatement","src":"2140:33:7"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:7","nodeType":"YulTypedName","src":"2070:6:7","type":""},{"name":"end","nativeSrc":"2078:3:7","nodeType":"YulTypedName","src":"2078:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:7","nodeType":"YulTypedName","src":"2086:5:7","type":""}],"src":"2040:139:7"},{"body":{"nativeSrc":"2230:32:7","nodeType":"YulBlock","src":"2230:32:7","statements":[{"nativeSrc":"2240:16:7","nodeType":"YulAssignment","src":"2240:16:7","value":{"name":"value","nativeSrc":"2251:5:7","nodeType":"YulIdentifier","src":"2251:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:7","nodeType":"YulIdentifier","src":"2240:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:7","nodeType":"YulTypedName","src":"2212:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:7","nodeType":"YulTypedName","src":"2222:7:7","type":""}],"src":"2185:77:7"},{"body":{"nativeSrc":"2311:79:7","nodeType":"YulBlock","src":"2311:79:7","statements":[{"body":{"nativeSrc":"2368:16:7","nodeType":"YulBlock","src":"2368:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:7","nodeType":"YulLiteral","src":"2377:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:7","nodeType":"YulLiteral","src":"2380:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:7","nodeType":"YulIdentifier","src":"2370:6:7"},"nativeSrc":"2370:12:7","nodeType":"YulFunctionCall","src":"2370:12:7"},"nativeSrc":"2370:12:7","nodeType":"YulExpressionStatement","src":"2370:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:7","nodeType":"YulIdentifier","src":"2334:5:7"},{"arguments":[{"name":"value","nativeSrc":"2359:5:7","nodeType":"YulIdentifier","src":"2359:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:7","nodeType":"YulIdentifier","src":"2341:17:7"},"nativeSrc":"2341:24:7","nodeType":"YulFunctionCall","src":"2341:24:7"}],"functionName":{"name":"eq","nativeSrc":"2331:2:7","nodeType":"YulIdentifier","src":"2331:2:7"},"nativeSrc":"2331:35:7","nodeType":"YulFunctionCall","src":"2331:35:7"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:7","nodeType":"YulIdentifier","src":"2324:6:7"},"nativeSrc":"2324:43:7","nodeType":"YulFunctionCall","src":"2324:43:7"},"nativeSrc":"2321:63:7","nodeType":"YulIf","src":"2321:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:7","nodeType":"YulTypedName","src":"2304:5:7","type":""}],"src":"2268:122:7"},{"body":{"nativeSrc":"2448:87:7","nodeType":"YulBlock","src":"2448:87:7","statements":[{"nativeSrc":"2458:29:7","nodeType":"YulAssignment","src":"2458:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:7","nodeType":"YulIdentifier","src":"2480:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:7","nodeType":"YulIdentifier","src":"2467:12:7"},"nativeSrc":"2467:20:7","nodeType":"YulFunctionCall","src":"2467:20:7"},"variableNames":[{"name":"value","nativeSrc":"2458:5:7","nodeType":"YulIdentifier","src":"2458:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:7","nodeType":"YulIdentifier","src":"2523:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:7","nodeType":"YulIdentifier","src":"2496:26:7"},"nativeSrc":"2496:33:7","nodeType":"YulFunctionCall","src":"2496:33:7"},"nativeSrc":"2496:33:7","nodeType":"YulExpressionStatement","src":"2496:33:7"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:7","nodeType":"YulTypedName","src":"2426:6:7","type":""},{"name":"end","nativeSrc":"2434:3:7","nodeType":"YulTypedName","src":"2434:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:7","nodeType":"YulTypedName","src":"2442:5:7","type":""}],"src":"2396:139:7"},{"body":{"nativeSrc":"2624:391:7","nodeType":"YulBlock","src":"2624:391:7","statements":[{"body":{"nativeSrc":"2670:83:7","nodeType":"YulBlock","src":"2670:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:7","nodeType":"YulIdentifier","src":"2672:77:7"},"nativeSrc":"2672:79:7","nodeType":"YulFunctionCall","src":"2672:79:7"},"nativeSrc":"2672:79:7","nodeType":"YulExpressionStatement","src":"2672:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:7","nodeType":"YulIdentifier","src":"2645:7:7"},{"name":"headStart","nativeSrc":"2654:9:7","nodeType":"YulIdentifier","src":"2654:9:7"}],"functionName":{"name":"sub","nativeSrc":"2641:3:7","nodeType":"YulIdentifier","src":"2641:3:7"},"nativeSrc":"2641:23:7","nodeType":"YulFunctionCall","src":"2641:23:7"},{"kind":"number","nativeSrc":"2666:2:7","nodeType":"YulLiteral","src":"2666:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:7","nodeType":"YulIdentifier","src":"2637:3:7"},"nativeSrc":"2637:32:7","nodeType":"YulFunctionCall","src":"2637:32:7"},"nativeSrc":"2634:119:7","nodeType":"YulIf","src":"2634:119:7"},{"nativeSrc":"2763:117:7","nodeType":"YulBlock","src":"2763:117:7","statements":[{"nativeSrc":"2778:15:7","nodeType":"YulVariableDeclaration","src":"2778:15:7","value":{"kind":"number","nativeSrc":"2792:1:7","nodeType":"YulLiteral","src":"2792:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:7","nodeType":"YulTypedName","src":"2782:6:7","type":""}]},{"nativeSrc":"2807:63:7","nodeType":"YulAssignment","src":"2807:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:7","nodeType":"YulIdentifier","src":"2842:9:7"},{"name":"offset","nativeSrc":"2853:6:7","nodeType":"YulIdentifier","src":"2853:6:7"}],"functionName":{"name":"add","nativeSrc":"2838:3:7","nodeType":"YulIdentifier","src":"2838:3:7"},"nativeSrc":"2838:22:7","nodeType":"YulFunctionCall","src":"2838:22:7"},{"name":"dataEnd","nativeSrc":"2862:7:7","nodeType":"YulIdentifier","src":"2862:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:7","nodeType":"YulIdentifier","src":"2817:20:7"},"nativeSrc":"2817:53:7","nodeType":"YulFunctionCall","src":"2817:53:7"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:7","nodeType":"YulIdentifier","src":"2807:6:7"}]}]},{"nativeSrc":"2890:118:7","nodeType":"YulBlock","src":"2890:118:7","statements":[{"nativeSrc":"2905:16:7","nodeType":"YulVariableDeclaration","src":"2905:16:7","value":{"kind":"number","nativeSrc":"2919:2:7","nodeType":"YulLiteral","src":"2919:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:7","nodeType":"YulTypedName","src":"2909:6:7","type":""}]},{"nativeSrc":"2935:63:7","nodeType":"YulAssignment","src":"2935:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:7","nodeType":"YulIdentifier","src":"2970:9:7"},{"name":"offset","nativeSrc":"2981:6:7","nodeType":"YulIdentifier","src":"2981:6:7"}],"functionName":{"name":"add","nativeSrc":"2966:3:7","nodeType":"YulIdentifier","src":"2966:3:7"},"nativeSrc":"2966:22:7","nodeType":"YulFunctionCall","src":"2966:22:7"},{"name":"dataEnd","nativeSrc":"2990:7:7","nodeType":"YulIdentifier","src":"2990:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:7","nodeType":"YulIdentifier","src":"2945:20:7"},"nativeSrc":"2945:53:7","nodeType":"YulFunctionCall","src":"2945:53:7"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:7","nodeType":"YulIdentifier","src":"2935:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:7","nodeType":"YulTypedName","src":"2586:9:7","type":""},{"name":"dataEnd","nativeSrc":"2597:7:7","nodeType":"YulTypedName","src":"2597:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:7","nodeType":"YulTypedName","src":"2609:6:7","type":""},{"name":"value1","nativeSrc":"2617:6:7","nodeType":"YulTypedName","src":"2617:6:7","type":""}],"src":"2541:474:7"},{"body":{"nativeSrc":"3063:48:7","nodeType":"YulBlock","src":"3063:48:7","statements":[{"nativeSrc":"3073:32:7","nodeType":"YulAssignment","src":"3073:32:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:7","nodeType":"YulIdentifier","src":"3098:5:7"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:7","nodeType":"YulIdentifier","src":"3091:6:7"},"nativeSrc":"3091:13:7","nodeType":"YulFunctionCall","src":"3091:13:7"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:7","nodeType":"YulIdentifier","src":"3084:6:7"},"nativeSrc":"3084:21:7","nodeType":"YulFunctionCall","src":"3084:21:7"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:7","nodeType":"YulIdentifier","src":"3073:7:7"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:7","nodeType":"YulTypedName","src":"3045:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:7","nodeType":"YulTypedName","src":"3055:7:7","type":""}],"src":"3021:90:7"},{"body":{"nativeSrc":"3176:50:7","nodeType":"YulBlock","src":"3176:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:7","nodeType":"YulIdentifier","src":"3193:3:7"},{"arguments":[{"name":"value","nativeSrc":"3213:5:7","nodeType":"YulIdentifier","src":"3213:5:7"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:7","nodeType":"YulIdentifier","src":"3198:14:7"},"nativeSrc":"3198:21:7","nodeType":"YulFunctionCall","src":"3198:21:7"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:7","nodeType":"YulIdentifier","src":"3186:6:7"},"nativeSrc":"3186:34:7","nodeType":"YulFunctionCall","src":"3186:34:7"},"nativeSrc":"3186:34:7","nodeType":"YulExpressionStatement","src":"3186:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:7","nodeType":"YulTypedName","src":"3164:5:7","type":""},{"name":"pos","nativeSrc":"3171:3:7","nodeType":"YulTypedName","src":"3171:3:7","type":""}],"src":"3117:109:7"},{"body":{"nativeSrc":"3324:118:7","nodeType":"YulBlock","src":"3324:118:7","statements":[{"nativeSrc":"3334:26:7","nodeType":"YulAssignment","src":"3334:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:7","nodeType":"YulIdentifier","src":"3346:9:7"},{"kind":"number","nativeSrc":"3357:2:7","nodeType":"YulLiteral","src":"3357:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:7","nodeType":"YulIdentifier","src":"3342:3:7"},"nativeSrc":"3342:18:7","nodeType":"YulFunctionCall","src":"3342:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:7","nodeType":"YulIdentifier","src":"3334:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:7","nodeType":"YulIdentifier","src":"3408:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:7","nodeType":"YulIdentifier","src":"3421:9:7"},{"kind":"number","nativeSrc":"3432:1:7","nodeType":"YulLiteral","src":"3432:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:7","nodeType":"YulIdentifier","src":"3417:3:7"},"nativeSrc":"3417:17:7","nodeType":"YulFunctionCall","src":"3417:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:7","nodeType":"YulIdentifier","src":"3370:37:7"},"nativeSrc":"3370:65:7","nodeType":"YulFunctionCall","src":"3370:65:7"},"nativeSrc":"3370:65:7","nodeType":"YulExpressionStatement","src":"3370:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:7","nodeType":"YulTypedName","src":"3296:9:7","type":""},{"name":"value0","nativeSrc":"3308:6:7","nodeType":"YulTypedName","src":"3308:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:7","nodeType":"YulTypedName","src":"3319:4:7","type":""}],"src":"3232:210:7"},{"body":{"nativeSrc":"3513:53:7","nodeType":"YulBlock","src":"3513:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:7","nodeType":"YulIdentifier","src":"3530:3:7"},{"arguments":[{"name":"value","nativeSrc":"3553:5:7","nodeType":"YulIdentifier","src":"3553:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:7","nodeType":"YulIdentifier","src":"3535:17:7"},"nativeSrc":"3535:24:7","nodeType":"YulFunctionCall","src":"3535:24:7"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:7","nodeType":"YulIdentifier","src":"3523:6:7"},"nativeSrc":"3523:37:7","nodeType":"YulFunctionCall","src":"3523:37:7"},"nativeSrc":"3523:37:7","nodeType":"YulExpressionStatement","src":"3523:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:7","nodeType":"YulTypedName","src":"3501:5:7","type":""},{"name":"pos","nativeSrc":"3508:3:7","nodeType":"YulTypedName","src":"3508:3:7","type":""}],"src":"3448:118:7"},{"body":{"nativeSrc":"3670:124:7","nodeType":"YulBlock","src":"3670:124:7","statements":[{"nativeSrc":"3680:26:7","nodeType":"YulAssignment","src":"3680:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:7","nodeType":"YulIdentifier","src":"3692:9:7"},{"kind":"number","nativeSrc":"3703:2:7","nodeType":"YulLiteral","src":"3703:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:7","nodeType":"YulIdentifier","src":"3688:3:7"},"nativeSrc":"3688:18:7","nodeType":"YulFunctionCall","src":"3688:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:7","nodeType":"YulIdentifier","src":"3680:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:7","nodeType":"YulIdentifier","src":"3760:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:7","nodeType":"YulIdentifier","src":"3773:9:7"},{"kind":"number","nativeSrc":"3784:1:7","nodeType":"YulLiteral","src":"3784:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:7","nodeType":"YulIdentifier","src":"3769:3:7"},"nativeSrc":"3769:17:7","nodeType":"YulFunctionCall","src":"3769:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:7","nodeType":"YulIdentifier","src":"3716:43:7"},"nativeSrc":"3716:71:7","nodeType":"YulFunctionCall","src":"3716:71:7"},"nativeSrc":"3716:71:7","nodeType":"YulExpressionStatement","src":"3716:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:7","nodeType":"YulTypedName","src":"3642:9:7","type":""},{"name":"value0","nativeSrc":"3654:6:7","nodeType":"YulTypedName","src":"3654:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:7","nodeType":"YulTypedName","src":"3665:4:7","type":""}],"src":"3572:222:7"},{"body":{"nativeSrc":"3900:519:7","nodeType":"YulBlock","src":"3900:519:7","statements":[{"body":{"nativeSrc":"3946:83:7","nodeType":"YulBlock","src":"3946:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:7","nodeType":"YulIdentifier","src":"3948:77:7"},"nativeSrc":"3948:79:7","nodeType":"YulFunctionCall","src":"3948:79:7"},"nativeSrc":"3948:79:7","nodeType":"YulExpressionStatement","src":"3948:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:7","nodeType":"YulIdentifier","src":"3921:7:7"},{"name":"headStart","nativeSrc":"3930:9:7","nodeType":"YulIdentifier","src":"3930:9:7"}],"functionName":{"name":"sub","nativeSrc":"3917:3:7","nodeType":"YulIdentifier","src":"3917:3:7"},"nativeSrc":"3917:23:7","nodeType":"YulFunctionCall","src":"3917:23:7"},{"kind":"number","nativeSrc":"3942:2:7","nodeType":"YulLiteral","src":"3942:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:7","nodeType":"YulIdentifier","src":"3913:3:7"},"nativeSrc":"3913:32:7","nodeType":"YulFunctionCall","src":"3913:32:7"},"nativeSrc":"3910:119:7","nodeType":"YulIf","src":"3910:119:7"},{"nativeSrc":"4039:117:7","nodeType":"YulBlock","src":"4039:117:7","statements":[{"nativeSrc":"4054:15:7","nodeType":"YulVariableDeclaration","src":"4054:15:7","value":{"kind":"number","nativeSrc":"4068:1:7","nodeType":"YulLiteral","src":"4068:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:7","nodeType":"YulTypedName","src":"4058:6:7","type":""}]},{"nativeSrc":"4083:63:7","nodeType":"YulAssignment","src":"4083:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:7","nodeType":"YulIdentifier","src":"4118:9:7"},{"name":"offset","nativeSrc":"4129:6:7","nodeType":"YulIdentifier","src":"4129:6:7"}],"functionName":{"name":"add","nativeSrc":"4114:3:7","nodeType":"YulIdentifier","src":"4114:3:7"},"nativeSrc":"4114:22:7","nodeType":"YulFunctionCall","src":"4114:22:7"},{"name":"dataEnd","nativeSrc":"4138:7:7","nodeType":"YulIdentifier","src":"4138:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:7","nodeType":"YulIdentifier","src":"4093:20:7"},"nativeSrc":"4093:53:7","nodeType":"YulFunctionCall","src":"4093:53:7"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:7","nodeType":"YulIdentifier","src":"4083:6:7"}]}]},{"nativeSrc":"4166:118:7","nodeType":"YulBlock","src":"4166:118:7","statements":[{"nativeSrc":"4181:16:7","nodeType":"YulVariableDeclaration","src":"4181:16:7","value":{"kind":"number","nativeSrc":"4195:2:7","nodeType":"YulLiteral","src":"4195:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:7","nodeType":"YulTypedName","src":"4185:6:7","type":""}]},{"nativeSrc":"4211:63:7","nodeType":"YulAssignment","src":"4211:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:7","nodeType":"YulIdentifier","src":"4246:9:7"},{"name":"offset","nativeSrc":"4257:6:7","nodeType":"YulIdentifier","src":"4257:6:7"}],"functionName":{"name":"add","nativeSrc":"4242:3:7","nodeType":"YulIdentifier","src":"4242:3:7"},"nativeSrc":"4242:22:7","nodeType":"YulFunctionCall","src":"4242:22:7"},{"name":"dataEnd","nativeSrc":"4266:7:7","nodeType":"YulIdentifier","src":"4266:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:7","nodeType":"YulIdentifier","src":"4221:20:7"},"nativeSrc":"4221:53:7","nodeType":"YulFunctionCall","src":"4221:53:7"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:7","nodeType":"YulIdentifier","src":"4211:6:7"}]}]},{"nativeSrc":"4294:118:7","nodeType":"YulBlock","src":"4294:118:7","statements":[{"nativeSrc":"4309:16:7","nodeType":"YulVariableDeclaration","src":"4309:16:7","value":{"kind":"number","nativeSrc":"4323:2:7","nodeType":"YulLiteral","src":"4323:2:7","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:7","nodeType":"YulTypedName","src":"4313:6:7","type":""}]},{"nativeSrc":"4339:63:7","nodeType":"YulAssignment","src":"4339:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:7","nodeType":"YulIdentifier","src":"4374:9:7"},{"name":"offset","nativeSrc":"4385:6:7","nodeType":"YulIdentifier","src":"4385:6:7"}],"functionName":{"name":"add","nativeSrc":"4370:3:7","nodeType":"YulIdentifier","src":"4370:3:7"},"nativeSrc":"4370:22:7","nodeType":"YulFunctionCall","src":"4370:22:7"},{"name":"dataEnd","nativeSrc":"4394:7:7","nodeType":"YulIdentifier","src":"4394:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:7","nodeType":"YulIdentifier","src":"4349:20:7"},"nativeSrc":"4349:53:7","nodeType":"YulFunctionCall","src":"4349:53:7"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:7","nodeType":"YulIdentifier","src":"4339:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:7","nodeType":"YulTypedName","src":"3854:9:7","type":""},{"name":"dataEnd","nativeSrc":"3865:7:7","nodeType":"YulTypedName","src":"3865:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:7","nodeType":"YulTypedName","src":"3877:6:7","type":""},{"name":"value1","nativeSrc":"3885:6:7","nodeType":"YulTypedName","src":"3885:6:7","type":""},{"name":"value2","nativeSrc":"3893:6:7","nodeType":"YulTypedName","src":"3893:6:7","type":""}],"src":"3800:619:7"},{"body":{"nativeSrc":"4468:43:7","nodeType":"YulBlock","src":"4468:43:7","statements":[{"nativeSrc":"4478:27:7","nodeType":"YulAssignment","src":"4478:27:7","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:7","nodeType":"YulIdentifier","src":"4493:5:7"},{"kind":"number","nativeSrc":"4500:4:7","nodeType":"YulLiteral","src":"4500:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:7","nodeType":"YulIdentifier","src":"4489:3:7"},"nativeSrc":"4489:16:7","nodeType":"YulFunctionCall","src":"4489:16:7"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:7","nodeType":"YulIdentifier","src":"4478:7:7"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:7","nodeType":"YulTypedName","src":"4450:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:7","nodeType":"YulTypedName","src":"4460:7:7","type":""}],"src":"4425:86:7"},{"body":{"nativeSrc":"4578:51:7","nodeType":"YulBlock","src":"4578:51:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:7","nodeType":"YulIdentifier","src":"4595:3:7"},{"arguments":[{"name":"value","nativeSrc":"4616:5:7","nodeType":"YulIdentifier","src":"4616:5:7"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:7","nodeType":"YulIdentifier","src":"4600:15:7"},"nativeSrc":"4600:22:7","nodeType":"YulFunctionCall","src":"4600:22:7"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:7","nodeType":"YulIdentifier","src":"4588:6:7"},"nativeSrc":"4588:35:7","nodeType":"YulFunctionCall","src":"4588:35:7"},"nativeSrc":"4588:35:7","nodeType":"YulExpressionStatement","src":"4588:35:7"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:7","nodeType":"YulTypedName","src":"4566:5:7","type":""},{"name":"pos","nativeSrc":"4573:3:7","nodeType":"YulTypedName","src":"4573:3:7","type":""}],"src":"4517:112:7"},{"body":{"nativeSrc":"4729:120:7","nodeType":"YulBlock","src":"4729:120:7","statements":[{"nativeSrc":"4739:26:7","nodeType":"YulAssignment","src":"4739:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:7","nodeType":"YulIdentifier","src":"4751:9:7"},{"kind":"number","nativeSrc":"4762:2:7","nodeType":"YulLiteral","src":"4762:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:7","nodeType":"YulIdentifier","src":"4747:3:7"},"nativeSrc":"4747:18:7","nodeType":"YulFunctionCall","src":"4747:18:7"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:7","nodeType":"YulIdentifier","src":"4739:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:7","nodeType":"YulIdentifier","src":"4815:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:7","nodeType":"YulIdentifier","src":"4828:9:7"},{"kind":"number","nativeSrc":"4839:1:7","nodeType":"YulLiteral","src":"4839:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:7","nodeType":"YulIdentifier","src":"4824:3:7"},"nativeSrc":"4824:17:7","nodeType":"YulFunctionCall","src":"4824:17:7"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:7","nodeType":"YulIdentifier","src":"4775:39:7"},"nativeSrc":"4775:67:7","nodeType":"YulFunctionCall","src":"4775:67:7"},"nativeSrc":"4775:67:7","nodeType":"YulExpressionStatement","src":"4775:67:7"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:7","nodeType":"YulTypedName","src":"4701:9:7","type":""},{"name":"value0","nativeSrc":"4713:6:7","nodeType":"YulTypedName","src":"4713:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:7","nodeType":"YulTypedName","src":"4724:4:7","type":""}],"src":"4635:214:7"},{"body":{"nativeSrc":"4921:263:7","nodeType":"YulBlock","src":"4921:263:7","statements":[{"body":{"nativeSrc":"4967:83:7","nodeType":"YulBlock","src":"4967:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:7","nodeType":"YulIdentifier","src":"4969:77:7"},"nativeSrc":"4969:79:7","nodeType":"YulFunctionCall","src":"4969:79:7"},"nativeSrc":"4969:79:7","nodeType":"YulExpressionStatement","src":"4969:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:7","nodeType":"YulIdentifier","src":"4942:7:7"},{"name":"headStart","nativeSrc":"4951:9:7","nodeType":"YulIdentifier","src":"4951:9:7"}],"functionName":{"name":"sub","nativeSrc":"4938:3:7","nodeType":"YulIdentifier","src":"4938:3:7"},"nativeSrc":"4938:23:7","nodeType":"YulFunctionCall","src":"4938:23:7"},{"kind":"number","nativeSrc":"4963:2:7","nodeType":"YulLiteral","src":"4963:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:7","nodeType":"YulIdentifier","src":"4934:3:7"},"nativeSrc":"4934:32:7","nodeType":"YulFunctionCall","src":"4934:32:7"},"nativeSrc":"4931:119:7","nodeType":"YulIf","src":"4931:119:7"},{"nativeSrc":"5060:117:7","nodeType":"YulBlock","src":"5060:117:7","statements":[{"nativeSrc":"5075:15:7","nodeType":"YulVariableDeclaration","src":"5075:15:7","value":{"kind":"number","nativeSrc":"5089:1:7","nodeType":"YulLiteral","src":"5089:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:7","nodeType":"YulTypedName","src":"5079:6:7","type":""}]},{"nativeSrc":"5104:63:7","nodeType":"YulAssignment","src":"5104:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:7","nodeType":"YulIdentifier","src":"5139:9:7"},{"name":"offset","nativeSrc":"5150:6:7","nodeType":"YulIdentifier","src":"5150:6:7"}],"functionName":{"name":"add","nativeSrc":"5135:3:7","nodeType":"YulIdentifier","src":"5135:3:7"},"nativeSrc":"5135:22:7","nodeType":"YulFunctionCall","src":"5135:22:7"},{"name":"dataEnd","nativeSrc":"5159:7:7","nodeType":"YulIdentifier","src":"5159:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5114:20:7","nodeType":"YulIdentifier","src":"5114:20:7"},"nativeSrc":"5114:53:7","nodeType":"YulFunctionCall","src":"5114:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:7","nodeType":"YulIdentifier","src":"5104:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4855:329:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:7","nodeType":"YulTypedName","src":"4891:9:7","type":""},{"name":"dataEnd","nativeSrc":"4902:7:7","nodeType":"YulTypedName","src":"4902:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:7","nodeType":"YulTypedName","src":"4914:6:7","type":""}],"src":"4855:329:7"},{"body":{"nativeSrc":"5256:263:7","nodeType":"YulBlock","src":"5256:263:7","statements":[{"body":{"nativeSrc":"5302:83:7","nodeType":"YulBlock","src":"5302:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5304:77:7","nodeType":"YulIdentifier","src":"5304:77:7"},"nativeSrc":"5304:79:7","nodeType":"YulFunctionCall","src":"5304:79:7"},"nativeSrc":"5304:79:7","nodeType":"YulExpressionStatement","src":"5304:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5277:7:7","nodeType":"YulIdentifier","src":"5277:7:7"},{"name":"headStart","nativeSrc":"5286:9:7","nodeType":"YulIdentifier","src":"5286:9:7"}],"functionName":{"name":"sub","nativeSrc":"5273:3:7","nodeType":"YulIdentifier","src":"5273:3:7"},"nativeSrc":"5273:23:7","nodeType":"YulFunctionCall","src":"5273:23:7"},{"kind":"number","nativeSrc":"5298:2:7","nodeType":"YulLiteral","src":"5298:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5269:3:7","nodeType":"YulIdentifier","src":"5269:3:7"},"nativeSrc":"5269:32:7","nodeType":"YulFunctionCall","src":"5269:32:7"},"nativeSrc":"5266:119:7","nodeType":"YulIf","src":"5266:119:7"},{"nativeSrc":"5395:117:7","nodeType":"YulBlock","src":"5395:117:7","statements":[{"nativeSrc":"5410:15:7","nodeType":"YulVariableDeclaration","src":"5410:15:7","value":{"kind":"number","nativeSrc":"5424:1:7","nodeType":"YulLiteral","src":"5424:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5414:6:7","nodeType":"YulTypedName","src":"5414:6:7","type":""}]},{"nativeSrc":"5439:63:7","nodeType":"YulAssignment","src":"5439:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5474:9:7","nodeType":"YulIdentifier","src":"5474:9:7"},{"name":"offset","nativeSrc":"5485:6:7","nodeType":"YulIdentifier","src":"5485:6:7"}],"functionName":{"name":"add","nativeSrc":"5470:3:7","nodeType":"YulIdentifier","src":"5470:3:7"},"nativeSrc":"5470:22:7","nodeType":"YulFunctionCall","src":"5470:22:7"},{"name":"dataEnd","nativeSrc":"5494:7:7","nodeType":"YulIdentifier","src":"5494:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5449:20:7","nodeType":"YulIdentifier","src":"5449:20:7"},"nativeSrc":"5449:53:7","nodeType":"YulFunctionCall","src":"5449:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5439:6:7","nodeType":"YulIdentifier","src":"5439:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5190:329:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5226:9:7","nodeType":"YulTypedName","src":"5226:9:7","type":""},{"name":"dataEnd","nativeSrc":"5237:7:7","nodeType":"YulTypedName","src":"5237:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5249:6:7","nodeType":"YulTypedName","src":"5249:6:7","type":""}],"src":"5190:329:7"},{"body":{"nativeSrc":"5614:28:7","nodeType":"YulBlock","src":"5614:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5631:1:7","nodeType":"YulLiteral","src":"5631:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5634:1:7","nodeType":"YulLiteral","src":"5634:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5624:6:7","nodeType":"YulIdentifier","src":"5624:6:7"},"nativeSrc":"5624:12:7","nodeType":"YulFunctionCall","src":"5624:12:7"},"nativeSrc":"5624:12:7","nodeType":"YulExpressionStatement","src":"5624:12:7"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5525:117:7","nodeType":"YulFunctionDefinition","src":"5525:117:7"},{"body":{"nativeSrc":"5737:28:7","nodeType":"YulBlock","src":"5737:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5754:1:7","nodeType":"YulLiteral","src":"5754:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5757:1:7","nodeType":"YulLiteral","src":"5757:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5747:6:7","nodeType":"YulIdentifier","src":"5747:6:7"},"nativeSrc":"5747:12:7","nodeType":"YulFunctionCall","src":"5747:12:7"},"nativeSrc":"5747:12:7","nodeType":"YulExpressionStatement","src":"5747:12:7"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"5648:117:7","nodeType":"YulFunctionDefinition","src":"5648:117:7"},{"body":{"nativeSrc":"5799:152:7","nodeType":"YulBlock","src":"5799:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5816:1:7","nodeType":"YulLiteral","src":"5816:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5819:77:7","nodeType":"YulLiteral","src":"5819:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5809:6:7","nodeType":"YulIdentifier","src":"5809:6:7"},"nativeSrc":"5809:88:7","nodeType":"YulFunctionCall","src":"5809:88:7"},"nativeSrc":"5809:88:7","nodeType":"YulExpressionStatement","src":"5809:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5913:1:7","nodeType":"YulLiteral","src":"5913:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"5916:4:7","nodeType":"YulLiteral","src":"5916:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5906:6:7","nodeType":"YulIdentifier","src":"5906:6:7"},"nativeSrc":"5906:15:7","nodeType":"YulFunctionCall","src":"5906:15:7"},"nativeSrc":"5906:15:7","nodeType":"YulExpressionStatement","src":"5906:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5937:1:7","nodeType":"YulLiteral","src":"5937:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5940:4:7","nodeType":"YulLiteral","src":"5940:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5930:6:7","nodeType":"YulIdentifier","src":"5930:6:7"},"nativeSrc":"5930:15:7","nodeType":"YulFunctionCall","src":"5930:15:7"},"nativeSrc":"5930:15:7","nodeType":"YulExpressionStatement","src":"5930:15:7"}]},"name":"panic_error_0x41","nativeSrc":"5771:180:7","nodeType":"YulFunctionDefinition","src":"5771:180:7"},{"body":{"nativeSrc":"6000:238:7","nodeType":"YulBlock","src":"6000:238:7","statements":[{"nativeSrc":"6010:58:7","nodeType":"YulVariableDeclaration","src":"6010:58:7","value":{"arguments":[{"name":"memPtr","nativeSrc":"6032:6:7","nodeType":"YulIdentifier","src":"6032:6:7"},{"arguments":[{"name":"size","nativeSrc":"6062:4:7","nodeType":"YulIdentifier","src":"6062:4:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6040:21:7","nodeType":"YulIdentifier","src":"6040:21:7"},"nativeSrc":"6040:27:7","nodeType":"YulFunctionCall","src":"6040:27:7"}],"functionName":{"name":"add","nativeSrc":"6028:3:7","nodeType":"YulIdentifier","src":"6028:3:7"},"nativeSrc":"6028:40:7","nodeType":"YulFunctionCall","src":"6028:40:7"},"variables":[{"name":"newFreePtr","nativeSrc":"6014:10:7","nodeType":"YulTypedName","src":"6014:10:7","type":""}]},{"body":{"nativeSrc":"6179:22:7","nodeType":"YulBlock","src":"6179:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6181:16:7","nodeType":"YulIdentifier","src":"6181:16:7"},"nativeSrc":"6181:18:7","nodeType":"YulFunctionCall","src":"6181:18:7"},"nativeSrc":"6181:18:7","nodeType":"YulExpressionStatement","src":"6181:18:7"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"6122:10:7","nodeType":"YulIdentifier","src":"6122:10:7"},{"kind":"number","nativeSrc":"6134:18:7","nodeType":"YulLiteral","src":"6134:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6119:2:7","nodeType":"YulIdentifier","src":"6119:2:7"},"nativeSrc":"6119:34:7","nodeType":"YulFunctionCall","src":"6119:34:7"},{"arguments":[{"name":"newFreePtr","nativeSrc":"6158:10:7","nodeType":"YulIdentifier","src":"6158:10:7"},{"name":"memPtr","nativeSrc":"6170:6:7","nodeType":"YulIdentifier","src":"6170:6:7"}],"functionName":{"name":"lt","nativeSrc":"6155:2:7","nodeType":"YulIdentifier","src":"6155:2:7"},"nativeSrc":"6155:22:7","nodeType":"YulFunctionCall","src":"6155:22:7"}],"functionName":{"name":"or","nativeSrc":"6116:2:7","nodeType":"YulIdentifier","src":"6116:2:7"},"nativeSrc":"6116:62:7","nodeType":"YulFunctionCall","src":"6116:62:7"},"nativeSrc":"6113:88:7","nodeType":"YulIf","src":"6113:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6217:2:7","nodeType":"YulLiteral","src":"6217:2:7","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"6221:10:7","nodeType":"YulIdentifier","src":"6221:10:7"}],"functionName":{"name":"mstore","nativeSrc":"6210:6:7","nodeType":"YulIdentifier","src":"6210:6:7"},"nativeSrc":"6210:22:7","nodeType":"YulFunctionCall","src":"6210:22:7"},"nativeSrc":"6210:22:7","nodeType":"YulExpressionStatement","src":"6210:22:7"}]},"name":"finalize_allocation","nativeSrc":"5957:281:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5986:6:7","nodeType":"YulTypedName","src":"5986:6:7","type":""},{"name":"size","nativeSrc":"5994:4:7","nodeType":"YulTypedName","src":"5994:4:7","type":""}],"src":"5957:281:7"},{"body":{"nativeSrc":"6285:88:7","nodeType":"YulBlock","src":"6285:88:7","statements":[{"nativeSrc":"6295:30:7","nodeType":"YulAssignment","src":"6295:30:7","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"6305:18:7","nodeType":"YulIdentifier","src":"6305:18:7"},"nativeSrc":"6305:20:7","nodeType":"YulFunctionCall","src":"6305:20:7"},"variableNames":[{"name":"memPtr","nativeSrc":"6295:6:7","nodeType":"YulIdentifier","src":"6295:6:7"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"6354:6:7","nodeType":"YulIdentifier","src":"6354:6:7"},{"name":"size","nativeSrc":"6362:4:7","nodeType":"YulIdentifier","src":"6362:4:7"}],"functionName":{"name":"finalize_allocation","nativeSrc":"6334:19:7","nodeType":"YulIdentifier","src":"6334:19:7"},"nativeSrc":"6334:33:7","nodeType":"YulFunctionCall","src":"6334:33:7"},"nativeSrc":"6334:33:7","nodeType":"YulExpressionStatement","src":"6334:33:7"}]},"name":"allocate_memory","nativeSrc":"6244:129:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"6269:4:7","nodeType":"YulTypedName","src":"6269:4:7","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"6278:6:7","nodeType":"YulTypedName","src":"6278:6:7","type":""}],"src":"6244:129:7"},{"body":{"nativeSrc":"6445:241:7","nodeType":"YulBlock","src":"6445:241:7","statements":[{"body":{"nativeSrc":"6550:22:7","nodeType":"YulBlock","src":"6550:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6552:16:7","nodeType":"YulIdentifier","src":"6552:16:7"},"nativeSrc":"6552:18:7","nodeType":"YulFunctionCall","src":"6552:18:7"},"nativeSrc":"6552:18:7","nodeType":"YulExpressionStatement","src":"6552:18:7"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6522:6:7","nodeType":"YulIdentifier","src":"6522:6:7"},{"kind":"number","nativeSrc":"6530:18:7","nodeType":"YulLiteral","src":"6530:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6519:2:7","nodeType":"YulIdentifier","src":"6519:2:7"},"nativeSrc":"6519:30:7","nodeType":"YulFunctionCall","src":"6519:30:7"},"nativeSrc":"6516:56:7","nodeType":"YulIf","src":"6516:56:7"},{"nativeSrc":"6582:37:7","nodeType":"YulAssignment","src":"6582:37:7","value":{"arguments":[{"name":"length","nativeSrc":"6612:6:7","nodeType":"YulIdentifier","src":"6612:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6590:21:7","nodeType":"YulIdentifier","src":"6590:21:7"},"nativeSrc":"6590:29:7","nodeType":"YulFunctionCall","src":"6590:29:7"},"variableNames":[{"name":"size","nativeSrc":"6582:4:7","nodeType":"YulIdentifier","src":"6582:4:7"}]},{"nativeSrc":"6656:23:7","nodeType":"YulAssignment","src":"6656:23:7","value":{"arguments":[{"name":"size","nativeSrc":"6668:4:7","nodeType":"YulIdentifier","src":"6668:4:7"},{"kind":"number","nativeSrc":"6674:4:7","nodeType":"YulLiteral","src":"6674:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6664:3:7","nodeType":"YulIdentifier","src":"6664:3:7"},"nativeSrc":"6664:15:7","nodeType":"YulFunctionCall","src":"6664:15:7"},"variableNames":[{"name":"size","nativeSrc":"6656:4:7","nodeType":"YulIdentifier","src":"6656:4:7"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6379:307:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"6429:6:7","nodeType":"YulTypedName","src":"6429:6:7","type":""}],"returnVariables":[{"name":"size","nativeSrc":"6440:4:7","nodeType":"YulTypedName","src":"6440:4:7","type":""}],"src":"6379:307:7"},{"body":{"nativeSrc":"6756:84:7","nodeType":"YulBlock","src":"6756:84:7","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"6780:3:7","nodeType":"YulIdentifier","src":"6780:3:7"},{"name":"src","nativeSrc":"6785:3:7","nodeType":"YulIdentifier","src":"6785:3:7"},{"name":"length","nativeSrc":"6790:6:7","nodeType":"YulIdentifier","src":"6790:6:7"}],"functionName":{"name":"calldatacopy","nativeSrc":"6767:12:7","nodeType":"YulIdentifier","src":"6767:12:7"},"nativeSrc":"6767:30:7","nodeType":"YulFunctionCall","src":"6767:30:7"},"nativeSrc":"6767:30:7","nodeType":"YulExpressionStatement","src":"6767:30:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6817:3:7","nodeType":"YulIdentifier","src":"6817:3:7"},{"name":"length","nativeSrc":"6822:6:7","nodeType":"YulIdentifier","src":"6822:6:7"}],"functionName":{"name":"add","nativeSrc":"6813:3:7","nodeType":"YulIdentifier","src":"6813:3:7"},"nativeSrc":"6813:16:7","nodeType":"YulFunctionCall","src":"6813:16:7"},{"kind":"number","nativeSrc":"6831:1:7","nodeType":"YulLiteral","src":"6831:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6806:6:7","nodeType":"YulIdentifier","src":"6806:6:7"},"nativeSrc":"6806:27:7","nodeType":"YulFunctionCall","src":"6806:27:7"},"nativeSrc":"6806:27:7","nodeType":"YulExpressionStatement","src":"6806:27:7"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6692:148:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6738:3:7","nodeType":"YulTypedName","src":"6738:3:7","type":""},{"name":"dst","nativeSrc":"6743:3:7","nodeType":"YulTypedName","src":"6743:3:7","type":""},{"name":"length","nativeSrc":"6748:6:7","nodeType":"YulTypedName","src":"6748:6:7","type":""}],"src":"6692:148:7"},{"body":{"nativeSrc":"6929:340:7","nodeType":"YulBlock","src":"6929:340:7","statements":[{"nativeSrc":"6939:74:7","nodeType":"YulAssignment","src":"6939:74:7","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7005:6:7","nodeType":"YulIdentifier","src":"7005:6:7"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6964:40:7","nodeType":"YulIdentifier","src":"6964:40:7"},"nativeSrc":"6964:48:7","nodeType":"YulFunctionCall","src":"6964:48:7"}],"functionName":{"name":"allocate_memory","nativeSrc":"6948:15:7","nodeType":"YulIdentifier","src":"6948:15:7"},"nativeSrc":"6948:65:7","nodeType":"YulFunctionCall","src":"6948:65:7"},"variableNames":[{"name":"array","nativeSrc":"6939:5:7","nodeType":"YulIdentifier","src":"6939:5:7"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7029:5:7","nodeType":"YulIdentifier","src":"7029:5:7"},{"name":"length","nativeSrc":"7036:6:7","nodeType":"YulIdentifier","src":"7036:6:7"}],"functionName":{"name":"mstore","nativeSrc":"7022:6:7","nodeType":"YulIdentifier","src":"7022:6:7"},"nativeSrc":"7022:21:7","nodeType":"YulFunctionCall","src":"7022:21:7"},"nativeSrc":"7022:21:7","nodeType":"YulExpressionStatement","src":"7022:21:7"},{"nativeSrc":"7052:27:7","nodeType":"YulVariableDeclaration","src":"7052:27:7","value":{"arguments":[{"name":"array","nativeSrc":"7067:5:7","nodeType":"YulIdentifier","src":"7067:5:7"},{"kind":"number","nativeSrc":"7074:4:7","nodeType":"YulLiteral","src":"7074:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7063:3:7","nodeType":"YulIdentifier","src":"7063:3:7"},"nativeSrc":"7063:16:7","nodeType":"YulFunctionCall","src":"7063:16:7"},"variables":[{"name":"dst","nativeSrc":"7056:3:7","nodeType":"YulTypedName","src":"7056:3:7","type":""}]},{"body":{"nativeSrc":"7117:83:7","nodeType":"YulBlock","src":"7117:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7119:77:7","nodeType":"YulIdentifier","src":"7119:77:7"},"nativeSrc":"7119:79:7","nodeType":"YulFunctionCall","src":"7119:79:7"},"nativeSrc":"7119:79:7","nodeType":"YulExpressionStatement","src":"7119:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7098:3:7","nodeType":"YulIdentifier","src":"7098:3:7"},{"name":"length","nativeSrc":"7103:6:7","nodeType":"YulIdentifier","src":"7103:6:7"}],"functionName":{"name":"add","nativeSrc":"7094:3:7","nodeType":"YulIdentifier","src":"7094:3:7"},"nativeSrc":"7094:16:7","nodeType":"YulFunctionCall","src":"7094:16:7"},{"name":"end","nativeSrc":"7112:3:7","nodeType":"YulIdentifier","src":"7112:3:7"}],"functionName":{"name":"gt","nativeSrc":"7091:2:7","nodeType":"YulIdentifier","src":"7091:2:7"},"nativeSrc":"7091:25:7","nodeType":"YulFunctionCall","src":"7091:25:7"},"nativeSrc":"7088:112:7","nodeType":"YulIf","src":"7088:112:7"},{"expression":{"arguments":[{"name":"src","nativeSrc":"7246:3:7","nodeType":"YulIdentifier","src":"7246:3:7"},{"name":"dst","nativeSrc":"7251:3:7","nodeType":"YulIdentifier","src":"7251:3:7"},{"name":"length","nativeSrc":"7256:6:7","nodeType":"YulIdentifier","src":"7256:6:7"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7209:36:7","nodeType":"YulIdentifier","src":"7209:36:7"},"nativeSrc":"7209:54:7","nodeType":"YulFunctionCall","src":"7209:54:7"},"nativeSrc":"7209:54:7","nodeType":"YulExpressionStatement","src":"7209:54:7"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6846:423:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6902:3:7","nodeType":"YulTypedName","src":"6902:3:7","type":""},{"name":"length","nativeSrc":"6907:6:7","nodeType":"YulTypedName","src":"6907:6:7","type":""},{"name":"end","nativeSrc":"6915:3:7","nodeType":"YulTypedName","src":"6915:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6923:5:7","nodeType":"YulTypedName","src":"6923:5:7","type":""}],"src":"6846:423:7"},{"body":{"nativeSrc":"7349:277:7","nodeType":"YulBlock","src":"7349:277:7","statements":[{"body":{"nativeSrc":"7398:83:7","nodeType":"YulBlock","src":"7398:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"7400:77:7","nodeType":"YulIdentifier","src":"7400:77:7"},"nativeSrc":"7400:79:7","nodeType":"YulFunctionCall","src":"7400:79:7"},"nativeSrc":"7400:79:7","nodeType":"YulExpressionStatement","src":"7400:79:7"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7377:6:7","nodeType":"YulIdentifier","src":"7377:6:7"},{"kind":"number","nativeSrc":"7385:4:7","nodeType":"YulLiteral","src":"7385:4:7","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"7373:3:7","nodeType":"YulIdentifier","src":"7373:3:7"},"nativeSrc":"7373:17:7","nodeType":"YulFunctionCall","src":"7373:17:7"},{"name":"end","nativeSrc":"7392:3:7","nodeType":"YulIdentifier","src":"7392:3:7"}],"functionName":{"name":"slt","nativeSrc":"7369:3:7","nodeType":"YulIdentifier","src":"7369:3:7"},"nativeSrc":"7369:27:7","nodeType":"YulFunctionCall","src":"7369:27:7"}],"functionName":{"name":"iszero","nativeSrc":"7362:6:7","nodeType":"YulIdentifier","src":"7362:6:7"},"nativeSrc":"7362:35:7","nodeType":"YulFunctionCall","src":"7362:35:7"},"nativeSrc":"7359:122:7","nodeType":"YulIf","src":"7359:122:7"},{"nativeSrc":"7490:34:7","nodeType":"YulVariableDeclaration","src":"7490:34:7","value":{"arguments":[{"name":"offset","nativeSrc":"7517:6:7","nodeType":"YulIdentifier","src":"7517:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"7504:12:7","nodeType":"YulIdentifier","src":"7504:12:7"},"nativeSrc":"7504:20:7","nodeType":"YulFunctionCall","src":"7504:20:7"},"variables":[{"name":"length","nativeSrc":"7494:6:7","nodeType":"YulTypedName","src":"7494:6:7","type":""}]},{"nativeSrc":"7533:87:7","nodeType":"YulAssignment","src":"7533:87:7","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7593:6:7","nodeType":"YulIdentifier","src":"7593:6:7"},{"kind":"number","nativeSrc":"7601:4:7","nodeType":"YulLiteral","src":"7601:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7589:3:7","nodeType":"YulIdentifier","src":"7589:3:7"},"nativeSrc":"7589:17:7","nodeType":"YulFunctionCall","src":"7589:17:7"},{"name":"length","nativeSrc":"7608:6:7","nodeType":"YulIdentifier","src":"7608:6:7"},{"name":"end","nativeSrc":"7616:3:7","nodeType":"YulIdentifier","src":"7616:3:7"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7542:46:7","nodeType":"YulIdentifier","src":"7542:46:7"},"nativeSrc":"7542:78:7","nodeType":"YulFunctionCall","src":"7542:78:7"},"variableNames":[{"name":"array","nativeSrc":"7533:5:7","nodeType":"YulIdentifier","src":"7533:5:7"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7288:338:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7327:6:7","nodeType":"YulTypedName","src":"7327:6:7","type":""},{"name":"end","nativeSrc":"7335:3:7","nodeType":"YulTypedName","src":"7335:3:7","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7343:5:7","nodeType":"YulTypedName","src":"7343:5:7","type":""}],"src":"7288:338:7"},{"body":{"nativeSrc":"7741:688:7","nodeType":"YulBlock","src":"7741:688:7","statements":[{"body":{"nativeSrc":"7787:83:7","nodeType":"YulBlock","src":"7787:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7789:77:7","nodeType":"YulIdentifier","src":"7789:77:7"},"nativeSrc":"7789:79:7","nodeType":"YulFunctionCall","src":"7789:79:7"},"nativeSrc":"7789:79:7","nodeType":"YulExpressionStatement","src":"7789:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7762:7:7","nodeType":"YulIdentifier","src":"7762:7:7"},{"name":"headStart","nativeSrc":"7771:9:7","nodeType":"YulIdentifier","src":"7771:9:7"}],"functionName":{"name":"sub","nativeSrc":"7758:3:7","nodeType":"YulIdentifier","src":"7758:3:7"},"nativeSrc":"7758:23:7","nodeType":"YulFunctionCall","src":"7758:23:7"},{"kind":"number","nativeSrc":"7783:2:7","nodeType":"YulLiteral","src":"7783:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"7754:3:7","nodeType":"YulIdentifier","src":"7754:3:7"},"nativeSrc":"7754:32:7","nodeType":"YulFunctionCall","src":"7754:32:7"},"nativeSrc":"7751:119:7","nodeType":"YulIf","src":"7751:119:7"},{"nativeSrc":"7880:117:7","nodeType":"YulBlock","src":"7880:117:7","statements":[{"nativeSrc":"7895:15:7","nodeType":"YulVariableDeclaration","src":"7895:15:7","value":{"kind":"number","nativeSrc":"7909:1:7","nodeType":"YulLiteral","src":"7909:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7899:6:7","nodeType":"YulTypedName","src":"7899:6:7","type":""}]},{"nativeSrc":"7924:63:7","nodeType":"YulAssignment","src":"7924:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7959:9:7","nodeType":"YulIdentifier","src":"7959:9:7"},{"name":"offset","nativeSrc":"7970:6:7","nodeType":"YulIdentifier","src":"7970:6:7"}],"functionName":{"name":"add","nativeSrc":"7955:3:7","nodeType":"YulIdentifier","src":"7955:3:7"},"nativeSrc":"7955:22:7","nodeType":"YulFunctionCall","src":"7955:22:7"},{"name":"dataEnd","nativeSrc":"7979:7:7","nodeType":"YulIdentifier","src":"7979:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7934:20:7","nodeType":"YulIdentifier","src":"7934:20:7"},"nativeSrc":"7934:53:7","nodeType":"YulFunctionCall","src":"7934:53:7"},"variableNames":[{"name":"value0","nativeSrc":"7924:6:7","nodeType":"YulIdentifier","src":"7924:6:7"}]}]},{"nativeSrc":"8007:118:7","nodeType":"YulBlock","src":"8007:118:7","statements":[{"nativeSrc":"8022:16:7","nodeType":"YulVariableDeclaration","src":"8022:16:7","value":{"kind":"number","nativeSrc":"8036:2:7","nodeType":"YulLiteral","src":"8036:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8026:6:7","nodeType":"YulTypedName","src":"8026:6:7","type":""}]},{"nativeSrc":"8052:63:7","nodeType":"YulAssignment","src":"8052:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8087:9:7","nodeType":"YulIdentifier","src":"8087:9:7"},{"name":"offset","nativeSrc":"8098:6:7","nodeType":"YulIdentifier","src":"8098:6:7"}],"functionName":{"name":"add","nativeSrc":"8083:3:7","nodeType":"YulIdentifier","src":"8083:3:7"},"nativeSrc":"8083:22:7","nodeType":"YulFunctionCall","src":"8083:22:7"},{"name":"dataEnd","nativeSrc":"8107:7:7","nodeType":"YulIdentifier","src":"8107:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8062:20:7","nodeType":"YulIdentifier","src":"8062:20:7"},"nativeSrc":"8062:53:7","nodeType":"YulFunctionCall","src":"8062:53:7"},"variableNames":[{"name":"value1","nativeSrc":"8052:6:7","nodeType":"YulIdentifier","src":"8052:6:7"}]}]},{"nativeSrc":"8135:287:7","nodeType":"YulBlock","src":"8135:287:7","statements":[{"nativeSrc":"8150:46:7","nodeType":"YulVariableDeclaration","src":"8150:46:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8181:9:7","nodeType":"YulIdentifier","src":"8181:9:7"},{"kind":"number","nativeSrc":"8192:2:7","nodeType":"YulLiteral","src":"8192:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8177:3:7","nodeType":"YulIdentifier","src":"8177:3:7"},"nativeSrc":"8177:18:7","nodeType":"YulFunctionCall","src":"8177:18:7"}],"functionName":{"name":"calldataload","nativeSrc":"8164:12:7","nodeType":"YulIdentifier","src":"8164:12:7"},"nativeSrc":"8164:32:7","nodeType":"YulFunctionCall","src":"8164:32:7"},"variables":[{"name":"offset","nativeSrc":"8154:6:7","nodeType":"YulTypedName","src":"8154:6:7","type":""}]},{"body":{"nativeSrc":"8243:83:7","nodeType":"YulBlock","src":"8243:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8245:77:7","nodeType":"YulIdentifier","src":"8245:77:7"},"nativeSrc":"8245:79:7","nodeType":"YulFunctionCall","src":"8245:79:7"},"nativeSrc":"8245:79:7","nodeType":"YulExpressionStatement","src":"8245:79:7"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8215:6:7","nodeType":"YulIdentifier","src":"8215:6:7"},{"kind":"number","nativeSrc":"8223:18:7","nodeType":"YulLiteral","src":"8223:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8212:2:7","nodeType":"YulIdentifier","src":"8212:2:7"},"nativeSrc":"8212:30:7","nodeType":"YulFunctionCall","src":"8212:30:7"},"nativeSrc":"8209:117:7","nodeType":"YulIf","src":"8209:117:7"},{"nativeSrc":"8340:72:7","nodeType":"YulAssignment","src":"8340:72:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8384:9:7","nodeType":"YulIdentifier","src":"8384:9:7"},{"name":"offset","nativeSrc":"8395:6:7","nodeType":"YulIdentifier","src":"8395:6:7"}],"functionName":{"name":"add","nativeSrc":"8380:3:7","nodeType":"YulIdentifier","src":"8380:3:7"},"nativeSrc":"8380:22:7","nodeType":"YulFunctionCall","src":"8380:22:7"},{"name":"dataEnd","nativeSrc":"8404:7:7","nodeType":"YulIdentifier","src":"8404:7:7"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8350:29:7","nodeType":"YulIdentifier","src":"8350:29:7"},"nativeSrc":"8350:62:7","nodeType":"YulFunctionCall","src":"8350:62:7"},"variableNames":[{"name":"value2","nativeSrc":"8340:6:7","nodeType":"YulIdentifier","src":"8340:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nativeSrc":"7632:797:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7695:9:7","nodeType":"YulTypedName","src":"7695:9:7","type":""},{"name":"dataEnd","nativeSrc":"7706:7:7","nodeType":"YulTypedName","src":"7706:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7718:6:7","nodeType":"YulTypedName","src":"7718:6:7","type":""},{"name":"value1","nativeSrc":"7726:6:7","nodeType":"YulTypedName","src":"7726:6:7","type":""},{"name":"value2","nativeSrc":"7734:6:7","nodeType":"YulTypedName","src":"7734:6:7","type":""}],"src":"7632:797:7"},{"body":{"nativeSrc":"8518:391:7","nodeType":"YulBlock","src":"8518:391:7","statements":[{"body":{"nativeSrc":"8564:83:7","nodeType":"YulBlock","src":"8564:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8566:77:7","nodeType":"YulIdentifier","src":"8566:77:7"},"nativeSrc":"8566:79:7","nodeType":"YulFunctionCall","src":"8566:79:7"},"nativeSrc":"8566:79:7","nodeType":"YulExpressionStatement","src":"8566:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8539:7:7","nodeType":"YulIdentifier","src":"8539:7:7"},{"name":"headStart","nativeSrc":"8548:9:7","nodeType":"YulIdentifier","src":"8548:9:7"}],"functionName":{"name":"sub","nativeSrc":"8535:3:7","nodeType":"YulIdentifier","src":"8535:3:7"},"nativeSrc":"8535:23:7","nodeType":"YulFunctionCall","src":"8535:23:7"},{"kind":"number","nativeSrc":"8560:2:7","nodeType":"YulLiteral","src":"8560:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8531:3:7","nodeType":"YulIdentifier","src":"8531:3:7"},"nativeSrc":"8531:32:7","nodeType":"YulFunctionCall","src":"8531:32:7"},"nativeSrc":"8528:119:7","nodeType":"YulIf","src":"8528:119:7"},{"nativeSrc":"8657:117:7","nodeType":"YulBlock","src":"8657:117:7","statements":[{"nativeSrc":"8672:15:7","nodeType":"YulVariableDeclaration","src":"8672:15:7","value":{"kind":"number","nativeSrc":"8686:1:7","nodeType":"YulLiteral","src":"8686:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8676:6:7","nodeType":"YulTypedName","src":"8676:6:7","type":""}]},{"nativeSrc":"8701:63:7","nodeType":"YulAssignment","src":"8701:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8736:9:7","nodeType":"YulIdentifier","src":"8736:9:7"},{"name":"offset","nativeSrc":"8747:6:7","nodeType":"YulIdentifier","src":"8747:6:7"}],"functionName":{"name":"add","nativeSrc":"8732:3:7","nodeType":"YulIdentifier","src":"8732:3:7"},"nativeSrc":"8732:22:7","nodeType":"YulFunctionCall","src":"8732:22:7"},{"name":"dataEnd","nativeSrc":"8756:7:7","nodeType":"YulIdentifier","src":"8756:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8711:20:7","nodeType":"YulIdentifier","src":"8711:20:7"},"nativeSrc":"8711:53:7","nodeType":"YulFunctionCall","src":"8711:53:7"},"variableNames":[{"name":"value0","nativeSrc":"8701:6:7","nodeType":"YulIdentifier","src":"8701:6:7"}]}]},{"nativeSrc":"8784:118:7","nodeType":"YulBlock","src":"8784:118:7","statements":[{"nativeSrc":"8799:16:7","nodeType":"YulVariableDeclaration","src":"8799:16:7","value":{"kind":"number","nativeSrc":"8813:2:7","nodeType":"YulLiteral","src":"8813:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8803:6:7","nodeType":"YulTypedName","src":"8803:6:7","type":""}]},{"nativeSrc":"8829:63:7","nodeType":"YulAssignment","src":"8829:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8864:9:7","nodeType":"YulIdentifier","src":"8864:9:7"},{"name":"offset","nativeSrc":"8875:6:7","nodeType":"YulIdentifier","src":"8875:6:7"}],"functionName":{"name":"add","nativeSrc":"8860:3:7","nodeType":"YulIdentifier","src":"8860:3:7"},"nativeSrc":"8860:22:7","nodeType":"YulFunctionCall","src":"8860:22:7"},{"name":"dataEnd","nativeSrc":"8884:7:7","nodeType":"YulIdentifier","src":"8884:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8839:20:7","nodeType":"YulIdentifier","src":"8839:20:7"},"nativeSrc":"8839:53:7","nodeType":"YulFunctionCall","src":"8839:53:7"},"variableNames":[{"name":"value1","nativeSrc":"8829:6:7","nodeType":"YulIdentifier","src":"8829:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8435:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8480:9:7","nodeType":"YulTypedName","src":"8480:9:7","type":""},{"name":"dataEnd","nativeSrc":"8491:7:7","nodeType":"YulTypedName","src":"8491:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8503:6:7","nodeType":"YulTypedName","src":"8503:6:7","type":""},{"name":"value1","nativeSrc":"8511:6:7","nodeType":"YulTypedName","src":"8511:6:7","type":""}],"src":"8435:474:7"},{"body":{"nativeSrc":"8943:152:7","nodeType":"YulBlock","src":"8943:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8960:1:7","nodeType":"YulLiteral","src":"8960:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"8963:77:7","nodeType":"YulLiteral","src":"8963:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8953:6:7","nodeType":"YulIdentifier","src":"8953:6:7"},"nativeSrc":"8953:88:7","nodeType":"YulFunctionCall","src":"8953:88:7"},"nativeSrc":"8953:88:7","nodeType":"YulExpressionStatement","src":"8953:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9057:1:7","nodeType":"YulLiteral","src":"9057:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"9060:4:7","nodeType":"YulLiteral","src":"9060:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9050:6:7","nodeType":"YulIdentifier","src":"9050:6:7"},"nativeSrc":"9050:15:7","nodeType":"YulFunctionCall","src":"9050:15:7"},"nativeSrc":"9050:15:7","nodeType":"YulExpressionStatement","src":"9050:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9081:1:7","nodeType":"YulLiteral","src":"9081:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9084:4:7","nodeType":"YulLiteral","src":"9084:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9074:6:7","nodeType":"YulIdentifier","src":"9074:6:7"},"nativeSrc":"9074:15:7","nodeType":"YulFunctionCall","src":"9074:15:7"},"nativeSrc":"9074:15:7","nodeType":"YulExpressionStatement","src":"9074:15:7"}]},"name":"panic_error_0x22","nativeSrc":"8915:180:7","nodeType":"YulFunctionDefinition","src":"8915:180:7"},{"body":{"nativeSrc":"9152:269:7","nodeType":"YulBlock","src":"9152:269:7","statements":[{"nativeSrc":"9162:22:7","nodeType":"YulAssignment","src":"9162:22:7","value":{"arguments":[{"name":"data","nativeSrc":"9176:4:7","nodeType":"YulIdentifier","src":"9176:4:7"},{"kind":"number","nativeSrc":"9182:1:7","nodeType":"YulLiteral","src":"9182:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"9172:3:7","nodeType":"YulIdentifier","src":"9172:3:7"},"nativeSrc":"9172:12:7","nodeType":"YulFunctionCall","src":"9172:12:7"},"variableNames":[{"name":"length","nativeSrc":"9162:6:7","nodeType":"YulIdentifier","src":"9162:6:7"}]},{"nativeSrc":"9193:38:7","nodeType":"YulVariableDeclaration","src":"9193:38:7","value":{"arguments":[{"name":"data","nativeSrc":"9223:4:7","nodeType":"YulIdentifier","src":"9223:4:7"},{"kind":"number","nativeSrc":"9229:1:7","nodeType":"YulLiteral","src":"9229:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9219:3:7","nodeType":"YulIdentifier","src":"9219:3:7"},"nativeSrc":"9219:12:7","nodeType":"YulFunctionCall","src":"9219:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9197:18:7","nodeType":"YulTypedName","src":"9197:18:7","type":""}]},{"body":{"nativeSrc":"9270:51:7","nodeType":"YulBlock","src":"9270:51:7","statements":[{"nativeSrc":"9284:27:7","nodeType":"YulAssignment","src":"9284:27:7","value":{"arguments":[{"name":"length","nativeSrc":"9298:6:7","nodeType":"YulIdentifier","src":"9298:6:7"},{"kind":"number","nativeSrc":"9306:4:7","nodeType":"YulLiteral","src":"9306:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9294:3:7","nodeType":"YulIdentifier","src":"9294:3:7"},"nativeSrc":"9294:17:7","nodeType":"YulFunctionCall","src":"9294:17:7"},"variableNames":[{"name":"length","nativeSrc":"9284:6:7","nodeType":"YulIdentifier","src":"9284:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9250:18:7","nodeType":"YulIdentifier","src":"9250:18:7"}],"functionName":{"name":"iszero","nativeSrc":"9243:6:7","nodeType":"YulIdentifier","src":"9243:6:7"},"nativeSrc":"9243:26:7","nodeType":"YulFunctionCall","src":"9243:26:7"},"nativeSrc":"9240:81:7","nodeType":"YulIf","src":"9240:81:7"},{"body":{"nativeSrc":"9373:42:7","nodeType":"YulBlock","src":"9373:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"9387:16:7","nodeType":"YulIdentifier","src":"9387:16:7"},"nativeSrc":"9387:18:7","nodeType":"YulFunctionCall","src":"9387:18:7"},"nativeSrc":"9387:18:7","nodeType":"YulExpressionStatement","src":"9387:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9337:18:7","nodeType":"YulIdentifier","src":"9337:18:7"},{"arguments":[{"name":"length","nativeSrc":"9360:6:7","nodeType":"YulIdentifier","src":"9360:6:7"},{"kind":"number","nativeSrc":"9368:2:7","nodeType":"YulLiteral","src":"9368:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9357:2:7","nodeType":"YulIdentifier","src":"9357:2:7"},"nativeSrc":"9357:14:7","nodeType":"YulFunctionCall","src":"9357:14:7"}],"functionName":{"name":"eq","nativeSrc":"9334:2:7","nodeType":"YulIdentifier","src":"9334:2:7"},"nativeSrc":"9334:38:7","nodeType":"YulFunctionCall","src":"9334:38:7"},"nativeSrc":"9331:84:7","nodeType":"YulIf","src":"9331:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"9101:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9136:4:7","nodeType":"YulTypedName","src":"9136:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9145:6:7","nodeType":"YulTypedName","src":"9145:6:7","type":""}],"src":"9101:320:7"},{"body":{"nativeSrc":"9455:152:7","nodeType":"YulBlock","src":"9455:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9472:1:7","nodeType":"YulLiteral","src":"9472:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9475:77:7","nodeType":"YulLiteral","src":"9475:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9465:6:7","nodeType":"YulIdentifier","src":"9465:6:7"},"nativeSrc":"9465:88:7","nodeType":"YulFunctionCall","src":"9465:88:7"},"nativeSrc":"9465:88:7","nodeType":"YulExpressionStatement","src":"9465:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9569:1:7","nodeType":"YulLiteral","src":"9569:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"9572:4:7","nodeType":"YulLiteral","src":"9572:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9562:6:7","nodeType":"YulIdentifier","src":"9562:6:7"},"nativeSrc":"9562:15:7","nodeType":"YulFunctionCall","src":"9562:15:7"},"nativeSrc":"9562:15:7","nodeType":"YulExpressionStatement","src":"9562:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9593:1:7","nodeType":"YulLiteral","src":"9593:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"9596:4:7","nodeType":"YulLiteral","src":"9596:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9586:6:7","nodeType":"YulIdentifier","src":"9586:6:7"},"nativeSrc":"9586:15:7","nodeType":"YulFunctionCall","src":"9586:15:7"},"nativeSrc":"9586:15:7","nodeType":"YulExpressionStatement","src":"9586:15:7"}]},"name":"panic_error_0x11","nativeSrc":"9427:180:7","nodeType":"YulFunctionDefinition","src":"9427:180:7"},{"body":{"nativeSrc":"9658:149:7","nodeType":"YulBlock","src":"9658:149:7","statements":[{"nativeSrc":"9668:25:7","nodeType":"YulAssignment","src":"9668:25:7","value":{"arguments":[{"name":"x","nativeSrc":"9691:1:7","nodeType":"YulIdentifier","src":"9691:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9673:17:7","nodeType":"YulIdentifier","src":"9673:17:7"},"nativeSrc":"9673:20:7","nodeType":"YulFunctionCall","src":"9673:20:7"},"variableNames":[{"name":"x","nativeSrc":"9668:1:7","nodeType":"YulIdentifier","src":"9668:1:7"}]},{"nativeSrc":"9702:25:7","nodeType":"YulAssignment","src":"9702:25:7","value":{"arguments":[{"name":"y","nativeSrc":"9725:1:7","nodeType":"YulIdentifier","src":"9725:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9707:17:7","nodeType":"YulIdentifier","src":"9707:17:7"},"nativeSrc":"9707:20:7","nodeType":"YulFunctionCall","src":"9707:20:7"},"variableNames":[{"name":"y","nativeSrc":"9702:1:7","nodeType":"YulIdentifier","src":"9702:1:7"}]},{"nativeSrc":"9736:17:7","nodeType":"YulAssignment","src":"9736:17:7","value":{"arguments":[{"name":"x","nativeSrc":"9748:1:7","nodeType":"YulIdentifier","src":"9748:1:7"},{"name":"y","nativeSrc":"9751:1:7","nodeType":"YulIdentifier","src":"9751:1:7"}],"functionName":{"name":"sub","nativeSrc":"9744:3:7","nodeType":"YulIdentifier","src":"9744:3:7"},"nativeSrc":"9744:9:7","nodeType":"YulFunctionCall","src":"9744:9:7"},"variableNames":[{"name":"diff","nativeSrc":"9736:4:7","nodeType":"YulIdentifier","src":"9736:4:7"}]},{"body":{"nativeSrc":"9778:22:7","nodeType":"YulBlock","src":"9778:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9780:16:7","nodeType":"YulIdentifier","src":"9780:16:7"},"nativeSrc":"9780:18:7","nodeType":"YulFunctionCall","src":"9780:18:7"},"nativeSrc":"9780:18:7","nodeType":"YulExpressionStatement","src":"9780:18:7"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"9769:4:7","nodeType":"YulIdentifier","src":"9769:4:7"},{"name":"x","nativeSrc":"9775:1:7","nodeType":"YulIdentifier","src":"9775:1:7"}],"functionName":{"name":"gt","nativeSrc":"9766:2:7","nodeType":"YulIdentifier","src":"9766:2:7"},"nativeSrc":"9766:11:7","nodeType":"YulFunctionCall","src":"9766:11:7"},"nativeSrc":"9763:37:7","nodeType":"YulIf","src":"9763:37:7"}]},"name":"checked_sub_t_uint256","nativeSrc":"9613:194:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9644:1:7","nodeType":"YulTypedName","src":"9644:1:7","type":""},{"name":"y","nativeSrc":"9647:1:7","nodeType":"YulTypedName","src":"9647:1:7","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"9653:4:7","nodeType":"YulTypedName","src":"9653:4:7","type":""}],"src":"9613:194:7"},{"body":{"nativeSrc":"9878:53:7","nodeType":"YulBlock","src":"9878:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9895:3:7","nodeType":"YulIdentifier","src":"9895:3:7"},{"arguments":[{"name":"value","nativeSrc":"9918:5:7","nodeType":"YulIdentifier","src":"9918:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"9900:17:7","nodeType":"YulIdentifier","src":"9900:17:7"},"nativeSrc":"9900:24:7","nodeType":"YulFunctionCall","src":"9900:24:7"}],"functionName":{"name":"mstore","nativeSrc":"9888:6:7","nodeType":"YulIdentifier","src":"9888:6:7"},"nativeSrc":"9888:37:7","nodeType":"YulFunctionCall","src":"9888:37:7"},"nativeSrc":"9888:37:7","nodeType":"YulExpressionStatement","src":"9888:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9813:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9866:5:7","nodeType":"YulTypedName","src":"9866:5:7","type":""},{"name":"pos","nativeSrc":"9873:3:7","nodeType":"YulTypedName","src":"9873:3:7","type":""}],"src":"9813:118:7"},{"body":{"nativeSrc":"9995:40:7","nodeType":"YulBlock","src":"9995:40:7","statements":[{"nativeSrc":"10006:22:7","nodeType":"YulAssignment","src":"10006:22:7","value":{"arguments":[{"name":"value","nativeSrc":"10022:5:7","nodeType":"YulIdentifier","src":"10022:5:7"}],"functionName":{"name":"mload","nativeSrc":"10016:5:7","nodeType":"YulIdentifier","src":"10016:5:7"},"nativeSrc":"10016:12:7","nodeType":"YulFunctionCall","src":"10016:12:7"},"variableNames":[{"name":"length","nativeSrc":"10006:6:7","nodeType":"YulIdentifier","src":"10006:6:7"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"9937:98:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9978:5:7","nodeType":"YulTypedName","src":"9978:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9988:6:7","nodeType":"YulTypedName","src":"9988:6:7","type":""}],"src":"9937:98:7"},{"body":{"nativeSrc":"10136:73:7","nodeType":"YulBlock","src":"10136:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10153:3:7","nodeType":"YulIdentifier","src":"10153:3:7"},{"name":"length","nativeSrc":"10158:6:7","nodeType":"YulIdentifier","src":"10158:6:7"}],"functionName":{"name":"mstore","nativeSrc":"10146:6:7","nodeType":"YulIdentifier","src":"10146:6:7"},"nativeSrc":"10146:19:7","nodeType":"YulFunctionCall","src":"10146:19:7"},"nativeSrc":"10146:19:7","nodeType":"YulExpressionStatement","src":"10146:19:7"},{"nativeSrc":"10174:29:7","nodeType":"YulAssignment","src":"10174:29:7","value":{"arguments":[{"name":"pos","nativeSrc":"10193:3:7","nodeType":"YulIdentifier","src":"10193:3:7"},{"kind":"number","nativeSrc":"10198:4:7","nodeType":"YulLiteral","src":"10198:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10189:3:7","nodeType":"YulIdentifier","src":"10189:3:7"},"nativeSrc":"10189:14:7","nodeType":"YulFunctionCall","src":"10189:14:7"},"variableNames":[{"name":"updated_pos","nativeSrc":"10174:11:7","nodeType":"YulIdentifier","src":"10174:11:7"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10041:168:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10108:3:7","nodeType":"YulTypedName","src":"10108:3:7","type":""},{"name":"length","nativeSrc":"10113:6:7","nodeType":"YulTypedName","src":"10113:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10124:11:7","nodeType":"YulTypedName","src":"10124:11:7","type":""}],"src":"10041:168:7"},{"body":{"nativeSrc":"10305:283:7","nodeType":"YulBlock","src":"10305:283:7","statements":[{"nativeSrc":"10315:52:7","nodeType":"YulVariableDeclaration","src":"10315:52:7","value":{"arguments":[{"name":"value","nativeSrc":"10361:5:7","nodeType":"YulIdentifier","src":"10361:5:7"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"10329:31:7","nodeType":"YulIdentifier","src":"10329:31:7"},"nativeSrc":"10329:38:7","nodeType":"YulFunctionCall","src":"10329:38:7"},"variables":[{"name":"length","nativeSrc":"10319:6:7","nodeType":"YulTypedName","src":"10319:6:7","type":""}]},{"nativeSrc":"10376:77:7","nodeType":"YulAssignment","src":"10376:77:7","value":{"arguments":[{"name":"pos","nativeSrc":"10441:3:7","nodeType":"YulIdentifier","src":"10441:3:7"},{"name":"length","nativeSrc":"10446:6:7","nodeType":"YulIdentifier","src":"10446:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"10383:57:7","nodeType":"YulIdentifier","src":"10383:57:7"},"nativeSrc":"10383:70:7","nodeType":"YulFunctionCall","src":"10383:70:7"},"variableNames":[{"name":"pos","nativeSrc":"10376:3:7","nodeType":"YulIdentifier","src":"10376:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10501:5:7","nodeType":"YulIdentifier","src":"10501:5:7"},{"kind":"number","nativeSrc":"10508:4:7","nodeType":"YulLiteral","src":"10508:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10497:3:7","nodeType":"YulIdentifier","src":"10497:3:7"},"nativeSrc":"10497:16:7","nodeType":"YulFunctionCall","src":"10497:16:7"},{"name":"pos","nativeSrc":"10515:3:7","nodeType":"YulIdentifier","src":"10515:3:7"},{"name":"length","nativeSrc":"10520:6:7","nodeType":"YulIdentifier","src":"10520:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"10462:34:7","nodeType":"YulIdentifier","src":"10462:34:7"},"nativeSrc":"10462:65:7","nodeType":"YulFunctionCall","src":"10462:65:7"},"nativeSrc":"10462:65:7","nodeType":"YulExpressionStatement","src":"10462:65:7"},{"nativeSrc":"10536:46:7","nodeType":"YulAssignment","src":"10536:46:7","value":{"arguments":[{"name":"pos","nativeSrc":"10547:3:7","nodeType":"YulIdentifier","src":"10547:3:7"},{"arguments":[{"name":"length","nativeSrc":"10574:6:7","nodeType":"YulIdentifier","src":"10574:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10552:21:7","nodeType":"YulIdentifier","src":"10552:21:7"},"nativeSrc":"10552:29:7","nodeType":"YulFunctionCall","src":"10552:29:7"}],"functionName":{"name":"add","nativeSrc":"10543:3:7","nodeType":"YulIdentifier","src":"10543:3:7"},"nativeSrc":"10543:39:7","nodeType":"YulFunctionCall","src":"10543:39:7"},"variableNames":[{"name":"end","nativeSrc":"10536:3:7","nodeType":"YulIdentifier","src":"10536:3:7"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"10215:373:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10286:5:7","nodeType":"YulTypedName","src":"10286:5:7","type":""},{"name":"pos","nativeSrc":"10293:3:7","nodeType":"YulTypedName","src":"10293:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10301:3:7","nodeType":"YulTypedName","src":"10301:3:7","type":""}],"src":"10215:373:7"},{"body":{"nativeSrc":"10794:440:7","nodeType":"YulBlock","src":"10794:440:7","statements":[{"nativeSrc":"10804:27:7","nodeType":"YulAssignment","src":"10804:27:7","value":{"arguments":[{"name":"headStart","nativeSrc":"10816:9:7","nodeType":"YulIdentifier","src":"10816:9:7"},{"kind":"number","nativeSrc":"10827:3:7","nodeType":"YulLiteral","src":"10827:3:7","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10812:3:7","nodeType":"YulIdentifier","src":"10812:3:7"},"nativeSrc":"10812:19:7","nodeType":"YulFunctionCall","src":"10812:19:7"},"variableNames":[{"name":"tail","nativeSrc":"10804:4:7","nodeType":"YulIdentifier","src":"10804:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10885:6:7","nodeType":"YulIdentifier","src":"10885:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"10898:9:7","nodeType":"YulIdentifier","src":"10898:9:7"},{"kind":"number","nativeSrc":"10909:1:7","nodeType":"YulLiteral","src":"10909:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10894:3:7","nodeType":"YulIdentifier","src":"10894:3:7"},"nativeSrc":"10894:17:7","nodeType":"YulFunctionCall","src":"10894:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10841:43:7","nodeType":"YulIdentifier","src":"10841:43:7"},"nativeSrc":"10841:71:7","nodeType":"YulFunctionCall","src":"10841:71:7"},"nativeSrc":"10841:71:7","nodeType":"YulExpressionStatement","src":"10841:71:7"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10966:6:7","nodeType":"YulIdentifier","src":"10966:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"10979:9:7","nodeType":"YulIdentifier","src":"10979:9:7"},{"kind":"number","nativeSrc":"10990:2:7","nodeType":"YulLiteral","src":"10990:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10975:3:7","nodeType":"YulIdentifier","src":"10975:3:7"},"nativeSrc":"10975:18:7","nodeType":"YulFunctionCall","src":"10975:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10922:43:7","nodeType":"YulIdentifier","src":"10922:43:7"},"nativeSrc":"10922:72:7","nodeType":"YulFunctionCall","src":"10922:72:7"},"nativeSrc":"10922:72:7","nodeType":"YulExpressionStatement","src":"10922:72:7"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"11048:6:7","nodeType":"YulIdentifier","src":"11048:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"11061:9:7","nodeType":"YulIdentifier","src":"11061:9:7"},{"kind":"number","nativeSrc":"11072:2:7","nodeType":"YulLiteral","src":"11072:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11057:3:7","nodeType":"YulIdentifier","src":"11057:3:7"},"nativeSrc":"11057:18:7","nodeType":"YulFunctionCall","src":"11057:18:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"11004:43:7","nodeType":"YulIdentifier","src":"11004:43:7"},"nativeSrc":"11004:72:7","nodeType":"YulFunctionCall","src":"11004:72:7"},"nativeSrc":"11004:72:7","nodeType":"YulExpressionStatement","src":"11004:72:7"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11097:9:7","nodeType":"YulIdentifier","src":"11097:9:7"},{"kind":"number","nativeSrc":"11108:2:7","nodeType":"YulLiteral","src":"11108:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11093:3:7","nodeType":"YulIdentifier","src":"11093:3:7"},"nativeSrc":"11093:18:7","nodeType":"YulFunctionCall","src":"11093:18:7"},{"arguments":[{"name":"tail","nativeSrc":"11117:4:7","nodeType":"YulIdentifier","src":"11117:4:7"},{"name":"headStart","nativeSrc":"11123:9:7","nodeType":"YulIdentifier","src":"11123:9:7"}],"functionName":{"name":"sub","nativeSrc":"11113:3:7","nodeType":"YulIdentifier","src":"11113:3:7"},"nativeSrc":"11113:20:7","nodeType":"YulFunctionCall","src":"11113:20:7"}],"functionName":{"name":"mstore","nativeSrc":"11086:6:7","nodeType":"YulIdentifier","src":"11086:6:7"},"nativeSrc":"11086:48:7","nodeType":"YulFunctionCall","src":"11086:48:7"},"nativeSrc":"11086:48:7","nodeType":"YulExpressionStatement","src":"11086:48:7"},{"nativeSrc":"11143:84:7","nodeType":"YulAssignment","src":"11143:84:7","value":{"arguments":[{"name":"value3","nativeSrc":"11213:6:7","nodeType":"YulIdentifier","src":"11213:6:7"},{"name":"tail","nativeSrc":"11222:4:7","nodeType":"YulIdentifier","src":"11222:4:7"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"11151:61:7","nodeType":"YulIdentifier","src":"11151:61:7"},"nativeSrc":"11151:76:7","nodeType":"YulFunctionCall","src":"11151:76:7"},"variableNames":[{"name":"tail","nativeSrc":"11143:4:7","nodeType":"YulIdentifier","src":"11143:4:7"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"10594:640:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10742:9:7","nodeType":"YulTypedName","src":"10742:9:7","type":""},{"name":"value3","nativeSrc":"10754:6:7","nodeType":"YulTypedName","src":"10754:6:7","type":""},{"name":"value2","nativeSrc":"10762:6:7","nodeType":"YulTypedName","src":"10762:6:7","type":""},{"name":"value1","nativeSrc":"10770:6:7","nodeType":"YulTypedName","src":"10770:6:7","type":""},{"name":"value0","nativeSrc":"10778:6:7","nodeType":"YulTypedName","src":"10778:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10789:4:7","nodeType":"YulTypedName","src":"10789:4:7","type":""}],"src":"10594:640:7"},{"body":{"nativeSrc":"11284:147:7","nodeType":"YulBlock","src":"11284:147:7","statements":[{"nativeSrc":"11294:25:7","nodeType":"YulAssignment","src":"11294:25:7","value":{"arguments":[{"name":"x","nativeSrc":"11317:1:7","nodeType":"YulIdentifier","src":"11317:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11299:17:7","nodeType":"YulIdentifier","src":"11299:17:7"},"nativeSrc":"11299:20:7","nodeType":"YulFunctionCall","src":"11299:20:7"},"variableNames":[{"name":"x","nativeSrc":"11294:1:7","nodeType":"YulIdentifier","src":"11294:1:7"}]},{"nativeSrc":"11328:25:7","nodeType":"YulAssignment","src":"11328:25:7","value":{"arguments":[{"name":"y","nativeSrc":"11351:1:7","nodeType":"YulIdentifier","src":"11351:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11333:17:7","nodeType":"YulIdentifier","src":"11333:17:7"},"nativeSrc":"11333:20:7","nodeType":"YulFunctionCall","src":"11333:20:7"},"variableNames":[{"name":"y","nativeSrc":"11328:1:7","nodeType":"YulIdentifier","src":"11328:1:7"}]},{"nativeSrc":"11362:16:7","nodeType":"YulAssignment","src":"11362:16:7","value":{"arguments":[{"name":"x","nativeSrc":"11373:1:7","nodeType":"YulIdentifier","src":"11373:1:7"},{"name":"y","nativeSrc":"11376:1:7","nodeType":"YulIdentifier","src":"11376:1:7"}],"functionName":{"name":"add","nativeSrc":"11369:3:7","nodeType":"YulIdentifier","src":"11369:3:7"},"nativeSrc":"11369:9:7","nodeType":"YulFunctionCall","src":"11369:9:7"},"variableNames":[{"name":"sum","nativeSrc":"11362:3:7","nodeType":"YulIdentifier","src":"11362:3:7"}]},{"body":{"nativeSrc":"11402:22:7","nodeType":"YulBlock","src":"11402:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11404:16:7","nodeType":"YulIdentifier","src":"11404:16:7"},"nativeSrc":"11404:18:7","nodeType":"YulFunctionCall","src":"11404:18:7"},"nativeSrc":"11404:18:7","nodeType":"YulExpressionStatement","src":"11404:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"11394:1:7","nodeType":"YulIdentifier","src":"11394:1:7"},{"name":"sum","nativeSrc":"11397:3:7","nodeType":"YulIdentifier","src":"11397:3:7"}],"functionName":{"name":"gt","nativeSrc":"11391:2:7","nodeType":"YulIdentifier","src":"11391:2:7"},"nativeSrc":"11391:10:7","nodeType":"YulFunctionCall","src":"11391:10:7"},"nativeSrc":"11388:36:7","nodeType":"YulIf","src":"11388:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"11240:191:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11271:1:7","nodeType":"YulTypedName","src":"11271:1:7","type":""},{"name":"y","nativeSrc":"11274:1:7","nodeType":"YulTypedName","src":"11274:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11280:3:7","nodeType":"YulTypedName","src":"11280:3:7","type":""}],"src":"11240:191:7"},{"body":{"nativeSrc":"11465:152:7","nodeType":"YulBlock","src":"11465:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11482:1:7","nodeType":"YulLiteral","src":"11482:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"11485:77:7","nodeType":"YulLiteral","src":"11485:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11475:6:7","nodeType":"YulIdentifier","src":"11475:6:7"},"nativeSrc":"11475:88:7","nodeType":"YulFunctionCall","src":"11475:88:7"},"nativeSrc":"11475:88:7","nodeType":"YulExpressionStatement","src":"11475:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11579:1:7","nodeType":"YulLiteral","src":"11579:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"11582:4:7","nodeType":"YulLiteral","src":"11582:4:7","type":"","value":"0x01"}],"functionName":{"name":"mstore","nativeSrc":"11572:6:7","nodeType":"YulIdentifier","src":"11572:6:7"},"nativeSrc":"11572:15:7","nodeType":"YulFunctionCall","src":"11572:15:7"},"nativeSrc":"11572:15:7","nodeType":"YulExpressionStatement","src":"11572:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11603:1:7","nodeType":"YulLiteral","src":"11603:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"11606:4:7","nodeType":"YulLiteral","src":"11606:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11596:6:7","nodeType":"YulIdentifier","src":"11596:6:7"},"nativeSrc":"11596:15:7","nodeType":"YulFunctionCall","src":"11596:15:7"},"nativeSrc":"11596:15:7","nodeType":"YulExpressionStatement","src":"11596:15:7"}]},"name":"panic_error_0x01","nativeSrc":"11437:180:7","nodeType":"YulFunctionDefinition","src":"11437:180:7"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xCAE9CA51 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x281 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEC SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xF91 JUMP JUMPDEST PUSH2 0x437 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14C SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19A SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x692 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x969 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0xF4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1219 JUMP JUMPDEST PUSH2 0xA19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2BE SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2EA SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x337 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x30C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x337 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x560 DUP5 DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x61B SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x863 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x87C SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x1288 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x961 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x936 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x961 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x944 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x976 CALLER DUP5 DUP5 PUSH2 0xA3E JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 SWAP1 POP PUSH2 0x990 DUP6 DUP6 PUSH2 0x33F JUMP JUMPDEST ISZERO PUSH2 0xA10 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8F4FFCB1 CALLER DUP7 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1380 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 SWAP2 POP POP PUSH2 0xA12 JUMP JUMPDEST POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xAC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB4E SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST LT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBE5 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x12E8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC8C SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF0 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xD83 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST EQ PUSH2 0xD91 JUMPI PUSH2 0xD90 PUSH2 0x1400 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB6 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF9 DUP3 PUSH2 0xD97 JUMP JUMPDEST PUSH2 0xE03 DUP2 DUP6 PUSH2 0xDA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xE13 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0xE1C DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE41 DUP2 DUP5 PUSH2 0xDEE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE88 DUP3 PUSH2 0xE5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE98 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP2 EQ PUSH2 0xEA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB5 DUP2 PUSH2 0xE8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECE DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP2 EQ PUSH2 0xED9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEEB DUP2 PUSH2 0xEC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF08 JUMPI PUSH2 0xF07 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF16 DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF27 DUP6 DUP3 DUP7 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF46 DUP2 PUSH2 0xF31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF70 DUP2 PUSH2 0xEBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFAA JUMPI PUSH2 0xFA9 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB8 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xFC9 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xFDA DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xFE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1015 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1031 JUMPI PUSH2 0x1030 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103F DUP5 DUP3 DUP6 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x105E JUMPI PUSH2 0x105D PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106C DUP5 DUP3 DUP6 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10B7 DUP3 PUSH2 0xDDD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x10D6 JUMPI PUSH2 0x10D5 PUSH2 0x107F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E9 PUSH2 0xE49 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F5 DUP3 DUP3 PUSH2 0x10AE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1115 JUMPI PUSH2 0x1114 PUSH2 0x107F JUMP JUMPDEST JUMPDEST PUSH2 0x111E DUP3 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114D PUSH2 0x1148 DUP5 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x10DF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1169 JUMPI PUSH2 0x1168 PUSH2 0x107A JUMP JUMPDEST JUMPDEST PUSH2 0x1174 DUP5 DUP3 DUP6 PUSH2 0x112B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1191 JUMPI PUSH2 0x1190 PUSH2 0x1075 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x11A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x113A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH2 0x11C2 PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11D1 DUP7 DUP3 DUP8 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11E2 DUP7 DUP3 DUP8 ADD PUSH2 0xEDC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0xE58 JUMP JUMPDEST JUMPDEST PUSH2 0x120F DUP7 DUP3 DUP8 ADD PUSH2 0x117C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1230 JUMPI PUSH2 0x122F PUSH2 0xE53 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x124F DUP6 DUP3 DUP7 ADD PUSH2 0xEA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12A0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x1259 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12F3 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x12FE DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1316 JUMPI PUSH2 0x1315 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1325 DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1352 DUP3 PUSH2 0x132B JUMP JUMPDEST PUSH2 0x135C DUP2 DUP6 PUSH2 0x1336 JUMP JUMPDEST SWAP4 POP PUSH2 0x136C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xDB3 JUMP JUMPDEST PUSH2 0x1375 DUP2 PUSH2 0xDDD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1395 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x13A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x13AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x131C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 DUP5 PUSH2 0x1347 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP3 PUSH2 0xEBB JUMP JUMPDEST SWAP2 POP PUSH2 0x13E2 DUP4 PUSH2 0xEBB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x12B9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xF8 CALLDATALOAD SELFDESTRUCT 0xF8 0xD0 PUSH28 0xDDA7A97D084DE7F17A75A31B1DE77DE3A84763574DB4D957A164736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"250:6151:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;315:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3965:241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;473:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3370:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;367:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5242:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;556:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5845:553;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;340:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2913:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4605:462;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:64;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;315:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3965:241::-;4057:12;4116:6;4082:9;:21;4092:10;4082:21;;;;;;;;;;;;;;;:31;4104:8;4082:31;;;;;;;;;;;;;;;:40;;;;4159:8;4138:38;;4147:10;4138:38;;;4169:6;4138:38;;;;;;:::i;:::-;;;;;;;;4194:4;4187:11;;3965:241;;;;:::o;473:26::-;;;;:::o;3370:326::-;3486:12;3529:9;:16;3539:5;3529:16;;;;;;;;;;;;;;;:28;3546:10;3529:28;;;;;;;;;;;;;;;;3519:6;:38;;3511:47;;;;;;3620:6;3588:9;:16;3598:5;3588:16;;;;;;;;;;;;;;;:28;3605:10;3588:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;3637:29;3647:5;3654:3;3659:6;3637:9;:29::i;:::-;3684:4;3677:11;;3370:326;;;;;:::o;367:26::-;;;;;;;;;;;;;:::o;5242:340::-;5288:12;5346:6;5321:9;:21;5331:10;5321:21;;;;;;;;;;;;;;;;:31;;5313:40;;;;;;5423:6;5398:9;:21;5408:10;5398:21;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;5483:6;5468:11;;:21;;;;;;;:::i;:::-;;;;;;;;5533:10;5528:24;;;5545:6;5528:24;;;;;;:::i;:::-;;;;;;;;5570:4;5563:11;;5242:340;;;:::o;556:44::-;;;;;;;;;;;;;;;;;:::o;5845:553::-;5935:12;5988:6;5968:9;:16;5978:5;5968:16;;;;;;;;;;;;;;;;:26;;5960:35;;;;;;6067:9;:16;6077:5;6067:16;;;;;;;;;;;;;;;:28;6084:10;6067:28;;;;;;;;;;;;;;;;6057:6;:38;;6049:47;;;;;;6146:6;6126:9;:16;6136:5;6126:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6233:6;6201:9;:16;6211:5;6201:16;;;;;;;;;;;;;;;:28;6218:10;6201:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;6305:6;6290:11;;:21;;;;;;;:::i;:::-;;;;;;;;6354:5;6349:19;;;6361:6;6349:19;;;;;;:::i;:::-;;;;;;;;6386:4;6379:11;;5845:553;;;;:::o;340:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2913:177::-;3001:12;3026:34;3036:10;3048:3;3053:6;3026:9;:34::i;:::-;3078:4;3071:11;;2913:177;;;;:::o;4605:462::-;4738:12;4763:22;4803:8;4763:49;;4827:25;4835:8;4845:6;4827:7;:25::i;:::-;4823:237;;;4869:7;:23;;;4911:10;4940:6;4973:4;4997:10;4869:153;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5044:4;5037:11;;;;;4823:237;4752:315;4605:462;;;;;;:::o;607:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1844:858::-;2014:3;1999:19;;:3;:19;;;1991:28;;;;;;2101:6;2081:9;:16;2091:5;2081:16;;;;;;;;;;;;;;;;:26;;2073:35;;;;;;2186:9;:14;2196:3;2186:14;;;;;;;;;;;;;;;;2176:6;2159:9;:14;2169:3;2159:14;;;;;;;;;;;;;;;;:23;;;;:::i;:::-;:41;;2151:50;;;;;;2265:24;2311:9;:14;2321:3;2311:14;;;;;;;;;;;;;;;;2292:9;:16;2302:5;2292:16;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;2265:60;;2393:6;2373:9;:16;2383:5;2373:16;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;2470:6;2452:9;:14;2462:3;2452:14;;;;;;;;;;;;;;;;:24;;;;;;;:::i;:::-;;;;;;;;2508:3;2492:28;;2501:5;2492:28;;;2513:6;2492:28;;;;;;:::i;:::-;;;;;;;;2677:16;2659:9;:14;2669:3;2659:14;;;;;;;;;;;;;;;;2640:9;:16;2650:5;2640:16;;;;;;;;;;;;;;;;:33;;;;:::i;:::-;:53;2633:61;;;;:::i;:::-;;1916:786;1844:858;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1351:75::-;1384:6;1417:2;1411:9;1401:19;;1351:75;:::o;1432:117::-;1541:1;1538;1531:12;1555:117;1664:1;1661;1654:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:::-;5249:6;5298:2;5286:9;5277:7;5273:23;5269:32;5266:119;;;5304:79;;:::i;:::-;5266:119;5424:1;5449:53;5494:7;5485:6;5474:9;5470:22;5449:53;:::i;:::-;5439:63;;5395:117;5190:329;;;;:::o;5525:117::-;5634:1;5631;5624:12;5648:117;5757:1;5754;5747:12;5771:180;5819:77;5816:1;5809:88;5916:4;5913:1;5906:15;5940:4;5937:1;5930:15;5957:281;6040:27;6062:4;6040:27;:::i;:::-;6032:6;6028:40;6170:6;6158:10;6155:22;6134:18;6122:10;6119:34;6116:62;6113:88;;;6181:18;;:::i;:::-;6113:88;6221:10;6217:2;6210:22;6000:238;5957:281;;:::o;6244:129::-;6278:6;6305:20;;:::i;:::-;6295:30;;6334:33;6362:4;6354:6;6334:33;:::i;:::-;6244:129;;;:::o;6379:307::-;6440:4;6530:18;6522:6;6519:30;6516:56;;;6552:18;;:::i;:::-;6516:56;6590:29;6612:6;6590:29;:::i;:::-;6582:37;;6674:4;6668;6664:15;6656:23;;6379:307;;;:::o;6692:148::-;6790:6;6785:3;6780;6767:30;6831:1;6822:6;6817:3;6813:16;6806:27;6692:148;;;:::o;6846:423::-;6923:5;6948:65;6964:48;7005:6;6964:48;:::i;:::-;6948:65;:::i;:::-;6939:74;;7036:6;7029:5;7022:21;7074:4;7067:5;7063:16;7112:3;7103:6;7098:3;7094:16;7091:25;7088:112;;;7119:79;;:::i;:::-;7088:112;7209:54;7256:6;7251:3;7246;7209:54;:::i;:::-;6929:340;6846:423;;;;;:::o;7288:338::-;7343:5;7392:3;7385:4;7377:6;7373:17;7369:27;7359:122;;7400:79;;:::i;:::-;7359:122;7517:6;7504:20;7542:78;7616:3;7608:6;7601:4;7593:6;7589:17;7542:78;:::i;:::-;7533:87;;7349:277;7288:338;;;;:::o;7632:797::-;7718:6;7726;7734;7783:2;7771:9;7762:7;7758:23;7754:32;7751:119;;;7789:79;;:::i;:::-;7751:119;7909:1;7934:53;7979:7;7970:6;7959:9;7955:22;7934:53;:::i;:::-;7924:63;;7880:117;8036:2;8062:53;8107:7;8098:6;8087:9;8083:22;8062:53;:::i;:::-;8052:63;;8007:118;8192:2;8181:9;8177:18;8164:32;8223:18;8215:6;8212:30;8209:117;;;8245:79;;:::i;:::-;8209:117;8350:62;8404:7;8395:6;8384:9;8380:22;8350:62;:::i;:::-;8340:72;;8135:287;7632:797;;;;;:::o;8435:474::-;8503:6;8511;8560:2;8548:9;8539:7;8535:23;8531:32;8528:119;;;8566:79;;:::i;:::-;8528:119;8686:1;8711:53;8756:7;8747:6;8736:9;8732:22;8711:53;:::i;:::-;8701:63;;8657:117;8813:2;8839:53;8884:7;8875:6;8864:9;8860:22;8839:53;:::i;:::-;8829:63;;8784:118;8435:474;;;;;:::o;8915:180::-;8963:77;8960:1;8953:88;9060:4;9057:1;9050:15;9084:4;9081:1;9074:15;9101:320;9145:6;9182:1;9176:4;9172:12;9162:22;;9229:1;9223:4;9219:12;9250:18;9240:81;;9306:4;9298:6;9294:17;9284:27;;9240:81;9368:2;9360:6;9357:14;9337:18;9334:38;9331:84;;9387:18;;:::i;:::-;9331:84;9152:269;9101:320;;;:::o;9427:180::-;9475:77;9472:1;9465:88;9572:4;9569:1;9562:15;9596:4;9593:1;9586:15;9613:194;9653:4;9673:20;9691:1;9673:20;:::i;:::-;9668:25;;9707:20;9725:1;9707:20;:::i;:::-;9702:25;;9751:1;9748;9744:9;9736:17;;9775:1;9769:4;9766:11;9763:37;;;9780:18;;:::i;:::-;9763:37;9613:194;;;;:::o;9813:118::-;9900:24;9918:5;9900:24;:::i;:::-;9895:3;9888:37;9813:118;;:::o;9937:98::-;9988:6;10022:5;10016:12;10006:22;;9937:98;;;:::o;10041:168::-;10124:11;10158:6;10153:3;10146:19;10198:4;10193:3;10189:14;10174:29;;10041:168;;;;:::o;10215:373::-;10301:3;10329:38;10361:5;10329:38;:::i;:::-;10383:70;10446:6;10441:3;10383:70;:::i;:::-;10376:77;;10462:65;10520:6;10515:3;10508:4;10501:5;10497:16;10462:65;:::i;:::-;10552:29;10574:6;10552:29;:::i;:::-;10547:3;10543:39;10536:46;;10305:283;10215:373;;;;:::o;10594:640::-;10789:4;10827:3;10816:9;10812:19;10804:27;;10841:71;10909:1;10898:9;10894:17;10885:6;10841:71;:::i;:::-;10922:72;10990:2;10979:9;10975:18;10966:6;10922:72;:::i;:::-;11004;11072:2;11061:9;11057:18;11048:6;11004:72;:::i;:::-;11123:9;11117:4;11113:20;11108:2;11097:9;11093:18;11086:48;11151:76;11222:4;11213:6;11151:76;:::i;:::-;11143:84;;10594:640;;;;;;;:::o;11240:191::-;11280:3;11299:20;11317:1;11299:20;:::i;:::-;11294:25;;11333:20;11351:1;11333:20;:::i;:::-;11328:25;;11376:1;11373;11369:9;11362:16;;11397:3;11394:1;11391:10;11388:36;;;11404:18;;:::i;:::-;11388:36;11240:191;;;;:::o;11437:180::-;11485:77;11482:1;11475:88;11582:4;11579:1;11572:15;11606:4;11603:1;11596:15"},"gasEstimates":{"creation":{"codeDepositCost":"1044200","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","approveAndCall(address,uint256,bytes)":"infinite","balanceOf(address)":"2814","burn(uint256)":"infinite","burnFrom(address,uint256)":"infinite","decimals()":"2560","name()":"infinite","symbol()":"infinite","totalSupply()":"2474","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"_spender\":\"The address authorized to spend\",\"_value\":\"the max amount they can spend\"}},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_extraData\":\"some extra information to send to the approved contract\",\"_spender\":\"The address authorized to spend\",\"_value\":\"the max amount they can spend\"}},\"burn(uint256)\":{\"params\":{\"_value\":\"the amount of money to burn\"}},\"burnFrom(address,uint256)\":{\"params\":{\"_from\":\"the address of the sender\",\"_value\":\"the amount of money to burn\"}},\"transfer(address,uint256)\":{\"params\":{\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"_from\":\"The address of the sender\",\"_to\":\"The address of the recipient\",\"_value\":\"the amount to send\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\"},\"burn(uint256)\":{\"notice\":\"Destroy tokens Remove `_value` tokens from the system irreversibly\"},\"burnFrom(address,uint256)\":{\"notice\":\"Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`.\"},\"constructor\":{\"notice\":\"Constructor function Initializes contract with initial supply tokens to the creator of the contract\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer tokens Send `_value` tokens to `_to` from your account\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ManualToken.sol\":\"TokenERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ManualToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ninterface tokenRecipient {\\r\\n    function receiveApproval(\\r\\n        address _from,\\r\\n        uint256 _value,\\r\\n        address _token,\\r\\n        bytes calldata _extraData\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract TokenERC20 {\\r\\n    // Public variables of the token\\r\\n    string public name;\\r\\n    string public symbol;\\r\\n    uint8 public decimals = 18;\\r\\n    // 18 decimals is the strongly suggested default, avoid changing it\\r\\n    uint256 public totalSupply;\\r\\n\\r\\n    // This creates an array with all balances\\r\\n    mapping(address => uint256) public balanceOf;\\r\\n    mapping(address => mapping(address => uint256)) public allowance;\\r\\n\\r\\n    // This generates a public event on the blockchain that will notify clients\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    // This generates a public event on the blockchain that will notify clients\\r\\n    event Approval(\\r\\n        address indexed _owner,\\r\\n        address indexed _spender,\\r\\n        uint256 _value\\r\\n    );\\r\\n\\r\\n    // This notifies clients about the amount burnt\\r\\n    event Burn(address indexed from, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * Constructor function\\r\\n     *\\r\\n     * Initializes contract with initial supply tokens to the creator of the contract\\r\\n     */\\r\\n    constructor(\\r\\n        uint256 initialSupply,\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol\\r\\n    ) {\\r\\n        totalSupply = initialSupply * 10 ** uint256(decimals); // Update total supply with the decimal amount\\r\\n        balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens\\r\\n        name = tokenName; // Set the name for display purposes\\r\\n        symbol = tokenSymbol; // Set the symbol for display purposes\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Internal transfer, only can be called by this contract\\r\\n     */\\r\\n    function _transfer(address _from, address _to, uint256 _value) internal {\\r\\n        // Prevent transfer to 0x0 address. Use burn() instead\\r\\n        require(_to != address(0x0));\\r\\n        // Check if the sender has enough\\r\\n        require(balanceOf[_from] >= _value);\\r\\n        // Check for overflows\\r\\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\\r\\n        // Save this for an assertion in the future\\r\\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\\r\\n        // Subtract from the sender\\r\\n        balanceOf[_from] -= _value;\\r\\n        // Add the same to the recipient\\r\\n        balanceOf[_to] += _value;\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\\r\\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Transfer tokens\\r\\n     *\\r\\n     * Send `_value` tokens to `_to` from your account\\r\\n     *\\r\\n     * @param _to The address of the recipient\\r\\n     * @param _value the amount to send\\r\\n     */\\r\\n    function transfer(\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        _transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Transfer tokens from other address\\r\\n     *\\r\\n     * Send `_value` tokens to `_to` on behalf of `_from`\\r\\n     *\\r\\n     * @param _from The address of the sender\\r\\n     * @param _to The address of the recipient\\r\\n     * @param _value the amount to send\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\\r\\n        allowance[_from][msg.sender] -= _value;\\r\\n        _transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set allowance for other address\\r\\n     *\\r\\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\\r\\n     *\\r\\n     * @param _spender The address authorized to spend\\r\\n     * @param _value the max amount they can spend\\r\\n     */\\r\\n    function approve(\\r\\n        address _spender,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        allowance[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set allowance for other address and notify\\r\\n     *\\r\\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\\r\\n     *\\r\\n     * @param _spender The address authorized to spend\\r\\n     * @param _value the max amount they can spend\\r\\n     * @param _extraData some extra information to send to the approved contract\\r\\n     */\\r\\n    function approveAndCall(\\r\\n        address _spender,\\r\\n        uint256 _value,\\r\\n        bytes memory _extraData\\r\\n    ) public returns (bool success) {\\r\\n        tokenRecipient spender = tokenRecipient(_spender);\\r\\n        if (approve(_spender, _value)) {\\r\\n            spender.receiveApproval(\\r\\n                msg.sender,\\r\\n                _value,\\r\\n                address(this),\\r\\n                _extraData\\r\\n            );\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Destroy tokens\\r\\n     *\\r\\n     * Remove `_value` tokens from the system irreversibly\\r\\n     *\\r\\n     * @param _value the amount of money to burn\\r\\n     */\\r\\n    function burn(uint256 _value) public returns (bool success) {\\r\\n        require(balanceOf[msg.sender] >= _value); // Check if the sender has enough\\r\\n        balanceOf[msg.sender] -= _value; // Subtract from the sender\\r\\n        totalSupply -= _value; // Updates totalSupply\\r\\n        emit Burn(msg.sender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Destroy tokens from other account\\r\\n     *\\r\\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\\r\\n     *\\r\\n     * @param _from the address of the sender\\r\\n     * @param _value the amount of money to burn\\r\\n     */\\r\\n    function burnFrom(\\r\\n        address _from,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        require(balanceOf[_from] >= _value); // Check if the targeted balance is enough\\r\\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\\r\\n        balanceOf[_from] -= _value; // Subtract from the targeted balance\\r\\n        allowance[_from][msg.sender] -= _value; // Subtract from the sender's allowance\\r\\n        totalSupply -= _value; // Update totalSupply\\r\\n        emit Burn(_from, _value);\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n// pragma solidity ^0.8.3;\\r\\n\\r\\n// contract ManualToken {\\r\\n//     mapping(address => uint) public balanceOf;\\r\\n//     mapping(address => mapping(address => uint)) public allowance;\\r\\n\\r\\n//     function transfer(address from, uint256 amount, address to) public {\\r\\n//         balanceOf[from] = balanceOf[from] - amount;\\r\\n//         balanceOf[to] = balanceOf[to] + amount;\\r\\n//     }\\r\\n\\r\\n//     function transferFrom(\\r\\n//         address _from,\\r\\n//         address _to,\\r\\n//         uint256 _value\\r\\n//     ) public returns (bool success) {\\r\\n//         require(_value <= allowance[_from][msg.sender]);\\r\\n//         allowance[_from][msg.sender] -= _value;\\r\\n//         transfer(_from, _value, _to);\\r\\n//         return true;\\r\\n//     }\\r\\n// }\\r\\n\",\"keccak256\":\"0x7fc32d099832b55fdc6e36f4d07cb26851c24092ff2f056d183a582536469541\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":801,"contract":"contracts/ManualToken.sol:TokenERC20","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":803,"contract":"contracts/ManualToken.sol:TokenERC20","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":806,"contract":"contracts/ManualToken.sol:TokenERC20","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":808,"contract":"contracts/ManualToken.sol:TokenERC20","label":"totalSupply","offset":0,"slot":"3","type":"t_uint256"},{"astId":812,"contract":"contracts/ManualToken.sol:TokenERC20","label":"balanceOf","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":818,"contract":"contracts/ManualToken.sol:TokenERC20","label":"allowance","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"Set allowance for other address Allows `_spender` to spend no more than `_value` tokens on your behalf"},"approveAndCall(address,uint256,bytes)":{"notice":"Set allowance for other address and notify Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it"},"burn(uint256)":{"notice":"Destroy tokens Remove `_value` tokens from the system irreversibly"},"burnFrom(address,uint256)":{"notice":"Destroy tokens from other account Remove `_value` tokens from the system irreversibly on behalf of `_from`."},"constructor":{"notice":"Constructor function Initializes contract with initial supply tokens to the creator of the contract"},"transfer(address,uint256)":{"notice":"Transfer tokens Send `_value` tokens to `_to` from your account"},"transferFrom(address,address,uint256)":{"notice":"Transfer tokens from other address Send `_value` tokens to `_to` on behalf of `_from`"}},"version":1}},"tokenRecipient":{"abi":[{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"address","name":"_token","type":"address"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"receiveApproval","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"receiveApproval(address,uint256,address,bytes)":"8f4ffcb1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"receiveApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ManualToken.sol\":\"tokenRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ManualToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ninterface tokenRecipient {\\r\\n    function receiveApproval(\\r\\n        address _from,\\r\\n        uint256 _value,\\r\\n        address _token,\\r\\n        bytes calldata _extraData\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract TokenERC20 {\\r\\n    // Public variables of the token\\r\\n    string public name;\\r\\n    string public symbol;\\r\\n    uint8 public decimals = 18;\\r\\n    // 18 decimals is the strongly suggested default, avoid changing it\\r\\n    uint256 public totalSupply;\\r\\n\\r\\n    // This creates an array with all balances\\r\\n    mapping(address => uint256) public balanceOf;\\r\\n    mapping(address => mapping(address => uint256)) public allowance;\\r\\n\\r\\n    // This generates a public event on the blockchain that will notify clients\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    // This generates a public event on the blockchain that will notify clients\\r\\n    event Approval(\\r\\n        address indexed _owner,\\r\\n        address indexed _spender,\\r\\n        uint256 _value\\r\\n    );\\r\\n\\r\\n    // This notifies clients about the amount burnt\\r\\n    event Burn(address indexed from, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * Constructor function\\r\\n     *\\r\\n     * Initializes contract with initial supply tokens to the creator of the contract\\r\\n     */\\r\\n    constructor(\\r\\n        uint256 initialSupply,\\r\\n        string memory tokenName,\\r\\n        string memory tokenSymbol\\r\\n    ) {\\r\\n        totalSupply = initialSupply * 10 ** uint256(decimals); // Update total supply with the decimal amount\\r\\n        balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens\\r\\n        name = tokenName; // Set the name for display purposes\\r\\n        symbol = tokenSymbol; // Set the symbol for display purposes\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Internal transfer, only can be called by this contract\\r\\n     */\\r\\n    function _transfer(address _from, address _to, uint256 _value) internal {\\r\\n        // Prevent transfer to 0x0 address. Use burn() instead\\r\\n        require(_to != address(0x0));\\r\\n        // Check if the sender has enough\\r\\n        require(balanceOf[_from] >= _value);\\r\\n        // Check for overflows\\r\\n        require(balanceOf[_to] + _value >= balanceOf[_to]);\\r\\n        // Save this for an assertion in the future\\r\\n        uint256 previousBalances = balanceOf[_from] + balanceOf[_to];\\r\\n        // Subtract from the sender\\r\\n        balanceOf[_from] -= _value;\\r\\n        // Add the same to the recipient\\r\\n        balanceOf[_to] += _value;\\r\\n        emit Transfer(_from, _to, _value);\\r\\n        // Asserts are used to use static analysis to find bugs in your code. They should never fail\\r\\n        assert(balanceOf[_from] + balanceOf[_to] == previousBalances);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Transfer tokens\\r\\n     *\\r\\n     * Send `_value` tokens to `_to` from your account\\r\\n     *\\r\\n     * @param _to The address of the recipient\\r\\n     * @param _value the amount to send\\r\\n     */\\r\\n    function transfer(\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        _transfer(msg.sender, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Transfer tokens from other address\\r\\n     *\\r\\n     * Send `_value` tokens to `_to` on behalf of `_from`\\r\\n     *\\r\\n     * @param _from The address of the sender\\r\\n     * @param _to The address of the recipient\\r\\n     * @param _value the amount to send\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address _from,\\r\\n        address _to,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\\r\\n        allowance[_from][msg.sender] -= _value;\\r\\n        _transfer(_from, _to, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set allowance for other address\\r\\n     *\\r\\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf\\r\\n     *\\r\\n     * @param _spender The address authorized to spend\\r\\n     * @param _value the max amount they can spend\\r\\n     */\\r\\n    function approve(\\r\\n        address _spender,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        allowance[msg.sender][_spender] = _value;\\r\\n        emit Approval(msg.sender, _spender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Set allowance for other address and notify\\r\\n     *\\r\\n     * Allows `_spender` to spend no more than `_value` tokens on your behalf, and then ping the contract about it\\r\\n     *\\r\\n     * @param _spender The address authorized to spend\\r\\n     * @param _value the max amount they can spend\\r\\n     * @param _extraData some extra information to send to the approved contract\\r\\n     */\\r\\n    function approveAndCall(\\r\\n        address _spender,\\r\\n        uint256 _value,\\r\\n        bytes memory _extraData\\r\\n    ) public returns (bool success) {\\r\\n        tokenRecipient spender = tokenRecipient(_spender);\\r\\n        if (approve(_spender, _value)) {\\r\\n            spender.receiveApproval(\\r\\n                msg.sender,\\r\\n                _value,\\r\\n                address(this),\\r\\n                _extraData\\r\\n            );\\r\\n            return true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Destroy tokens\\r\\n     *\\r\\n     * Remove `_value` tokens from the system irreversibly\\r\\n     *\\r\\n     * @param _value the amount of money to burn\\r\\n     */\\r\\n    function burn(uint256 _value) public returns (bool success) {\\r\\n        require(balanceOf[msg.sender] >= _value); // Check if the sender has enough\\r\\n        balanceOf[msg.sender] -= _value; // Subtract from the sender\\r\\n        totalSupply -= _value; // Updates totalSupply\\r\\n        emit Burn(msg.sender, _value);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Destroy tokens from other account\\r\\n     *\\r\\n     * Remove `_value` tokens from the system irreversibly on behalf of `_from`.\\r\\n     *\\r\\n     * @param _from the address of the sender\\r\\n     * @param _value the amount of money to burn\\r\\n     */\\r\\n    function burnFrom(\\r\\n        address _from,\\r\\n        uint256 _value\\r\\n    ) public returns (bool success) {\\r\\n        require(balanceOf[_from] >= _value); // Check if the targeted balance is enough\\r\\n        require(_value <= allowance[_from][msg.sender]); // Check allowance\\r\\n        balanceOf[_from] -= _value; // Subtract from the targeted balance\\r\\n        allowance[_from][msg.sender] -= _value; // Subtract from the sender's allowance\\r\\n        totalSupply -= _value; // Update totalSupply\\r\\n        emit Burn(_from, _value);\\r\\n        return true;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n// pragma solidity ^0.8.3;\\r\\n\\r\\n// contract ManualToken {\\r\\n//     mapping(address => uint) public balanceOf;\\r\\n//     mapping(address => mapping(address => uint)) public allowance;\\r\\n\\r\\n//     function transfer(address from, uint256 amount, address to) public {\\r\\n//         balanceOf[from] = balanceOf[from] - amount;\\r\\n//         balanceOf[to] = balanceOf[to] + amount;\\r\\n//     }\\r\\n\\r\\n//     function transferFrom(\\r\\n//         address _from,\\r\\n//         address _to,\\r\\n//         uint256 _value\\r\\n//     ) public returns (bool success) {\\r\\n//         require(_value <= allowance[_from][msg.sender]);\\r\\n//         allowance[_from][msg.sender] -= _value;\\r\\n//         transfer(_from, _value, _to);\\r\\n//         return true;\\r\\n//     }\\r\\n// }\\r\\n\",\"keccak256\":\"0x7fc32d099832b55fdc6e36f4d07cb26851c24092ff2f056d183a582536469541\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/OurToken.sol":{"OurToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1203":{"entryPoint":null,"id":1203,"parameterSlots":1,"returnSlots":0},"@_188":{"entryPoint":null,"id":188,"parameterSlots":2,"returnSlots":0},"@_mint_491":{"entryPoint":214,"id":491,"parameterSlots":2,"returnSlots":0},"@_update_458":{"entryPoint":350,"id":458,"parameterSlots":3,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1845,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2001,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2056,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1157,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1003,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1934,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1444,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1827,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1795,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":904,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1409,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1299,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1585,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1178,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1108,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1557,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1289,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1527,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1887,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1061,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1014,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1333,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":899,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1194,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1514,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1207,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1343,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":914,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1380,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:7961:7","nodeType":"YulBlock","src":"0:7961:7","statements":[{"body":{"nativeSrc":"47:35:7","nodeType":"YulBlock","src":"47:35:7","statements":[{"nativeSrc":"57:19:7","nodeType":"YulAssignment","src":"57:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:7","nodeType":"YulLiteral","src":"73:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:7","nodeType":"YulIdentifier","src":"67:5:7"},"nativeSrc":"67:9:7","nodeType":"YulFunctionCall","src":"67:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:7","nodeType":"YulIdentifier","src":"57:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:7","nodeType":"YulTypedName","src":"40:6:7","type":""}],"src":"7:75:7"},{"body":{"nativeSrc":"177:28:7","nodeType":"YulBlock","src":"177:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:7","nodeType":"YulLiteral","src":"194:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:7","nodeType":"YulLiteral","src":"197:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:7","nodeType":"YulIdentifier","src":"187:6:7"},"nativeSrc":"187:12:7","nodeType":"YulFunctionCall","src":"187:12:7"},"nativeSrc":"187:12:7","nodeType":"YulExpressionStatement","src":"187:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:7","nodeType":"YulFunctionDefinition","src":"88:117:7"},{"body":{"nativeSrc":"300:28:7","nodeType":"YulBlock","src":"300:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:7","nodeType":"YulLiteral","src":"317:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:7","nodeType":"YulLiteral","src":"320:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:7","nodeType":"YulIdentifier","src":"310:6:7"},"nativeSrc":"310:12:7","nodeType":"YulFunctionCall","src":"310:12:7"},"nativeSrc":"310:12:7","nodeType":"YulExpressionStatement","src":"310:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:7","nodeType":"YulFunctionDefinition","src":"211:117:7"},{"body":{"nativeSrc":"379:32:7","nodeType":"YulBlock","src":"379:32:7","statements":[{"nativeSrc":"389:16:7","nodeType":"YulAssignment","src":"389:16:7","value":{"name":"value","nativeSrc":"400:5:7","nodeType":"YulIdentifier","src":"400:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:7","nodeType":"YulIdentifier","src":"389:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"334:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:7","nodeType":"YulTypedName","src":"361:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:7","nodeType":"YulTypedName","src":"371:7:7","type":""}],"src":"334:77:7"},{"body":{"nativeSrc":"460:79:7","nodeType":"YulBlock","src":"460:79:7","statements":[{"body":{"nativeSrc":"517:16:7","nodeType":"YulBlock","src":"517:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"526:1:7","nodeType":"YulLiteral","src":"526:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"529:1:7","nodeType":"YulLiteral","src":"529:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"519:6:7","nodeType":"YulIdentifier","src":"519:6:7"},"nativeSrc":"519:12:7","nodeType":"YulFunctionCall","src":"519:12:7"},"nativeSrc":"519:12:7","nodeType":"YulExpressionStatement","src":"519:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"483:5:7","nodeType":"YulIdentifier","src":"483:5:7"},{"arguments":[{"name":"value","nativeSrc":"508:5:7","nodeType":"YulIdentifier","src":"508:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"490:17:7","nodeType":"YulIdentifier","src":"490:17:7"},"nativeSrc":"490:24:7","nodeType":"YulFunctionCall","src":"490:24:7"}],"functionName":{"name":"eq","nativeSrc":"480:2:7","nodeType":"YulIdentifier","src":"480:2:7"},"nativeSrc":"480:35:7","nodeType":"YulFunctionCall","src":"480:35:7"}],"functionName":{"name":"iszero","nativeSrc":"473:6:7","nodeType":"YulIdentifier","src":"473:6:7"},"nativeSrc":"473:43:7","nodeType":"YulFunctionCall","src":"473:43:7"},"nativeSrc":"470:63:7","nodeType":"YulIf","src":"470:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"417:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"453:5:7","nodeType":"YulTypedName","src":"453:5:7","type":""}],"src":"417:122:7"},{"body":{"nativeSrc":"608:80:7","nodeType":"YulBlock","src":"608:80:7","statements":[{"nativeSrc":"618:22:7","nodeType":"YulAssignment","src":"618:22:7","value":{"arguments":[{"name":"offset","nativeSrc":"633:6:7","nodeType":"YulIdentifier","src":"633:6:7"}],"functionName":{"name":"mload","nativeSrc":"627:5:7","nodeType":"YulIdentifier","src":"627:5:7"},"nativeSrc":"627:13:7","nodeType":"YulFunctionCall","src":"627:13:7"},"variableNames":[{"name":"value","nativeSrc":"618:5:7","nodeType":"YulIdentifier","src":"618:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"676:5:7","nodeType":"YulIdentifier","src":"676:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"649:26:7","nodeType":"YulIdentifier","src":"649:26:7"},"nativeSrc":"649:33:7","nodeType":"YulFunctionCall","src":"649:33:7"},"nativeSrc":"649:33:7","nodeType":"YulExpressionStatement","src":"649:33:7"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"545:143:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"586:6:7","nodeType":"YulTypedName","src":"586:6:7","type":""},{"name":"end","nativeSrc":"594:3:7","nodeType":"YulTypedName","src":"594:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"602:5:7","nodeType":"YulTypedName","src":"602:5:7","type":""}],"src":"545:143:7"},{"body":{"nativeSrc":"771:274:7","nodeType":"YulBlock","src":"771:274:7","statements":[{"body":{"nativeSrc":"817:83:7","nodeType":"YulBlock","src":"817:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"819:77:7","nodeType":"YulIdentifier","src":"819:77:7"},"nativeSrc":"819:79:7","nodeType":"YulFunctionCall","src":"819:79:7"},"nativeSrc":"819:79:7","nodeType":"YulExpressionStatement","src":"819:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"792:7:7","nodeType":"YulIdentifier","src":"792:7:7"},{"name":"headStart","nativeSrc":"801:9:7","nodeType":"YulIdentifier","src":"801:9:7"}],"functionName":{"name":"sub","nativeSrc":"788:3:7","nodeType":"YulIdentifier","src":"788:3:7"},"nativeSrc":"788:23:7","nodeType":"YulFunctionCall","src":"788:23:7"},{"kind":"number","nativeSrc":"813:2:7","nodeType":"YulLiteral","src":"813:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"784:3:7","nodeType":"YulIdentifier","src":"784:3:7"},"nativeSrc":"784:32:7","nodeType":"YulFunctionCall","src":"784:32:7"},"nativeSrc":"781:119:7","nodeType":"YulIf","src":"781:119:7"},{"nativeSrc":"910:128:7","nodeType":"YulBlock","src":"910:128:7","statements":[{"nativeSrc":"925:15:7","nodeType":"YulVariableDeclaration","src":"925:15:7","value":{"kind":"number","nativeSrc":"939:1:7","nodeType":"YulLiteral","src":"939:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"929:6:7","nodeType":"YulTypedName","src":"929:6:7","type":""}]},{"nativeSrc":"954:74:7","nodeType":"YulAssignment","src":"954:74:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1000:9:7","nodeType":"YulIdentifier","src":"1000:9:7"},{"name":"offset","nativeSrc":"1011:6:7","nodeType":"YulIdentifier","src":"1011:6:7"}],"functionName":{"name":"add","nativeSrc":"996:3:7","nodeType":"YulIdentifier","src":"996:3:7"},"nativeSrc":"996:22:7","nodeType":"YulFunctionCall","src":"996:22:7"},{"name":"dataEnd","nativeSrc":"1020:7:7","nodeType":"YulIdentifier","src":"1020:7:7"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"964:31:7","nodeType":"YulIdentifier","src":"964:31:7"},"nativeSrc":"964:64:7","nodeType":"YulFunctionCall","src":"964:64:7"},"variableNames":[{"name":"value0","nativeSrc":"954:6:7","nodeType":"YulIdentifier","src":"954:6:7"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"694:351:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"741:9:7","nodeType":"YulTypedName","src":"741:9:7","type":""},{"name":"dataEnd","nativeSrc":"752:7:7","nodeType":"YulTypedName","src":"752:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"764:6:7","nodeType":"YulTypedName","src":"764:6:7","type":""}],"src":"694:351:7"},{"body":{"nativeSrc":"1110:40:7","nodeType":"YulBlock","src":"1110:40:7","statements":[{"nativeSrc":"1121:22:7","nodeType":"YulAssignment","src":"1121:22:7","value":{"arguments":[{"name":"value","nativeSrc":"1137:5:7","nodeType":"YulIdentifier","src":"1137:5:7"}],"functionName":{"name":"mload","nativeSrc":"1131:5:7","nodeType":"YulIdentifier","src":"1131:5:7"},"nativeSrc":"1131:12:7","nodeType":"YulFunctionCall","src":"1131:12:7"},"variableNames":[{"name":"length","nativeSrc":"1121:6:7","nodeType":"YulIdentifier","src":"1121:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1051:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1093:5:7","nodeType":"YulTypedName","src":"1093:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1103:6:7","nodeType":"YulTypedName","src":"1103:6:7","type":""}],"src":"1051:99:7"},{"body":{"nativeSrc":"1184:152:7","nodeType":"YulBlock","src":"1184:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1201:1:7","nodeType":"YulLiteral","src":"1201:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1204:77:7","nodeType":"YulLiteral","src":"1204:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:7","nodeType":"YulIdentifier","src":"1194:6:7"},"nativeSrc":"1194:88:7","nodeType":"YulFunctionCall","src":"1194:88:7"},"nativeSrc":"1194:88:7","nodeType":"YulExpressionStatement","src":"1194:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1298:1:7","nodeType":"YulLiteral","src":"1298:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"1301:4:7","nodeType":"YulLiteral","src":"1301:4:7","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1291:6:7","nodeType":"YulIdentifier","src":"1291:6:7"},"nativeSrc":"1291:15:7","nodeType":"YulFunctionCall","src":"1291:15:7"},"nativeSrc":"1291:15:7","nodeType":"YulExpressionStatement","src":"1291:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1322:1:7","nodeType":"YulLiteral","src":"1322:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1325:4:7","nodeType":"YulLiteral","src":"1325:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1315:6:7","nodeType":"YulIdentifier","src":"1315:6:7"},"nativeSrc":"1315:15:7","nodeType":"YulFunctionCall","src":"1315:15:7"},"nativeSrc":"1315:15:7","nodeType":"YulExpressionStatement","src":"1315:15:7"}]},"name":"panic_error_0x41","nativeSrc":"1156:180:7","nodeType":"YulFunctionDefinition","src":"1156:180:7"},{"body":{"nativeSrc":"1370:152:7","nodeType":"YulBlock","src":"1370:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1387:1:7","nodeType":"YulLiteral","src":"1387:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1390:77:7","nodeType":"YulLiteral","src":"1390:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1380:6:7","nodeType":"YulIdentifier","src":"1380:6:7"},"nativeSrc":"1380:88:7","nodeType":"YulFunctionCall","src":"1380:88:7"},"nativeSrc":"1380:88:7","nodeType":"YulExpressionStatement","src":"1380:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1484:1:7","nodeType":"YulLiteral","src":"1484:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"1487:4:7","nodeType":"YulLiteral","src":"1487:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1477:6:7","nodeType":"YulIdentifier","src":"1477:6:7"},"nativeSrc":"1477:15:7","nodeType":"YulFunctionCall","src":"1477:15:7"},"nativeSrc":"1477:15:7","nodeType":"YulExpressionStatement","src":"1477:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1508:1:7","nodeType":"YulLiteral","src":"1508:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1511:4:7","nodeType":"YulLiteral","src":"1511:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1501:6:7","nodeType":"YulIdentifier","src":"1501:6:7"},"nativeSrc":"1501:15:7","nodeType":"YulFunctionCall","src":"1501:15:7"},"nativeSrc":"1501:15:7","nodeType":"YulExpressionStatement","src":"1501:15:7"}]},"name":"panic_error_0x22","nativeSrc":"1342:180:7","nodeType":"YulFunctionDefinition","src":"1342:180:7"},{"body":{"nativeSrc":"1579:269:7","nodeType":"YulBlock","src":"1579:269:7","statements":[{"nativeSrc":"1589:22:7","nodeType":"YulAssignment","src":"1589:22:7","value":{"arguments":[{"name":"data","nativeSrc":"1603:4:7","nodeType":"YulIdentifier","src":"1603:4:7"},{"kind":"number","nativeSrc":"1609:1:7","nodeType":"YulLiteral","src":"1609:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"1599:3:7","nodeType":"YulIdentifier","src":"1599:3:7"},"nativeSrc":"1599:12:7","nodeType":"YulFunctionCall","src":"1599:12:7"},"variableNames":[{"name":"length","nativeSrc":"1589:6:7","nodeType":"YulIdentifier","src":"1589:6:7"}]},{"nativeSrc":"1620:38:7","nodeType":"YulVariableDeclaration","src":"1620:38:7","value":{"arguments":[{"name":"data","nativeSrc":"1650:4:7","nodeType":"YulIdentifier","src":"1650:4:7"},{"kind":"number","nativeSrc":"1656:1:7","nodeType":"YulLiteral","src":"1656:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1646:3:7","nodeType":"YulIdentifier","src":"1646:3:7"},"nativeSrc":"1646:12:7","nodeType":"YulFunctionCall","src":"1646:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1624:18:7","nodeType":"YulTypedName","src":"1624:18:7","type":""}]},{"body":{"nativeSrc":"1697:51:7","nodeType":"YulBlock","src":"1697:51:7","statements":[{"nativeSrc":"1711:27:7","nodeType":"YulAssignment","src":"1711:27:7","value":{"arguments":[{"name":"length","nativeSrc":"1725:6:7","nodeType":"YulIdentifier","src":"1725:6:7"},{"kind":"number","nativeSrc":"1733:4:7","nodeType":"YulLiteral","src":"1733:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1721:3:7","nodeType":"YulIdentifier","src":"1721:3:7"},"nativeSrc":"1721:17:7","nodeType":"YulFunctionCall","src":"1721:17:7"},"variableNames":[{"name":"length","nativeSrc":"1711:6:7","nodeType":"YulIdentifier","src":"1711:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1677:18:7","nodeType":"YulIdentifier","src":"1677:18:7"}],"functionName":{"name":"iszero","nativeSrc":"1670:6:7","nodeType":"YulIdentifier","src":"1670:6:7"},"nativeSrc":"1670:26:7","nodeType":"YulFunctionCall","src":"1670:26:7"},"nativeSrc":"1667:81:7","nodeType":"YulIf","src":"1667:81:7"},{"body":{"nativeSrc":"1800:42:7","nodeType":"YulBlock","src":"1800:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"1814:16:7","nodeType":"YulIdentifier","src":"1814:16:7"},"nativeSrc":"1814:18:7","nodeType":"YulFunctionCall","src":"1814:18:7"},"nativeSrc":"1814:18:7","nodeType":"YulExpressionStatement","src":"1814:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1764:18:7","nodeType":"YulIdentifier","src":"1764:18:7"},{"arguments":[{"name":"length","nativeSrc":"1787:6:7","nodeType":"YulIdentifier","src":"1787:6:7"},{"kind":"number","nativeSrc":"1795:2:7","nodeType":"YulLiteral","src":"1795:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1784:2:7","nodeType":"YulIdentifier","src":"1784:2:7"},"nativeSrc":"1784:14:7","nodeType":"YulFunctionCall","src":"1784:14:7"}],"functionName":{"name":"eq","nativeSrc":"1761:2:7","nodeType":"YulIdentifier","src":"1761:2:7"},"nativeSrc":"1761:38:7","nodeType":"YulFunctionCall","src":"1761:38:7"},"nativeSrc":"1758:84:7","nodeType":"YulIf","src":"1758:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"1528:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1563:4:7","nodeType":"YulTypedName","src":"1563:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1572:6:7","nodeType":"YulTypedName","src":"1572:6:7","type":""}],"src":"1528:320:7"},{"body":{"nativeSrc":"1908:87:7","nodeType":"YulBlock","src":"1908:87:7","statements":[{"nativeSrc":"1918:11:7","nodeType":"YulAssignment","src":"1918:11:7","value":{"name":"ptr","nativeSrc":"1926:3:7","nodeType":"YulIdentifier","src":"1926:3:7"},"variableNames":[{"name":"data","nativeSrc":"1918:4:7","nodeType":"YulIdentifier","src":"1918:4:7"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1946:1:7","nodeType":"YulLiteral","src":"1946:1:7","type":"","value":"0"},{"name":"ptr","nativeSrc":"1949:3:7","nodeType":"YulIdentifier","src":"1949:3:7"}],"functionName":{"name":"mstore","nativeSrc":"1939:6:7","nodeType":"YulIdentifier","src":"1939:6:7"},"nativeSrc":"1939:14:7","nodeType":"YulFunctionCall","src":"1939:14:7"},"nativeSrc":"1939:14:7","nodeType":"YulExpressionStatement","src":"1939:14:7"},{"nativeSrc":"1962:26:7","nodeType":"YulAssignment","src":"1962:26:7","value":{"arguments":[{"kind":"number","nativeSrc":"1980:1:7","nodeType":"YulLiteral","src":"1980:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1983:4:7","nodeType":"YulLiteral","src":"1983:4:7","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1970:9:7","nodeType":"YulIdentifier","src":"1970:9:7"},"nativeSrc":"1970:18:7","nodeType":"YulFunctionCall","src":"1970:18:7"},"variableNames":[{"name":"data","nativeSrc":"1962:4:7","nodeType":"YulIdentifier","src":"1962:4:7"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"1854:141:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1895:3:7","nodeType":"YulTypedName","src":"1895:3:7","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1903:4:7","nodeType":"YulTypedName","src":"1903:4:7","type":""}],"src":"1854:141:7"},{"body":{"nativeSrc":"2045:49:7","nodeType":"YulBlock","src":"2045:49:7","statements":[{"nativeSrc":"2055:33:7","nodeType":"YulAssignment","src":"2055:33:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2073:5:7","nodeType":"YulIdentifier","src":"2073:5:7"},{"kind":"number","nativeSrc":"2080:2:7","nodeType":"YulLiteral","src":"2080:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2069:3:7","nodeType":"YulIdentifier","src":"2069:3:7"},"nativeSrc":"2069:14:7","nodeType":"YulFunctionCall","src":"2069:14:7"},{"kind":"number","nativeSrc":"2085:2:7","nodeType":"YulLiteral","src":"2085:2:7","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"2065:3:7","nodeType":"YulIdentifier","src":"2065:3:7"},"nativeSrc":"2065:23:7","nodeType":"YulFunctionCall","src":"2065:23:7"},"variableNames":[{"name":"result","nativeSrc":"2055:6:7","nodeType":"YulIdentifier","src":"2055:6:7"}]}]},"name":"divide_by_32_ceil","nativeSrc":"2001:93:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2028:5:7","nodeType":"YulTypedName","src":"2028:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2038:6:7","nodeType":"YulTypedName","src":"2038:6:7","type":""}],"src":"2001:93:7"},{"body":{"nativeSrc":"2153:54:7","nodeType":"YulBlock","src":"2153:54:7","statements":[{"nativeSrc":"2163:37:7","nodeType":"YulAssignment","src":"2163:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"2188:4:7","nodeType":"YulIdentifier","src":"2188:4:7"},{"name":"value","nativeSrc":"2194:5:7","nodeType":"YulIdentifier","src":"2194:5:7"}],"functionName":{"name":"shl","nativeSrc":"2184:3:7","nodeType":"YulIdentifier","src":"2184:3:7"},"nativeSrc":"2184:16:7","nodeType":"YulFunctionCall","src":"2184:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"2163:8:7","nodeType":"YulIdentifier","src":"2163:8:7"}]}]},"name":"shift_left_dynamic","nativeSrc":"2100:107:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"2128:4:7","nodeType":"YulTypedName","src":"2128:4:7","type":""},{"name":"value","nativeSrc":"2134:5:7","nodeType":"YulTypedName","src":"2134:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"2144:8:7","nodeType":"YulTypedName","src":"2144:8:7","type":""}],"src":"2100:107:7"},{"body":{"nativeSrc":"2289:317:7","nodeType":"YulBlock","src":"2289:317:7","statements":[{"nativeSrc":"2299:35:7","nodeType":"YulVariableDeclaration","src":"2299:35:7","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"2320:10:7","nodeType":"YulIdentifier","src":"2320:10:7"},{"kind":"number","nativeSrc":"2332:1:7","nodeType":"YulLiteral","src":"2332:1:7","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"2316:3:7","nodeType":"YulIdentifier","src":"2316:3:7"},"nativeSrc":"2316:18:7","nodeType":"YulFunctionCall","src":"2316:18:7"},"variables":[{"name":"shiftBits","nativeSrc":"2303:9:7","nodeType":"YulTypedName","src":"2303:9:7","type":""}]},{"nativeSrc":"2343:109:7","nodeType":"YulVariableDeclaration","src":"2343:109:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2374:9:7","nodeType":"YulIdentifier","src":"2374:9:7"},{"kind":"number","nativeSrc":"2385:66:7","nodeType":"YulLiteral","src":"2385:66:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2355:18:7","nodeType":"YulIdentifier","src":"2355:18:7"},"nativeSrc":"2355:97:7","nodeType":"YulFunctionCall","src":"2355:97:7"},"variables":[{"name":"mask","nativeSrc":"2347:4:7","nodeType":"YulTypedName","src":"2347:4:7","type":""}]},{"nativeSrc":"2461:51:7","nodeType":"YulAssignment","src":"2461:51:7","value":{"arguments":[{"name":"shiftBits","nativeSrc":"2492:9:7","nodeType":"YulIdentifier","src":"2492:9:7"},{"name":"toInsert","nativeSrc":"2503:8:7","nodeType":"YulIdentifier","src":"2503:8:7"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"2473:18:7","nodeType":"YulIdentifier","src":"2473:18:7"},"nativeSrc":"2473:39:7","nodeType":"YulFunctionCall","src":"2473:39:7"},"variableNames":[{"name":"toInsert","nativeSrc":"2461:8:7","nodeType":"YulIdentifier","src":"2461:8:7"}]},{"nativeSrc":"2521:30:7","nodeType":"YulAssignment","src":"2521:30:7","value":{"arguments":[{"name":"value","nativeSrc":"2534:5:7","nodeType":"YulIdentifier","src":"2534:5:7"},{"arguments":[{"name":"mask","nativeSrc":"2545:4:7","nodeType":"YulIdentifier","src":"2545:4:7"}],"functionName":{"name":"not","nativeSrc":"2541:3:7","nodeType":"YulIdentifier","src":"2541:3:7"},"nativeSrc":"2541:9:7","nodeType":"YulFunctionCall","src":"2541:9:7"}],"functionName":{"name":"and","nativeSrc":"2530:3:7","nodeType":"YulIdentifier","src":"2530:3:7"},"nativeSrc":"2530:21:7","nodeType":"YulFunctionCall","src":"2530:21:7"},"variableNames":[{"name":"value","nativeSrc":"2521:5:7","nodeType":"YulIdentifier","src":"2521:5:7"}]},{"nativeSrc":"2560:40:7","nodeType":"YulAssignment","src":"2560:40:7","value":{"arguments":[{"name":"value","nativeSrc":"2573:5:7","nodeType":"YulIdentifier","src":"2573:5:7"},{"arguments":[{"name":"toInsert","nativeSrc":"2584:8:7","nodeType":"YulIdentifier","src":"2584:8:7"},{"name":"mask","nativeSrc":"2594:4:7","nodeType":"YulIdentifier","src":"2594:4:7"}],"functionName":{"name":"and","nativeSrc":"2580:3:7","nodeType":"YulIdentifier","src":"2580:3:7"},"nativeSrc":"2580:19:7","nodeType":"YulFunctionCall","src":"2580:19:7"}],"functionName":{"name":"or","nativeSrc":"2570:2:7","nodeType":"YulIdentifier","src":"2570:2:7"},"nativeSrc":"2570:30:7","nodeType":"YulFunctionCall","src":"2570:30:7"},"variableNames":[{"name":"result","nativeSrc":"2560:6:7","nodeType":"YulIdentifier","src":"2560:6:7"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"2213:393:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2250:5:7","nodeType":"YulTypedName","src":"2250:5:7","type":""},{"name":"shiftBytes","nativeSrc":"2257:10:7","nodeType":"YulTypedName","src":"2257:10:7","type":""},{"name":"toInsert","nativeSrc":"2269:8:7","nodeType":"YulTypedName","src":"2269:8:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2282:6:7","nodeType":"YulTypedName","src":"2282:6:7","type":""}],"src":"2213:393:7"},{"body":{"nativeSrc":"2644:28:7","nodeType":"YulBlock","src":"2644:28:7","statements":[{"nativeSrc":"2654:12:7","nodeType":"YulAssignment","src":"2654:12:7","value":{"name":"value","nativeSrc":"2661:5:7","nodeType":"YulIdentifier","src":"2661:5:7"},"variableNames":[{"name":"ret","nativeSrc":"2654:3:7","nodeType":"YulIdentifier","src":"2654:3:7"}]}]},"name":"identity","nativeSrc":"2612:60:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2630:5:7","nodeType":"YulTypedName","src":"2630:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2640:3:7","nodeType":"YulTypedName","src":"2640:3:7","type":""}],"src":"2612:60:7"},{"body":{"nativeSrc":"2738:82:7","nodeType":"YulBlock","src":"2738:82:7","statements":[{"nativeSrc":"2748:66:7","nodeType":"YulAssignment","src":"2748:66:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2806:5:7","nodeType":"YulIdentifier","src":"2806:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2788:17:7","nodeType":"YulIdentifier","src":"2788:17:7"},"nativeSrc":"2788:24:7","nodeType":"YulFunctionCall","src":"2788:24:7"}],"functionName":{"name":"identity","nativeSrc":"2779:8:7","nodeType":"YulIdentifier","src":"2779:8:7"},"nativeSrc":"2779:34:7","nodeType":"YulFunctionCall","src":"2779:34:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2761:17:7","nodeType":"YulIdentifier","src":"2761:17:7"},"nativeSrc":"2761:53:7","nodeType":"YulFunctionCall","src":"2761:53:7"},"variableNames":[{"name":"converted","nativeSrc":"2748:9:7","nodeType":"YulIdentifier","src":"2748:9:7"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2678:142:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2718:5:7","nodeType":"YulTypedName","src":"2718:5:7","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2728:9:7","nodeType":"YulTypedName","src":"2728:9:7","type":""}],"src":"2678:142:7"},{"body":{"nativeSrc":"2873:28:7","nodeType":"YulBlock","src":"2873:28:7","statements":[{"nativeSrc":"2883:12:7","nodeType":"YulAssignment","src":"2883:12:7","value":{"name":"value","nativeSrc":"2890:5:7","nodeType":"YulIdentifier","src":"2890:5:7"},"variableNames":[{"name":"ret","nativeSrc":"2883:3:7","nodeType":"YulIdentifier","src":"2883:3:7"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"2826:75:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2859:5:7","nodeType":"YulTypedName","src":"2859:5:7","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2869:3:7","nodeType":"YulTypedName","src":"2869:3:7","type":""}],"src":"2826:75:7"},{"body":{"nativeSrc":"2983:193:7","nodeType":"YulBlock","src":"2983:193:7","statements":[{"nativeSrc":"2993:63:7","nodeType":"YulVariableDeclaration","src":"2993:63:7","value":{"arguments":[{"name":"value_0","nativeSrc":"3048:7:7","nodeType":"YulIdentifier","src":"3048:7:7"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"3017:30:7","nodeType":"YulIdentifier","src":"3017:30:7"},"nativeSrc":"3017:39:7","nodeType":"YulFunctionCall","src":"3017:39:7"},"variables":[{"name":"convertedValue_0","nativeSrc":"2997:16:7","nodeType":"YulTypedName","src":"2997:16:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3072:4:7","nodeType":"YulIdentifier","src":"3072:4:7"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3112:4:7","nodeType":"YulIdentifier","src":"3112:4:7"}],"functionName":{"name":"sload","nativeSrc":"3106:5:7","nodeType":"YulIdentifier","src":"3106:5:7"},"nativeSrc":"3106:11:7","nodeType":"YulFunctionCall","src":"3106:11:7"},{"name":"offset","nativeSrc":"3119:6:7","nodeType":"YulIdentifier","src":"3119:6:7"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"3151:16:7","nodeType":"YulIdentifier","src":"3151:16:7"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"3127:23:7","nodeType":"YulIdentifier","src":"3127:23:7"},"nativeSrc":"3127:41:7","nodeType":"YulFunctionCall","src":"3127:41:7"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"3078:27:7","nodeType":"YulIdentifier","src":"3078:27:7"},"nativeSrc":"3078:91:7","nodeType":"YulFunctionCall","src":"3078:91:7"}],"functionName":{"name":"sstore","nativeSrc":"3065:6:7","nodeType":"YulIdentifier","src":"3065:6:7"},"nativeSrc":"3065:105:7","nodeType":"YulFunctionCall","src":"3065:105:7"},"nativeSrc":"3065:105:7","nodeType":"YulExpressionStatement","src":"3065:105:7"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2907:269:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2960:4:7","nodeType":"YulTypedName","src":"2960:4:7","type":""},{"name":"offset","nativeSrc":"2966:6:7","nodeType":"YulTypedName","src":"2966:6:7","type":""},{"name":"value_0","nativeSrc":"2974:7:7","nodeType":"YulTypedName","src":"2974:7:7","type":""}],"src":"2907:269:7"},{"body":{"nativeSrc":"3231:24:7","nodeType":"YulBlock","src":"3231:24:7","statements":[{"nativeSrc":"3241:8:7","nodeType":"YulAssignment","src":"3241:8:7","value":{"kind":"number","nativeSrc":"3248:1:7","nodeType":"YulLiteral","src":"3248:1:7","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"3241:3:7","nodeType":"YulIdentifier","src":"3241:3:7"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"3182:73:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"3227:3:7","nodeType":"YulTypedName","src":"3227:3:7","type":""}],"src":"3182:73:7"},{"body":{"nativeSrc":"3314:136:7","nodeType":"YulBlock","src":"3314:136:7","statements":[{"nativeSrc":"3324:46:7","nodeType":"YulVariableDeclaration","src":"3324:46:7","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"3338:30:7","nodeType":"YulIdentifier","src":"3338:30:7"},"nativeSrc":"3338:32:7","nodeType":"YulFunctionCall","src":"3338:32:7"},"variables":[{"name":"zero_0","nativeSrc":"3328:6:7","nodeType":"YulTypedName","src":"3328:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3423:4:7","nodeType":"YulIdentifier","src":"3423:4:7"},{"name":"offset","nativeSrc":"3429:6:7","nodeType":"YulIdentifier","src":"3429:6:7"},{"name":"zero_0","nativeSrc":"3437:6:7","nodeType":"YulIdentifier","src":"3437:6:7"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"3379:43:7","nodeType":"YulIdentifier","src":"3379:43:7"},"nativeSrc":"3379:65:7","nodeType":"YulFunctionCall","src":"3379:65:7"},"nativeSrc":"3379:65:7","nodeType":"YulExpressionStatement","src":"3379:65:7"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"3261:189:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3300:4:7","nodeType":"YulTypedName","src":"3300:4:7","type":""},{"name":"offset","nativeSrc":"3306:6:7","nodeType":"YulTypedName","src":"3306:6:7","type":""}],"src":"3261:189:7"},{"body":{"nativeSrc":"3506:136:7","nodeType":"YulBlock","src":"3506:136:7","statements":[{"body":{"nativeSrc":"3573:63:7","nodeType":"YulBlock","src":"3573:63:7","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"3617:5:7","nodeType":"YulIdentifier","src":"3617:5:7"},{"kind":"number","nativeSrc":"3624:1:7","nodeType":"YulLiteral","src":"3624:1:7","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"3587:29:7","nodeType":"YulIdentifier","src":"3587:29:7"},"nativeSrc":"3587:39:7","nodeType":"YulFunctionCall","src":"3587:39:7"},"nativeSrc":"3587:39:7","nodeType":"YulExpressionStatement","src":"3587:39:7"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"3526:5:7","nodeType":"YulIdentifier","src":"3526:5:7"},{"name":"end","nativeSrc":"3533:3:7","nodeType":"YulIdentifier","src":"3533:3:7"}],"functionName":{"name":"lt","nativeSrc":"3523:2:7","nodeType":"YulIdentifier","src":"3523:2:7"},"nativeSrc":"3523:14:7","nodeType":"YulFunctionCall","src":"3523:14:7"},"nativeSrc":"3516:120:7","nodeType":"YulForLoop","post":{"nativeSrc":"3538:26:7","nodeType":"YulBlock","src":"3538:26:7","statements":[{"nativeSrc":"3540:22:7","nodeType":"YulAssignment","src":"3540:22:7","value":{"arguments":[{"name":"start","nativeSrc":"3553:5:7","nodeType":"YulIdentifier","src":"3553:5:7"},{"kind":"number","nativeSrc":"3560:1:7","nodeType":"YulLiteral","src":"3560:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3549:3:7","nodeType":"YulIdentifier","src":"3549:3:7"},"nativeSrc":"3549:13:7","nodeType":"YulFunctionCall","src":"3549:13:7"},"variableNames":[{"name":"start","nativeSrc":"3540:5:7","nodeType":"YulIdentifier","src":"3540:5:7"}]}]},"pre":{"nativeSrc":"3520:2:7","nodeType":"YulBlock","src":"3520:2:7","statements":[]},"src":"3516:120:7"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"3456:186:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"3494:5:7","nodeType":"YulTypedName","src":"3494:5:7","type":""},{"name":"end","nativeSrc":"3501:3:7","nodeType":"YulTypedName","src":"3501:3:7","type":""}],"src":"3456:186:7"},{"body":{"nativeSrc":"3727:464:7","nodeType":"YulBlock","src":"3727:464:7","statements":[{"body":{"nativeSrc":"3753:431:7","nodeType":"YulBlock","src":"3753:431:7","statements":[{"nativeSrc":"3767:54:7","nodeType":"YulVariableDeclaration","src":"3767:54:7","value":{"arguments":[{"name":"array","nativeSrc":"3815:5:7","nodeType":"YulIdentifier","src":"3815:5:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"3783:31:7","nodeType":"YulIdentifier","src":"3783:31:7"},"nativeSrc":"3783:38:7","nodeType":"YulFunctionCall","src":"3783:38:7"},"variables":[{"name":"dataArea","nativeSrc":"3771:8:7","nodeType":"YulTypedName","src":"3771:8:7","type":""}]},{"nativeSrc":"3834:63:7","nodeType":"YulVariableDeclaration","src":"3834:63:7","value":{"arguments":[{"name":"dataArea","nativeSrc":"3857:8:7","nodeType":"YulIdentifier","src":"3857:8:7"},{"arguments":[{"name":"startIndex","nativeSrc":"3885:10:7","nodeType":"YulIdentifier","src":"3885:10:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3867:17:7","nodeType":"YulIdentifier","src":"3867:17:7"},"nativeSrc":"3867:29:7","nodeType":"YulFunctionCall","src":"3867:29:7"}],"functionName":{"name":"add","nativeSrc":"3853:3:7","nodeType":"YulIdentifier","src":"3853:3:7"},"nativeSrc":"3853:44:7","nodeType":"YulFunctionCall","src":"3853:44:7"},"variables":[{"name":"deleteStart","nativeSrc":"3838:11:7","nodeType":"YulTypedName","src":"3838:11:7","type":""}]},{"body":{"nativeSrc":"4054:27:7","nodeType":"YulBlock","src":"4054:27:7","statements":[{"nativeSrc":"4056:23:7","nodeType":"YulAssignment","src":"4056:23:7","value":{"name":"dataArea","nativeSrc":"4071:8:7","nodeType":"YulIdentifier","src":"4071:8:7"},"variableNames":[{"name":"deleteStart","nativeSrc":"4056:11:7","nodeType":"YulIdentifier","src":"4056:11:7"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"4038:10:7","nodeType":"YulIdentifier","src":"4038:10:7"},{"kind":"number","nativeSrc":"4050:2:7","nodeType":"YulLiteral","src":"4050:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4035:2:7","nodeType":"YulIdentifier","src":"4035:2:7"},"nativeSrc":"4035:18:7","nodeType":"YulFunctionCall","src":"4035:18:7"},"nativeSrc":"4032:49:7","nodeType":"YulIf","src":"4032:49:7"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"4123:11:7","nodeType":"YulIdentifier","src":"4123:11:7"},{"arguments":[{"name":"dataArea","nativeSrc":"4140:8:7","nodeType":"YulIdentifier","src":"4140:8:7"},{"arguments":[{"name":"len","nativeSrc":"4168:3:7","nodeType":"YulIdentifier","src":"4168:3:7"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"4150:17:7","nodeType":"YulIdentifier","src":"4150:17:7"},"nativeSrc":"4150:22:7","nodeType":"YulFunctionCall","src":"4150:22:7"}],"functionName":{"name":"add","nativeSrc":"4136:3:7","nodeType":"YulIdentifier","src":"4136:3:7"},"nativeSrc":"4136:37:7","nodeType":"YulFunctionCall","src":"4136:37:7"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"4094:28:7","nodeType":"YulIdentifier","src":"4094:28:7"},"nativeSrc":"4094:80:7","nodeType":"YulFunctionCall","src":"4094:80:7"},"nativeSrc":"4094:80:7","nodeType":"YulExpressionStatement","src":"4094:80:7"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"3744:3:7","nodeType":"YulIdentifier","src":"3744:3:7"},{"kind":"number","nativeSrc":"3749:2:7","nodeType":"YulLiteral","src":"3749:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3741:2:7","nodeType":"YulIdentifier","src":"3741:2:7"},"nativeSrc":"3741:11:7","nodeType":"YulFunctionCall","src":"3741:11:7"},"nativeSrc":"3738:446:7","nodeType":"YulIf","src":"3738:446:7"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"3648:543:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"3703:5:7","nodeType":"YulTypedName","src":"3703:5:7","type":""},{"name":"len","nativeSrc":"3710:3:7","nodeType":"YulTypedName","src":"3710:3:7","type":""},{"name":"startIndex","nativeSrc":"3715:10:7","nodeType":"YulTypedName","src":"3715:10:7","type":""}],"src":"3648:543:7"},{"body":{"nativeSrc":"4260:54:7","nodeType":"YulBlock","src":"4260:54:7","statements":[{"nativeSrc":"4270:37:7","nodeType":"YulAssignment","src":"4270:37:7","value":{"arguments":[{"name":"bits","nativeSrc":"4295:4:7","nodeType":"YulIdentifier","src":"4295:4:7"},{"name":"value","nativeSrc":"4301:5:7","nodeType":"YulIdentifier","src":"4301:5:7"}],"functionName":{"name":"shr","nativeSrc":"4291:3:7","nodeType":"YulIdentifier","src":"4291:3:7"},"nativeSrc":"4291:16:7","nodeType":"YulFunctionCall","src":"4291:16:7"},"variableNames":[{"name":"newValue","nativeSrc":"4270:8:7","nodeType":"YulIdentifier","src":"4270:8:7"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"4197:117:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"4235:4:7","nodeType":"YulTypedName","src":"4235:4:7","type":""},{"name":"value","nativeSrc":"4241:5:7","nodeType":"YulTypedName","src":"4241:5:7","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"4251:8:7","nodeType":"YulTypedName","src":"4251:8:7","type":""}],"src":"4197:117:7"},{"body":{"nativeSrc":"4371:118:7","nodeType":"YulBlock","src":"4371:118:7","statements":[{"nativeSrc":"4381:68:7","nodeType":"YulVariableDeclaration","src":"4381:68:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4430:1:7","nodeType":"YulLiteral","src":"4430:1:7","type":"","value":"8"},{"name":"bytes","nativeSrc":"4433:5:7","nodeType":"YulIdentifier","src":"4433:5:7"}],"functionName":{"name":"mul","nativeSrc":"4426:3:7","nodeType":"YulIdentifier","src":"4426:3:7"},"nativeSrc":"4426:13:7","nodeType":"YulFunctionCall","src":"4426:13:7"},{"arguments":[{"kind":"number","nativeSrc":"4445:1:7","nodeType":"YulLiteral","src":"4445:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4441:3:7","nodeType":"YulIdentifier","src":"4441:3:7"},"nativeSrc":"4441:6:7","nodeType":"YulFunctionCall","src":"4441:6:7"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"4397:28:7","nodeType":"YulIdentifier","src":"4397:28:7"},"nativeSrc":"4397:51:7","nodeType":"YulFunctionCall","src":"4397:51:7"}],"functionName":{"name":"not","nativeSrc":"4393:3:7","nodeType":"YulIdentifier","src":"4393:3:7"},"nativeSrc":"4393:56:7","nodeType":"YulFunctionCall","src":"4393:56:7"},"variables":[{"name":"mask","nativeSrc":"4385:4:7","nodeType":"YulTypedName","src":"4385:4:7","type":""}]},{"nativeSrc":"4458:25:7","nodeType":"YulAssignment","src":"4458:25:7","value":{"arguments":[{"name":"data","nativeSrc":"4472:4:7","nodeType":"YulIdentifier","src":"4472:4:7"},{"name":"mask","nativeSrc":"4478:4:7","nodeType":"YulIdentifier","src":"4478:4:7"}],"functionName":{"name":"and","nativeSrc":"4468:3:7","nodeType":"YulIdentifier","src":"4468:3:7"},"nativeSrc":"4468:15:7","nodeType":"YulFunctionCall","src":"4468:15:7"},"variableNames":[{"name":"result","nativeSrc":"4458:6:7","nodeType":"YulIdentifier","src":"4458:6:7"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"4320:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4348:4:7","nodeType":"YulTypedName","src":"4348:4:7","type":""},{"name":"bytes","nativeSrc":"4354:5:7","nodeType":"YulTypedName","src":"4354:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4364:6:7","nodeType":"YulTypedName","src":"4364:6:7","type":""}],"src":"4320:169:7"},{"body":{"nativeSrc":"4575:214:7","nodeType":"YulBlock","src":"4575:214:7","statements":[{"nativeSrc":"4708:37:7","nodeType":"YulAssignment","src":"4708:37:7","value":{"arguments":[{"name":"data","nativeSrc":"4735:4:7","nodeType":"YulIdentifier","src":"4735:4:7"},{"name":"len","nativeSrc":"4741:3:7","nodeType":"YulIdentifier","src":"4741:3:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4716:18:7","nodeType":"YulIdentifier","src":"4716:18:7"},"nativeSrc":"4716:29:7","nodeType":"YulFunctionCall","src":"4716:29:7"},"variableNames":[{"name":"data","nativeSrc":"4708:4:7","nodeType":"YulIdentifier","src":"4708:4:7"}]},{"nativeSrc":"4754:29:7","nodeType":"YulAssignment","src":"4754:29:7","value":{"arguments":[{"name":"data","nativeSrc":"4765:4:7","nodeType":"YulIdentifier","src":"4765:4:7"},{"arguments":[{"kind":"number","nativeSrc":"4775:1:7","nodeType":"YulLiteral","src":"4775:1:7","type":"","value":"2"},{"name":"len","nativeSrc":"4778:3:7","nodeType":"YulIdentifier","src":"4778:3:7"}],"functionName":{"name":"mul","nativeSrc":"4771:3:7","nodeType":"YulIdentifier","src":"4771:3:7"},"nativeSrc":"4771:11:7","nodeType":"YulFunctionCall","src":"4771:11:7"}],"functionName":{"name":"or","nativeSrc":"4762:2:7","nodeType":"YulIdentifier","src":"4762:2:7"},"nativeSrc":"4762:21:7","nodeType":"YulFunctionCall","src":"4762:21:7"},"variableNames":[{"name":"used","nativeSrc":"4754:4:7","nodeType":"YulIdentifier","src":"4754:4:7"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4494:295:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"4556:4:7","nodeType":"YulTypedName","src":"4556:4:7","type":""},{"name":"len","nativeSrc":"4562:3:7","nodeType":"YulTypedName","src":"4562:3:7","type":""}],"returnVariables":[{"name":"used","nativeSrc":"4570:4:7","nodeType":"YulTypedName","src":"4570:4:7","type":""}],"src":"4494:295:7"},{"body":{"nativeSrc":"4886:1303:7","nodeType":"YulBlock","src":"4886:1303:7","statements":[{"nativeSrc":"4897:51:7","nodeType":"YulVariableDeclaration","src":"4897:51:7","value":{"arguments":[{"name":"src","nativeSrc":"4944:3:7","nodeType":"YulIdentifier","src":"4944:3:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4911:32:7","nodeType":"YulIdentifier","src":"4911:32:7"},"nativeSrc":"4911:37:7","nodeType":"YulFunctionCall","src":"4911:37:7"},"variables":[{"name":"newLen","nativeSrc":"4901:6:7","nodeType":"YulTypedName","src":"4901:6:7","type":""}]},{"body":{"nativeSrc":"5033:22:7","nodeType":"YulBlock","src":"5033:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5035:16:7","nodeType":"YulIdentifier","src":"5035:16:7"},"nativeSrc":"5035:18:7","nodeType":"YulFunctionCall","src":"5035:18:7"},"nativeSrc":"5035:18:7","nodeType":"YulExpressionStatement","src":"5035:18:7"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"5005:6:7","nodeType":"YulIdentifier","src":"5005:6:7"},{"kind":"number","nativeSrc":"5013:18:7","nodeType":"YulLiteral","src":"5013:18:7","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5002:2:7","nodeType":"YulIdentifier","src":"5002:2:7"},"nativeSrc":"5002:30:7","nodeType":"YulFunctionCall","src":"5002:30:7"},"nativeSrc":"4999:56:7","nodeType":"YulIf","src":"4999:56:7"},{"nativeSrc":"5065:52:7","nodeType":"YulVariableDeclaration","src":"5065:52:7","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"5111:4:7","nodeType":"YulIdentifier","src":"5111:4:7"}],"functionName":{"name":"sload","nativeSrc":"5105:5:7","nodeType":"YulIdentifier","src":"5105:5:7"},"nativeSrc":"5105:11:7","nodeType":"YulFunctionCall","src":"5105:11:7"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"5079:25:7","nodeType":"YulIdentifier","src":"5079:25:7"},"nativeSrc":"5079:38:7","nodeType":"YulFunctionCall","src":"5079:38:7"},"variables":[{"name":"oldLen","nativeSrc":"5069:6:7","nodeType":"YulTypedName","src":"5069:6:7","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5210:4:7","nodeType":"YulIdentifier","src":"5210:4:7"},{"name":"oldLen","nativeSrc":"5216:6:7","nodeType":"YulIdentifier","src":"5216:6:7"},{"name":"newLen","nativeSrc":"5224:6:7","nodeType":"YulIdentifier","src":"5224:6:7"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5164:45:7","nodeType":"YulIdentifier","src":"5164:45:7"},"nativeSrc":"5164:67:7","nodeType":"YulFunctionCall","src":"5164:67:7"},"nativeSrc":"5164:67:7","nodeType":"YulExpressionStatement","src":"5164:67:7"},{"nativeSrc":"5241:18:7","nodeType":"YulVariableDeclaration","src":"5241:18:7","value":{"kind":"number","nativeSrc":"5258:1:7","nodeType":"YulLiteral","src":"5258:1:7","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"5245:9:7","nodeType":"YulTypedName","src":"5245:9:7","type":""}]},{"nativeSrc":"5269:17:7","nodeType":"YulAssignment","src":"5269:17:7","value":{"kind":"number","nativeSrc":"5282:4:7","nodeType":"YulLiteral","src":"5282:4:7","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"5269:9:7","nodeType":"YulIdentifier","src":"5269:9:7"}]},{"cases":[{"body":{"nativeSrc":"5333:611:7","nodeType":"YulBlock","src":"5333:611:7","statements":[{"nativeSrc":"5347:37:7","nodeType":"YulVariableDeclaration","src":"5347:37:7","value":{"arguments":[{"name":"newLen","nativeSrc":"5366:6:7","nodeType":"YulIdentifier","src":"5366:6:7"},{"arguments":[{"kind":"number","nativeSrc":"5378:4:7","nodeType":"YulLiteral","src":"5378:4:7","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"5374:3:7","nodeType":"YulIdentifier","src":"5374:3:7"},"nativeSrc":"5374:9:7","nodeType":"YulFunctionCall","src":"5374:9:7"}],"functionName":{"name":"and","nativeSrc":"5362:3:7","nodeType":"YulIdentifier","src":"5362:3:7"},"nativeSrc":"5362:22:7","nodeType":"YulFunctionCall","src":"5362:22:7"},"variables":[{"name":"loopEnd","nativeSrc":"5351:7:7","nodeType":"YulTypedName","src":"5351:7:7","type":""}]},{"nativeSrc":"5398:51:7","nodeType":"YulVariableDeclaration","src":"5398:51:7","value":{"arguments":[{"name":"slot","nativeSrc":"5444:4:7","nodeType":"YulIdentifier","src":"5444:4:7"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5412:31:7","nodeType":"YulIdentifier","src":"5412:31:7"},"nativeSrc":"5412:37:7","nodeType":"YulFunctionCall","src":"5412:37:7"},"variables":[{"name":"dstPtr","nativeSrc":"5402:6:7","nodeType":"YulTypedName","src":"5402:6:7","type":""}]},{"nativeSrc":"5462:10:7","nodeType":"YulVariableDeclaration","src":"5462:10:7","value":{"kind":"number","nativeSrc":"5471:1:7","nodeType":"YulLiteral","src":"5471:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5466:1:7","nodeType":"YulTypedName","src":"5466:1:7","type":""}]},{"body":{"nativeSrc":"5530:163:7","nodeType":"YulBlock","src":"5530:163:7","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5555:6:7","nodeType":"YulIdentifier","src":"5555:6:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5573:3:7","nodeType":"YulIdentifier","src":"5573:3:7"},{"name":"srcOffset","nativeSrc":"5578:9:7","nodeType":"YulIdentifier","src":"5578:9:7"}],"functionName":{"name":"add","nativeSrc":"5569:3:7","nodeType":"YulIdentifier","src":"5569:3:7"},"nativeSrc":"5569:19:7","nodeType":"YulFunctionCall","src":"5569:19:7"}],"functionName":{"name":"mload","nativeSrc":"5563:5:7","nodeType":"YulIdentifier","src":"5563:5:7"},"nativeSrc":"5563:26:7","nodeType":"YulFunctionCall","src":"5563:26:7"}],"functionName":{"name":"sstore","nativeSrc":"5548:6:7","nodeType":"YulIdentifier","src":"5548:6:7"},"nativeSrc":"5548:42:7","nodeType":"YulFunctionCall","src":"5548:42:7"},"nativeSrc":"5548:42:7","nodeType":"YulExpressionStatement","src":"5548:42:7"},{"nativeSrc":"5607:24:7","nodeType":"YulAssignment","src":"5607:24:7","value":{"arguments":[{"name":"dstPtr","nativeSrc":"5621:6:7","nodeType":"YulIdentifier","src":"5621:6:7"},{"kind":"number","nativeSrc":"5629:1:7","nodeType":"YulLiteral","src":"5629:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5617:3:7","nodeType":"YulIdentifier","src":"5617:3:7"},"nativeSrc":"5617:14:7","nodeType":"YulFunctionCall","src":"5617:14:7"},"variableNames":[{"name":"dstPtr","nativeSrc":"5607:6:7","nodeType":"YulIdentifier","src":"5607:6:7"}]},{"nativeSrc":"5648:31:7","nodeType":"YulAssignment","src":"5648:31:7","value":{"arguments":[{"name":"srcOffset","nativeSrc":"5665:9:7","nodeType":"YulIdentifier","src":"5665:9:7"},{"kind":"number","nativeSrc":"5676:2:7","nodeType":"YulLiteral","src":"5676:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5661:3:7","nodeType":"YulIdentifier","src":"5661:3:7"},"nativeSrc":"5661:18:7","nodeType":"YulFunctionCall","src":"5661:18:7"},"variableNames":[{"name":"srcOffset","nativeSrc":"5648:9:7","nodeType":"YulIdentifier","src":"5648:9:7"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5496:1:7","nodeType":"YulIdentifier","src":"5496:1:7"},{"name":"loopEnd","nativeSrc":"5499:7:7","nodeType":"YulIdentifier","src":"5499:7:7"}],"functionName":{"name":"lt","nativeSrc":"5493:2:7","nodeType":"YulIdentifier","src":"5493:2:7"},"nativeSrc":"5493:14:7","nodeType":"YulFunctionCall","src":"5493:14:7"},"nativeSrc":"5485:208:7","nodeType":"YulForLoop","post":{"nativeSrc":"5508:21:7","nodeType":"YulBlock","src":"5508:21:7","statements":[{"nativeSrc":"5510:17:7","nodeType":"YulAssignment","src":"5510:17:7","value":{"arguments":[{"name":"i","nativeSrc":"5519:1:7","nodeType":"YulIdentifier","src":"5519:1:7"},{"kind":"number","nativeSrc":"5522:4:7","nodeType":"YulLiteral","src":"5522:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5515:3:7","nodeType":"YulIdentifier","src":"5515:3:7"},"nativeSrc":"5515:12:7","nodeType":"YulFunctionCall","src":"5515:12:7"},"variableNames":[{"name":"i","nativeSrc":"5510:1:7","nodeType":"YulIdentifier","src":"5510:1:7"}]}]},"pre":{"nativeSrc":"5489:3:7","nodeType":"YulBlock","src":"5489:3:7","statements":[]},"src":"5485:208:7"},{"body":{"nativeSrc":"5729:156:7","nodeType":"YulBlock","src":"5729:156:7","statements":[{"nativeSrc":"5747:43:7","nodeType":"YulVariableDeclaration","src":"5747:43:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5774:3:7","nodeType":"YulIdentifier","src":"5774:3:7"},{"name":"srcOffset","nativeSrc":"5779:9:7","nodeType":"YulIdentifier","src":"5779:9:7"}],"functionName":{"name":"add","nativeSrc":"5770:3:7","nodeType":"YulIdentifier","src":"5770:3:7"},"nativeSrc":"5770:19:7","nodeType":"YulFunctionCall","src":"5770:19:7"}],"functionName":{"name":"mload","nativeSrc":"5764:5:7","nodeType":"YulIdentifier","src":"5764:5:7"},"nativeSrc":"5764:26:7","nodeType":"YulFunctionCall","src":"5764:26:7"},"variables":[{"name":"lastValue","nativeSrc":"5751:9:7","nodeType":"YulTypedName","src":"5751:9:7","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"5814:6:7","nodeType":"YulIdentifier","src":"5814:6:7"},{"arguments":[{"name":"lastValue","nativeSrc":"5841:9:7","nodeType":"YulIdentifier","src":"5841:9:7"},{"arguments":[{"name":"newLen","nativeSrc":"5856:6:7","nodeType":"YulIdentifier","src":"5856:6:7"},{"kind":"number","nativeSrc":"5864:4:7","nodeType":"YulLiteral","src":"5864:4:7","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"5852:3:7","nodeType":"YulIdentifier","src":"5852:3:7"},"nativeSrc":"5852:17:7","nodeType":"YulFunctionCall","src":"5852:17:7"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"5822:18:7","nodeType":"YulIdentifier","src":"5822:18:7"},"nativeSrc":"5822:48:7","nodeType":"YulFunctionCall","src":"5822:48:7"}],"functionName":{"name":"sstore","nativeSrc":"5807:6:7","nodeType":"YulIdentifier","src":"5807:6:7"},"nativeSrc":"5807:64:7","nodeType":"YulFunctionCall","src":"5807:64:7"},"nativeSrc":"5807:64:7","nodeType":"YulExpressionStatement","src":"5807:64:7"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"5712:7:7","nodeType":"YulIdentifier","src":"5712:7:7"},{"name":"newLen","nativeSrc":"5721:6:7","nodeType":"YulIdentifier","src":"5721:6:7"}],"functionName":{"name":"lt","nativeSrc":"5709:2:7","nodeType":"YulIdentifier","src":"5709:2:7"},"nativeSrc":"5709:19:7","nodeType":"YulFunctionCall","src":"5709:19:7"},"nativeSrc":"5706:179:7","nodeType":"YulIf","src":"5706:179:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5905:4:7","nodeType":"YulIdentifier","src":"5905:4:7"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"5919:6:7","nodeType":"YulIdentifier","src":"5919:6:7"},{"kind":"number","nativeSrc":"5927:1:7","nodeType":"YulLiteral","src":"5927:1:7","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"5915:3:7","nodeType":"YulIdentifier","src":"5915:3:7"},"nativeSrc":"5915:14:7","nodeType":"YulFunctionCall","src":"5915:14:7"},{"kind":"number","nativeSrc":"5931:1:7","nodeType":"YulLiteral","src":"5931:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5911:3:7","nodeType":"YulIdentifier","src":"5911:3:7"},"nativeSrc":"5911:22:7","nodeType":"YulFunctionCall","src":"5911:22:7"}],"functionName":{"name":"sstore","nativeSrc":"5898:6:7","nodeType":"YulIdentifier","src":"5898:6:7"},"nativeSrc":"5898:36:7","nodeType":"YulFunctionCall","src":"5898:36:7"},"nativeSrc":"5898:36:7","nodeType":"YulExpressionStatement","src":"5898:36:7"}]},"nativeSrc":"5326:618:7","nodeType":"YulCase","src":"5326:618:7","value":{"kind":"number","nativeSrc":"5331:1:7","nodeType":"YulLiteral","src":"5331:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"5961:222:7","nodeType":"YulBlock","src":"5961:222:7","statements":[{"nativeSrc":"5975:14:7","nodeType":"YulVariableDeclaration","src":"5975:14:7","value":{"kind":"number","nativeSrc":"5988:1:7","nodeType":"YulLiteral","src":"5988:1:7","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5979:5:7","nodeType":"YulTypedName","src":"5979:5:7","type":""}]},{"body":{"nativeSrc":"6012:67:7","nodeType":"YulBlock","src":"6012:67:7","statements":[{"nativeSrc":"6030:35:7","nodeType":"YulAssignment","src":"6030:35:7","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6049:3:7","nodeType":"YulIdentifier","src":"6049:3:7"},{"name":"srcOffset","nativeSrc":"6054:9:7","nodeType":"YulIdentifier","src":"6054:9:7"}],"functionName":{"name":"add","nativeSrc":"6045:3:7","nodeType":"YulIdentifier","src":"6045:3:7"},"nativeSrc":"6045:19:7","nodeType":"YulFunctionCall","src":"6045:19:7"}],"functionName":{"name":"mload","nativeSrc":"6039:5:7","nodeType":"YulIdentifier","src":"6039:5:7"},"nativeSrc":"6039:26:7","nodeType":"YulFunctionCall","src":"6039:26:7"},"variableNames":[{"name":"value","nativeSrc":"6030:5:7","nodeType":"YulIdentifier","src":"6030:5:7"}]}]},"condition":{"name":"newLen","nativeSrc":"6005:6:7","nodeType":"YulIdentifier","src":"6005:6:7"},"nativeSrc":"6002:77:7","nodeType":"YulIf","src":"6002:77:7"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6099:4:7","nodeType":"YulIdentifier","src":"6099:4:7"},{"arguments":[{"name":"value","nativeSrc":"6158:5:7","nodeType":"YulIdentifier","src":"6158:5:7"},{"name":"newLen","nativeSrc":"6165:6:7","nodeType":"YulIdentifier","src":"6165:6:7"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6105:52:7","nodeType":"YulIdentifier","src":"6105:52:7"},"nativeSrc":"6105:67:7","nodeType":"YulFunctionCall","src":"6105:67:7"}],"functionName":{"name":"sstore","nativeSrc":"6092:6:7","nodeType":"YulIdentifier","src":"6092:6:7"},"nativeSrc":"6092:81:7","nodeType":"YulFunctionCall","src":"6092:81:7"},"nativeSrc":"6092:81:7","nodeType":"YulExpressionStatement","src":"6092:81:7"}]},"nativeSrc":"5953:230:7","nodeType":"YulCase","src":"5953:230:7","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"5306:6:7","nodeType":"YulIdentifier","src":"5306:6:7"},{"kind":"number","nativeSrc":"5314:2:7","nodeType":"YulLiteral","src":"5314:2:7","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5303:2:7","nodeType":"YulIdentifier","src":"5303:2:7"},"nativeSrc":"5303:14:7","nodeType":"YulFunctionCall","src":"5303:14:7"},"nativeSrc":"5296:887:7","nodeType":"YulSwitch","src":"5296:887:7"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"4794:1395:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4875:4:7","nodeType":"YulTypedName","src":"4875:4:7","type":""},{"name":"src","nativeSrc":"4881:3:7","nodeType":"YulTypedName","src":"4881:3:7","type":""}],"src":"4794:1395:7"},{"body":{"nativeSrc":"6240:81:7","nodeType":"YulBlock","src":"6240:81:7","statements":[{"nativeSrc":"6250:65:7","nodeType":"YulAssignment","src":"6250:65:7","value":{"arguments":[{"name":"value","nativeSrc":"6265:5:7","nodeType":"YulIdentifier","src":"6265:5:7"},{"kind":"number","nativeSrc":"6272:42:7","nodeType":"YulLiteral","src":"6272:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6261:3:7","nodeType":"YulIdentifier","src":"6261:3:7"},"nativeSrc":"6261:54:7","nodeType":"YulFunctionCall","src":"6261:54:7"},"variableNames":[{"name":"cleaned","nativeSrc":"6250:7:7","nodeType":"YulIdentifier","src":"6250:7:7"}]}]},"name":"cleanup_t_uint160","nativeSrc":"6195:126:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6222:5:7","nodeType":"YulTypedName","src":"6222:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6232:7:7","nodeType":"YulTypedName","src":"6232:7:7","type":""}],"src":"6195:126:7"},{"body":{"nativeSrc":"6372:51:7","nodeType":"YulBlock","src":"6372:51:7","statements":[{"nativeSrc":"6382:35:7","nodeType":"YulAssignment","src":"6382:35:7","value":{"arguments":[{"name":"value","nativeSrc":"6411:5:7","nodeType":"YulIdentifier","src":"6411:5:7"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"6393:17:7","nodeType":"YulIdentifier","src":"6393:17:7"},"nativeSrc":"6393:24:7","nodeType":"YulFunctionCall","src":"6393:24:7"},"variableNames":[{"name":"cleaned","nativeSrc":"6382:7:7","nodeType":"YulIdentifier","src":"6382:7:7"}]}]},"name":"cleanup_t_address","nativeSrc":"6327:96:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6354:5:7","nodeType":"YulTypedName","src":"6354:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6364:7:7","nodeType":"YulTypedName","src":"6364:7:7","type":""}],"src":"6327:96:7"},{"body":{"nativeSrc":"6494:53:7","nodeType":"YulBlock","src":"6494:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6511:3:7","nodeType":"YulIdentifier","src":"6511:3:7"},{"arguments":[{"name":"value","nativeSrc":"6534:5:7","nodeType":"YulIdentifier","src":"6534:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6516:17:7","nodeType":"YulIdentifier","src":"6516:17:7"},"nativeSrc":"6516:24:7","nodeType":"YulFunctionCall","src":"6516:24:7"}],"functionName":{"name":"mstore","nativeSrc":"6504:6:7","nodeType":"YulIdentifier","src":"6504:6:7"},"nativeSrc":"6504:37:7","nodeType":"YulFunctionCall","src":"6504:37:7"},"nativeSrc":"6504:37:7","nodeType":"YulExpressionStatement","src":"6504:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6429:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6482:5:7","nodeType":"YulTypedName","src":"6482:5:7","type":""},{"name":"pos","nativeSrc":"6489:3:7","nodeType":"YulTypedName","src":"6489:3:7","type":""}],"src":"6429:118:7"},{"body":{"nativeSrc":"6651:124:7","nodeType":"YulBlock","src":"6651:124:7","statements":[{"nativeSrc":"6661:26:7","nodeType":"YulAssignment","src":"6661:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6673:9:7","nodeType":"YulIdentifier","src":"6673:9:7"},{"kind":"number","nativeSrc":"6684:2:7","nodeType":"YulLiteral","src":"6684:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6669:3:7","nodeType":"YulIdentifier","src":"6669:3:7"},"nativeSrc":"6669:18:7","nodeType":"YulFunctionCall","src":"6669:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6661:4:7","nodeType":"YulIdentifier","src":"6661:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6741:6:7","nodeType":"YulIdentifier","src":"6741:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6754:9:7","nodeType":"YulIdentifier","src":"6754:9:7"},{"kind":"number","nativeSrc":"6765:1:7","nodeType":"YulLiteral","src":"6765:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6750:3:7","nodeType":"YulIdentifier","src":"6750:3:7"},"nativeSrc":"6750:17:7","nodeType":"YulFunctionCall","src":"6750:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6697:43:7","nodeType":"YulIdentifier","src":"6697:43:7"},"nativeSrc":"6697:71:7","nodeType":"YulFunctionCall","src":"6697:71:7"},"nativeSrc":"6697:71:7","nodeType":"YulExpressionStatement","src":"6697:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6553:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6623:9:7","nodeType":"YulTypedName","src":"6623:9:7","type":""},{"name":"value0","nativeSrc":"6635:6:7","nodeType":"YulTypedName","src":"6635:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6646:4:7","nodeType":"YulTypedName","src":"6646:4:7","type":""}],"src":"6553:222:7"},{"body":{"nativeSrc":"6809:152:7","nodeType":"YulBlock","src":"6809:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6826:1:7","nodeType":"YulLiteral","src":"6826:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"6829:77:7","nodeType":"YulLiteral","src":"6829:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6819:6:7","nodeType":"YulIdentifier","src":"6819:6:7"},"nativeSrc":"6819:88:7","nodeType":"YulFunctionCall","src":"6819:88:7"},"nativeSrc":"6819:88:7","nodeType":"YulExpressionStatement","src":"6819:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6923:1:7","nodeType":"YulLiteral","src":"6923:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"6926:4:7","nodeType":"YulLiteral","src":"6926:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6916:6:7","nodeType":"YulIdentifier","src":"6916:6:7"},"nativeSrc":"6916:15:7","nodeType":"YulFunctionCall","src":"6916:15:7"},"nativeSrc":"6916:15:7","nodeType":"YulExpressionStatement","src":"6916:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6947:1:7","nodeType":"YulLiteral","src":"6947:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"6950:4:7","nodeType":"YulLiteral","src":"6950:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6940:6:7","nodeType":"YulIdentifier","src":"6940:6:7"},"nativeSrc":"6940:15:7","nodeType":"YulFunctionCall","src":"6940:15:7"},"nativeSrc":"6940:15:7","nodeType":"YulExpressionStatement","src":"6940:15:7"}]},"name":"panic_error_0x11","nativeSrc":"6781:180:7","nodeType":"YulFunctionDefinition","src":"6781:180:7"},{"body":{"nativeSrc":"7011:147:7","nodeType":"YulBlock","src":"7011:147:7","statements":[{"nativeSrc":"7021:25:7","nodeType":"YulAssignment","src":"7021:25:7","value":{"arguments":[{"name":"x","nativeSrc":"7044:1:7","nodeType":"YulIdentifier","src":"7044:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7026:17:7","nodeType":"YulIdentifier","src":"7026:17:7"},"nativeSrc":"7026:20:7","nodeType":"YulFunctionCall","src":"7026:20:7"},"variableNames":[{"name":"x","nativeSrc":"7021:1:7","nodeType":"YulIdentifier","src":"7021:1:7"}]},{"nativeSrc":"7055:25:7","nodeType":"YulAssignment","src":"7055:25:7","value":{"arguments":[{"name":"y","nativeSrc":"7078:1:7","nodeType":"YulIdentifier","src":"7078:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7060:17:7","nodeType":"YulIdentifier","src":"7060:17:7"},"nativeSrc":"7060:20:7","nodeType":"YulFunctionCall","src":"7060:20:7"},"variableNames":[{"name":"y","nativeSrc":"7055:1:7","nodeType":"YulIdentifier","src":"7055:1:7"}]},{"nativeSrc":"7089:16:7","nodeType":"YulAssignment","src":"7089:16:7","value":{"arguments":[{"name":"x","nativeSrc":"7100:1:7","nodeType":"YulIdentifier","src":"7100:1:7"},{"name":"y","nativeSrc":"7103:1:7","nodeType":"YulIdentifier","src":"7103:1:7"}],"functionName":{"name":"add","nativeSrc":"7096:3:7","nodeType":"YulIdentifier","src":"7096:3:7"},"nativeSrc":"7096:9:7","nodeType":"YulFunctionCall","src":"7096:9:7"},"variableNames":[{"name":"sum","nativeSrc":"7089:3:7","nodeType":"YulIdentifier","src":"7089:3:7"}]},{"body":{"nativeSrc":"7129:22:7","nodeType":"YulBlock","src":"7129:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7131:16:7","nodeType":"YulIdentifier","src":"7131:16:7"},"nativeSrc":"7131:18:7","nodeType":"YulFunctionCall","src":"7131:18:7"},"nativeSrc":"7131:18:7","nodeType":"YulExpressionStatement","src":"7131:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7121:1:7","nodeType":"YulIdentifier","src":"7121:1:7"},{"name":"sum","nativeSrc":"7124:3:7","nodeType":"YulIdentifier","src":"7124:3:7"}],"functionName":{"name":"gt","nativeSrc":"7118:2:7","nodeType":"YulIdentifier","src":"7118:2:7"},"nativeSrc":"7118:10:7","nodeType":"YulFunctionCall","src":"7118:10:7"},"nativeSrc":"7115:36:7","nodeType":"YulIf","src":"7115:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"6967:191:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6998:1:7","nodeType":"YulTypedName","src":"6998:1:7","type":""},{"name":"y","nativeSrc":"7001:1:7","nodeType":"YulTypedName","src":"7001:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7007:3:7","nodeType":"YulTypedName","src":"7007:3:7","type":""}],"src":"6967:191:7"},{"body":{"nativeSrc":"7229:53:7","nodeType":"YulBlock","src":"7229:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7246:3:7","nodeType":"YulIdentifier","src":"7246:3:7"},{"arguments":[{"name":"value","nativeSrc":"7269:5:7","nodeType":"YulIdentifier","src":"7269:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7251:17:7","nodeType":"YulIdentifier","src":"7251:17:7"},"nativeSrc":"7251:24:7","nodeType":"YulFunctionCall","src":"7251:24:7"}],"functionName":{"name":"mstore","nativeSrc":"7239:6:7","nodeType":"YulIdentifier","src":"7239:6:7"},"nativeSrc":"7239:37:7","nodeType":"YulFunctionCall","src":"7239:37:7"},"nativeSrc":"7239:37:7","nodeType":"YulExpressionStatement","src":"7239:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7164:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7217:5:7","nodeType":"YulTypedName","src":"7217:5:7","type":""},{"name":"pos","nativeSrc":"7224:3:7","nodeType":"YulTypedName","src":"7224:3:7","type":""}],"src":"7164:118:7"},{"body":{"nativeSrc":"7442:288:7","nodeType":"YulBlock","src":"7442:288:7","statements":[{"nativeSrc":"7452:26:7","nodeType":"YulAssignment","src":"7452:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"7464:9:7","nodeType":"YulIdentifier","src":"7464:9:7"},{"kind":"number","nativeSrc":"7475:2:7","nodeType":"YulLiteral","src":"7475:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7460:3:7","nodeType":"YulIdentifier","src":"7460:3:7"},"nativeSrc":"7460:18:7","nodeType":"YulFunctionCall","src":"7460:18:7"},"variableNames":[{"name":"tail","nativeSrc":"7452:4:7","nodeType":"YulIdentifier","src":"7452:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7532:6:7","nodeType":"YulIdentifier","src":"7532:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7545:9:7","nodeType":"YulIdentifier","src":"7545:9:7"},{"kind":"number","nativeSrc":"7556:1:7","nodeType":"YulLiteral","src":"7556:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7541:3:7","nodeType":"YulIdentifier","src":"7541:3:7"},"nativeSrc":"7541:17:7","nodeType":"YulFunctionCall","src":"7541:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7488:43:7","nodeType":"YulIdentifier","src":"7488:43:7"},"nativeSrc":"7488:71:7","nodeType":"YulFunctionCall","src":"7488:71:7"},"nativeSrc":"7488:71:7","nodeType":"YulExpressionStatement","src":"7488:71:7"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7613:6:7","nodeType":"YulIdentifier","src":"7613:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7626:9:7","nodeType":"YulIdentifier","src":"7626:9:7"},{"kind":"number","nativeSrc":"7637:2:7","nodeType":"YulLiteral","src":"7637:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7622:3:7","nodeType":"YulIdentifier","src":"7622:3:7"},"nativeSrc":"7622:18:7","nodeType":"YulFunctionCall","src":"7622:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7569:43:7","nodeType":"YulIdentifier","src":"7569:43:7"},"nativeSrc":"7569:72:7","nodeType":"YulFunctionCall","src":"7569:72:7"},"nativeSrc":"7569:72:7","nodeType":"YulExpressionStatement","src":"7569:72:7"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7695:6:7","nodeType":"YulIdentifier","src":"7695:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7708:9:7","nodeType":"YulIdentifier","src":"7708:9:7"},{"kind":"number","nativeSrc":"7719:2:7","nodeType":"YulLiteral","src":"7719:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7704:3:7","nodeType":"YulIdentifier","src":"7704:3:7"},"nativeSrc":"7704:18:7","nodeType":"YulFunctionCall","src":"7704:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7651:43:7","nodeType":"YulIdentifier","src":"7651:43:7"},"nativeSrc":"7651:72:7","nodeType":"YulFunctionCall","src":"7651:72:7"},"nativeSrc":"7651:72:7","nodeType":"YulExpressionStatement","src":"7651:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"7288:442:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7398:9:7","nodeType":"YulTypedName","src":"7398:9:7","type":""},{"name":"value2","nativeSrc":"7410:6:7","nodeType":"YulTypedName","src":"7410:6:7","type":""},{"name":"value1","nativeSrc":"7418:6:7","nodeType":"YulTypedName","src":"7418:6:7","type":""},{"name":"value0","nativeSrc":"7426:6:7","nodeType":"YulTypedName","src":"7426:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7437:4:7","nodeType":"YulTypedName","src":"7437:4:7","type":""}],"src":"7288:442:7"},{"body":{"nativeSrc":"7834:124:7","nodeType":"YulBlock","src":"7834:124:7","statements":[{"nativeSrc":"7844:26:7","nodeType":"YulAssignment","src":"7844:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"7856:9:7","nodeType":"YulIdentifier","src":"7856:9:7"},{"kind":"number","nativeSrc":"7867:2:7","nodeType":"YulLiteral","src":"7867:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7852:3:7","nodeType":"YulIdentifier","src":"7852:3:7"},"nativeSrc":"7852:18:7","nodeType":"YulFunctionCall","src":"7852:18:7"},"variableNames":[{"name":"tail","nativeSrc":"7844:4:7","nodeType":"YulIdentifier","src":"7844:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7924:6:7","nodeType":"YulIdentifier","src":"7924:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"7937:9:7","nodeType":"YulIdentifier","src":"7937:9:7"},{"kind":"number","nativeSrc":"7948:1:7","nodeType":"YulLiteral","src":"7948:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7933:3:7","nodeType":"YulIdentifier","src":"7933:3:7"},"nativeSrc":"7933:17:7","nodeType":"YulFunctionCall","src":"7933:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7880:43:7","nodeType":"YulIdentifier","src":"7880:43:7"},"nativeSrc":"7880:71:7","nodeType":"YulFunctionCall","src":"7880:71:7"},"nativeSrc":"7880:71:7","nodeType":"YulExpressionStatement","src":"7880:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"7736:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7806:9:7","nodeType":"YulTypedName","src":"7806:9:7","type":""},{"name":"value0","nativeSrc":"7818:6:7","nodeType":"YulTypedName","src":"7818:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7829:4:7","nodeType":"YulTypedName","src":"7829:4:7","type":""}],"src":"7736:222:7"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051611688380380611688833981810160405281019061003291906103be565b6040518060400160405280600881526020017f4f7572546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f4f5400000000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610631565b5080600490816100bd9190610631565b5050506100d033826100d660201b60201c565b50610823565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101485760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161013f9190610744565b60405180910390fd5b61015a6000838361015e60201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036101b05780600260008282546101a4919061078e565b92505081905550610283565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561023c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610233939291906107d1565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102cc5780600260008282540392505081905550610319565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516103769190610808565b60405180910390a3505050565b600080fd5b6000819050919050565b61039b81610388565b81146103a657600080fd5b50565b6000815190506103b881610392565b92915050565b6000602082840312156103d4576103d3610383565b5b60006103e2848285016103a9565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061046c57607f821691505b60208210810361047f5761047e610425565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104aa565b6104f186836104aa565b95508019841693508086168417925050509392505050565b6000819050919050565b600061052e61052961052484610388565b610509565b610388565b9050919050565b6000819050919050565b61054883610513565b61055c61055482610535565b8484546104b7565b825550505050565b600090565b610571610564565b61057c81848461053f565b505050565b5b818110156105a057610595600082610569565b600181019050610582565b5050565b601f8211156105e5576105b681610485565b6105bf8461049a565b810160208510156105ce578190505b6105e26105da8561049a565b830182610581565b50505b505050565b600082821c905092915050565b6000610608600019846008026105ea565b1980831691505092915050565b600061062183836105f7565b9150826002028217905092915050565b61063a826103eb565b67ffffffffffffffff811115610653576106526103f6565b5b61065d8254610454565b6106688282856105a4565b600060209050601f83116001811461069b5760008415610689578287015190505b6106938582610615565b8655506106fb565b601f1984166106a986610485565b60005b828110156106d1578489015182556001820191506020850194506020810190506106ac565b868310156106ee57848901516106ea601f8916826105f7565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061072e82610703565b9050919050565b61073e81610723565b82525050565b60006020820190506107596000830184610735565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061079982610388565b91506107a483610388565b92508282019050808211156107bc576107bb61075f565b5b92915050565b6107cb81610388565b82525050565b60006060820190506107e66000830186610735565b6107f360208301856107c2565b61080060408301846107c2565b949350505050565b600060208201905061081d60008301846107c2565b92915050565b610e56806108326000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aaa565b60405180910390f35b6100d060048036038101906100cb9190610b65565b610292565b6040516100dd9190610bc0565b60405180910390f35b6100ee6102b5565b6040516100fb9190610bea565b60405180910390f35b61011e60048036038101906101199190610c05565b6102bf565b60405161012b9190610bc0565b60405180910390f35b61013c6102ee565b6040516101499190610c74565b60405180910390f35b61016c60048036038101906101679190610c8f565b6102f7565b6040516101799190610bea565b60405180910390f35b61018a61033f565b6040516101979190610aaa565b60405180910390f35b6101ba60048036038101906101b59190610b65565b6103d1565b6040516101c79190610bc0565b60405180910390f35b6101ea60048036038101906101e59190610cbc565b6103f4565b6040516101f79190610bea565b60405180910390f35b60606003805461020f90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e285858561052a565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2b565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e981858561052a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061e565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105245781811015610514578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050b93929190610d6b565b60405180910390fd5b6105238484848403600061061e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105939190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106059190610da2565b60405180910390fd5b6106198383836107f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036106905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106879190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f99190610da2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e69190610bea565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084757806002600082825461083b9190610dec565b9250508190555061091a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ca93929190610d6b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096357806002600082825403925050819055506109b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0d9190610bea565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a54578082015181840152602081019050610a39565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7c82610a1a565b610a868185610a25565b9350610a96818560208601610a36565b610a9f81610a60565b840191505092915050565b60006020820190508181036000830152610ac48184610a71565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afc82610ad1565b9050919050565b610b0c81610af1565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b6000819050919050565b610b4281610b2f565b8114610b4d57600080fd5b50565b600081359050610b5f81610b39565b92915050565b60008060408385031215610b7c57610b7b610acc565b5b6000610b8a85828601610b1a565b9250506020610b9b85828601610b50565b9150509250929050565b60008115159050919050565b610bba81610ba5565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b610be481610b2f565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b600080600060608486031215610c1e57610c1d610acc565b5b6000610c2c86828701610b1a565b9350506020610c3d86828701610b1a565b9250506040610c4e86828701610b50565b9150509250925092565b600060ff82169050919050565b610c6e81610c58565b82525050565b6000602082019050610c896000830184610c65565b92915050565b600060208284031215610ca557610ca4610acc565b5b6000610cb384828501610b1a565b91505092915050565b60008060408385031215610cd357610cd2610acc565b5b6000610ce185828601610b1a565b9250506020610cf285828601610b1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4357607f821691505b602082108103610d5657610d55610cfc565b5b50919050565b610d6581610af1565b82525050565b6000606082019050610d806000830186610d5c565b610d8d6020830185610bdb565b610d9a6040830184610bdb565b949350505050565b6000602082019050610db76000830184610d5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df782610b2f565b9150610e0283610b2f565b9250828201905080821115610e1a57610e19610dbd565b5b9291505056fea264697066735822122091697556a616614bf1a9f85e5f96112eb19a3d890d40604efedd4b8da51a0c3664736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1688 CODESIZE SUB DUP1 PUSH2 0x1688 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F7572546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4F54000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST POP POP POP PUSH2 0xD0 CALLER DUP3 PUSH2 0xD6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x823 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x148 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15A PUSH1 0x0 DUP4 DUP4 PUSH2 0x15E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x78E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x283 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x23C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2CC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x319 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x808 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39B DUP2 PUSH2 0x388 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B8 DUP2 PUSH2 0x392 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0x383 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E2 DUP5 DUP3 DUP6 ADD PUSH2 0x3A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x46C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x47F JUMPI PUSH2 0x47E PUSH2 0x425 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4E7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x4F1 DUP7 DUP4 PUSH2 0x4AA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E PUSH2 0x529 PUSH2 0x524 DUP5 PUSH2 0x388 JUMP JUMPDEST PUSH2 0x509 JUMP JUMPDEST PUSH2 0x388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x548 DUP4 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x55C PUSH2 0x554 DUP3 PUSH2 0x535 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4B7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x571 PUSH2 0x564 JUMP JUMPDEST PUSH2 0x57C DUP2 DUP5 DUP5 PUSH2 0x53F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI PUSH2 0x595 PUSH1 0x0 DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x582 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5B6 DUP2 PUSH2 0x485 JUMP JUMPDEST PUSH2 0x5BF DUP5 PUSH2 0x49A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5E2 PUSH2 0x5DA DUP6 PUSH2 0x49A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x581 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x608 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x621 DUP4 DUP4 PUSH2 0x5F7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63A DUP3 PUSH2 0x3EB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x653 JUMPI PUSH2 0x652 PUSH2 0x3F6 JUMP JUMPDEST JUMPDEST PUSH2 0x65D DUP3 SLOAD PUSH2 0x454 JUMP JUMPDEST PUSH2 0x668 DUP3 DUP3 DUP6 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x69B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x689 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x693 DUP6 DUP3 PUSH2 0x615 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6FB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6A9 DUP7 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6AC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6EE JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6EA PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5F7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72E DUP3 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x723 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x759 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x735 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x799 DUP3 PUSH2 0x388 JUMP JUMPDEST SWAP2 POP PUSH2 0x7A4 DUP4 PUSH2 0x388 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7BC JUMPI PUSH2 0x7BB PUSH2 0x75F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7E6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x7F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x800 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x81D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE56 DUP1 PUSH2 0x832 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x514 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x523 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x690 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x702 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xA86 DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP4 POP PUSH2 0xA96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC4 DUP2 DUP5 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0xB03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3D DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4E DUP7 DUP3 DUP8 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0xD9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE02 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xDBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 PUSH10 0x7556A616614BF1A9F85E PUSH0 SWAP7 GT 0x2E 0xB1 SWAP11 RETURNDATASIZE DUP10 0xD BLOCKHASH PUSH1 0x4E INVALID 0xDD 0x4B DUP14 0xA5 BYTE 0xC CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"136:147:6:-:0;;;170:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;240:32:6::1;246:10;258:13;240:5;;;:32;;:::i;:::-;170:110:::0;136:147;;7458:208:1;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;136:147:6:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_542":{"entryPoint":1155,"id":542,"parameterSlots":3,"returnSlots":0},"@_approve_602":{"entryPoint":1566,"id":602,"parameterSlots":4,"returnSlots":0},"@_msgSender_767":{"entryPoint":1147,"id":767,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_650":{"entryPoint":1173,"id":650,"parameterSlots":3,"returnSlots":0},"@_transfer_381":{"entryPoint":1322,"id":381,"parameterSlots":3,"returnSlots":0},"@_update_458":{"entryPoint":2037,"id":458,"parameterSlots":3,"returnSlots":0},"@allowance_278":{"entryPoint":1012,"id":278,"parameterSlots":2,"returnSlots":1},"@approve_302":{"entryPoint":658,"id":302,"parameterSlots":2,"returnSlots":1},"@balanceOf_237":{"entryPoint":759,"id":237,"parameterSlots":1,"returnSlots":1},"@decimals_215":{"entryPoint":750,"id":215,"parameterSlots":0,"returnSlots":1},"@name_197":{"entryPoint":512,"id":197,"parameterSlots":0,"returnSlots":1},"@symbol_206":{"entryPoint":831,"id":206,"parameterSlots":0,"returnSlots":1},"@totalSupply_224":{"entryPoint":693,"id":224,"parameterSlots":0,"returnSlots":1},"@transferFrom_334":{"entryPoint":703,"id":334,"parameterSlots":3,"returnSlots":1},"@transfer_261":{"entryPoint":977,"id":261,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2896,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3260,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3077,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3420,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2993,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2673,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3035,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3435,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3008,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2586,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2597,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3564,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2801,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":2981,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2769,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2863,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3160,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2614,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3371,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3517,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3324,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2764,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2656,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2819,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2873,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:7362:7","nodeType":"YulBlock","src":"0:7362:7","statements":[{"body":{"nativeSrc":"66:40:7","nodeType":"YulBlock","src":"66:40:7","statements":[{"nativeSrc":"77:22:7","nodeType":"YulAssignment","src":"77:22:7","value":{"arguments":[{"name":"value","nativeSrc":"93:5:7","nodeType":"YulIdentifier","src":"93:5:7"}],"functionName":{"name":"mload","nativeSrc":"87:5:7","nodeType":"YulIdentifier","src":"87:5:7"},"nativeSrc":"87:12:7","nodeType":"YulFunctionCall","src":"87:12:7"},"variableNames":[{"name":"length","nativeSrc":"77:6:7","nodeType":"YulIdentifier","src":"77:6:7"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:7","nodeType":"YulTypedName","src":"49:5:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:7","nodeType":"YulTypedName","src":"59:6:7","type":""}],"src":"7:99:7"},{"body":{"nativeSrc":"208:73:7","nodeType":"YulBlock","src":"208:73:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:7","nodeType":"YulIdentifier","src":"225:3:7"},{"name":"length","nativeSrc":"230:6:7","nodeType":"YulIdentifier","src":"230:6:7"}],"functionName":{"name":"mstore","nativeSrc":"218:6:7","nodeType":"YulIdentifier","src":"218:6:7"},"nativeSrc":"218:19:7","nodeType":"YulFunctionCall","src":"218:19:7"},"nativeSrc":"218:19:7","nodeType":"YulExpressionStatement","src":"218:19:7"},{"nativeSrc":"246:29:7","nodeType":"YulAssignment","src":"246:29:7","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:7","nodeType":"YulIdentifier","src":"265:3:7"},{"kind":"number","nativeSrc":"270:4:7","nodeType":"YulLiteral","src":"270:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:7","nodeType":"YulIdentifier","src":"261:3:7"},"nativeSrc":"261:14:7","nodeType":"YulFunctionCall","src":"261:14:7"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:7","nodeType":"YulIdentifier","src":"246:11:7"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:7","nodeType":"YulTypedName","src":"180:3:7","type":""},{"name":"length","nativeSrc":"185:6:7","nodeType":"YulTypedName","src":"185:6:7","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:7","nodeType":"YulTypedName","src":"196:11:7","type":""}],"src":"112:169:7"},{"body":{"nativeSrc":"349:186:7","nodeType":"YulBlock","src":"349:186:7","statements":[{"nativeSrc":"360:10:7","nodeType":"YulVariableDeclaration","src":"360:10:7","value":{"kind":"number","nativeSrc":"369:1:7","nodeType":"YulLiteral","src":"369:1:7","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:7","nodeType":"YulTypedName","src":"364:1:7","type":""}]},{"body":{"nativeSrc":"429:63:7","nodeType":"YulBlock","src":"429:63:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:7","nodeType":"YulIdentifier","src":"454:3:7"},{"name":"i","nativeSrc":"459:1:7","nodeType":"YulIdentifier","src":"459:1:7"}],"functionName":{"name":"add","nativeSrc":"450:3:7","nodeType":"YulIdentifier","src":"450:3:7"},"nativeSrc":"450:11:7","nodeType":"YulFunctionCall","src":"450:11:7"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:7","nodeType":"YulIdentifier","src":"473:3:7"},{"name":"i","nativeSrc":"478:1:7","nodeType":"YulIdentifier","src":"478:1:7"}],"functionName":{"name":"add","nativeSrc":"469:3:7","nodeType":"YulIdentifier","src":"469:3:7"},"nativeSrc":"469:11:7","nodeType":"YulFunctionCall","src":"469:11:7"}],"functionName":{"name":"mload","nativeSrc":"463:5:7","nodeType":"YulIdentifier","src":"463:5:7"},"nativeSrc":"463:18:7","nodeType":"YulFunctionCall","src":"463:18:7"}],"functionName":{"name":"mstore","nativeSrc":"443:6:7","nodeType":"YulIdentifier","src":"443:6:7"},"nativeSrc":"443:39:7","nodeType":"YulFunctionCall","src":"443:39:7"},"nativeSrc":"443:39:7","nodeType":"YulExpressionStatement","src":"443:39:7"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:7","nodeType":"YulIdentifier","src":"390:1:7"},{"name":"length","nativeSrc":"393:6:7","nodeType":"YulIdentifier","src":"393:6:7"}],"functionName":{"name":"lt","nativeSrc":"387:2:7","nodeType":"YulIdentifier","src":"387:2:7"},"nativeSrc":"387:13:7","nodeType":"YulFunctionCall","src":"387:13:7"},"nativeSrc":"379:113:7","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:7","nodeType":"YulBlock","src":"401:19:7","statements":[{"nativeSrc":"403:15:7","nodeType":"YulAssignment","src":"403:15:7","value":{"arguments":[{"name":"i","nativeSrc":"412:1:7","nodeType":"YulIdentifier","src":"412:1:7"},{"kind":"number","nativeSrc":"415:2:7","nodeType":"YulLiteral","src":"415:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:7","nodeType":"YulIdentifier","src":"408:3:7"},"nativeSrc":"408:10:7","nodeType":"YulFunctionCall","src":"408:10:7"},"variableNames":[{"name":"i","nativeSrc":"403:1:7","nodeType":"YulIdentifier","src":"403:1:7"}]}]},"pre":{"nativeSrc":"383:3:7","nodeType":"YulBlock","src":"383:3:7","statements":[]},"src":"379:113:7"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:7","nodeType":"YulIdentifier","src":"512:3:7"},{"name":"length","nativeSrc":"517:6:7","nodeType":"YulIdentifier","src":"517:6:7"}],"functionName":{"name":"add","nativeSrc":"508:3:7","nodeType":"YulIdentifier","src":"508:3:7"},"nativeSrc":"508:16:7","nodeType":"YulFunctionCall","src":"508:16:7"},{"kind":"number","nativeSrc":"526:1:7","nodeType":"YulLiteral","src":"526:1:7","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:7","nodeType":"YulIdentifier","src":"501:6:7"},"nativeSrc":"501:27:7","nodeType":"YulFunctionCall","src":"501:27:7"},"nativeSrc":"501:27:7","nodeType":"YulExpressionStatement","src":"501:27:7"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:7","nodeType":"YulTypedName","src":"331:3:7","type":""},{"name":"dst","nativeSrc":"336:3:7","nodeType":"YulTypedName","src":"336:3:7","type":""},{"name":"length","nativeSrc":"341:6:7","nodeType":"YulTypedName","src":"341:6:7","type":""}],"src":"287:248:7"},{"body":{"nativeSrc":"589:54:7","nodeType":"YulBlock","src":"589:54:7","statements":[{"nativeSrc":"599:38:7","nodeType":"YulAssignment","src":"599:38:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:7","nodeType":"YulIdentifier","src":"617:5:7"},{"kind":"number","nativeSrc":"624:2:7","nodeType":"YulLiteral","src":"624:2:7","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:7","nodeType":"YulIdentifier","src":"613:3:7"},"nativeSrc":"613:14:7","nodeType":"YulFunctionCall","src":"613:14:7"},{"arguments":[{"kind":"number","nativeSrc":"633:2:7","nodeType":"YulLiteral","src":"633:2:7","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:7","nodeType":"YulIdentifier","src":"629:3:7"},"nativeSrc":"629:7:7","nodeType":"YulFunctionCall","src":"629:7:7"}],"functionName":{"name":"and","nativeSrc":"609:3:7","nodeType":"YulIdentifier","src":"609:3:7"},"nativeSrc":"609:28:7","nodeType":"YulFunctionCall","src":"609:28:7"},"variableNames":[{"name":"result","nativeSrc":"599:6:7","nodeType":"YulIdentifier","src":"599:6:7"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:7","nodeType":"YulTypedName","src":"572:5:7","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:7","nodeType":"YulTypedName","src":"582:6:7","type":""}],"src":"541:102:7"},{"body":{"nativeSrc":"741:285:7","nodeType":"YulBlock","src":"741:285:7","statements":[{"nativeSrc":"751:53:7","nodeType":"YulVariableDeclaration","src":"751:53:7","value":{"arguments":[{"name":"value","nativeSrc":"798:5:7","nodeType":"YulIdentifier","src":"798:5:7"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:7","nodeType":"YulIdentifier","src":"765:32:7"},"nativeSrc":"765:39:7","nodeType":"YulFunctionCall","src":"765:39:7"},"variables":[{"name":"length","nativeSrc":"755:6:7","nodeType":"YulTypedName","src":"755:6:7","type":""}]},{"nativeSrc":"813:78:7","nodeType":"YulAssignment","src":"813:78:7","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:7","nodeType":"YulIdentifier","src":"879:3:7"},{"name":"length","nativeSrc":"884:6:7","nodeType":"YulIdentifier","src":"884:6:7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:7","nodeType":"YulIdentifier","src":"820:58:7"},"nativeSrc":"820:71:7","nodeType":"YulFunctionCall","src":"820:71:7"},"variableNames":[{"name":"pos","nativeSrc":"813:3:7","nodeType":"YulIdentifier","src":"813:3:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:7","nodeType":"YulIdentifier","src":"939:5:7"},{"kind":"number","nativeSrc":"946:4:7","nodeType":"YulLiteral","src":"946:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:7","nodeType":"YulIdentifier","src":"935:3:7"},"nativeSrc":"935:16:7","nodeType":"YulFunctionCall","src":"935:16:7"},{"name":"pos","nativeSrc":"953:3:7","nodeType":"YulIdentifier","src":"953:3:7"},{"name":"length","nativeSrc":"958:6:7","nodeType":"YulIdentifier","src":"958:6:7"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:7","nodeType":"YulIdentifier","src":"900:34:7"},"nativeSrc":"900:65:7","nodeType":"YulFunctionCall","src":"900:65:7"},"nativeSrc":"900:65:7","nodeType":"YulExpressionStatement","src":"900:65:7"},{"nativeSrc":"974:46:7","nodeType":"YulAssignment","src":"974:46:7","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:7","nodeType":"YulIdentifier","src":"985:3:7"},{"arguments":[{"name":"length","nativeSrc":"1012:6:7","nodeType":"YulIdentifier","src":"1012:6:7"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:7","nodeType":"YulIdentifier","src":"990:21:7"},"nativeSrc":"990:29:7","nodeType":"YulFunctionCall","src":"990:29:7"}],"functionName":{"name":"add","nativeSrc":"981:3:7","nodeType":"YulIdentifier","src":"981:3:7"},"nativeSrc":"981:39:7","nodeType":"YulFunctionCall","src":"981:39:7"},"variableNames":[{"name":"end","nativeSrc":"974:3:7","nodeType":"YulIdentifier","src":"974:3:7"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:7","nodeType":"YulTypedName","src":"722:5:7","type":""},{"name":"pos","nativeSrc":"729:3:7","nodeType":"YulTypedName","src":"729:3:7","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:7","nodeType":"YulTypedName","src":"737:3:7","type":""}],"src":"649:377:7"},{"body":{"nativeSrc":"1150:195:7","nodeType":"YulBlock","src":"1150:195:7","statements":[{"nativeSrc":"1160:26:7","nodeType":"YulAssignment","src":"1160:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:7","nodeType":"YulIdentifier","src":"1172:9:7"},{"kind":"number","nativeSrc":"1183:2:7","nodeType":"YulLiteral","src":"1183:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:7","nodeType":"YulIdentifier","src":"1168:3:7"},"nativeSrc":"1168:18:7","nodeType":"YulFunctionCall","src":"1168:18:7"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:7","nodeType":"YulIdentifier","src":"1160:4:7"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:7","nodeType":"YulIdentifier","src":"1207:9:7"},{"kind":"number","nativeSrc":"1218:1:7","nodeType":"YulLiteral","src":"1218:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:7","nodeType":"YulIdentifier","src":"1203:3:7"},"nativeSrc":"1203:17:7","nodeType":"YulFunctionCall","src":"1203:17:7"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:7","nodeType":"YulIdentifier","src":"1226:4:7"},{"name":"headStart","nativeSrc":"1232:9:7","nodeType":"YulIdentifier","src":"1232:9:7"}],"functionName":{"name":"sub","nativeSrc":"1222:3:7","nodeType":"YulIdentifier","src":"1222:3:7"},"nativeSrc":"1222:20:7","nodeType":"YulFunctionCall","src":"1222:20:7"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:7","nodeType":"YulIdentifier","src":"1196:6:7"},"nativeSrc":"1196:47:7","nodeType":"YulFunctionCall","src":"1196:47:7"},"nativeSrc":"1196:47:7","nodeType":"YulExpressionStatement","src":"1196:47:7"},{"nativeSrc":"1252:86:7","nodeType":"YulAssignment","src":"1252:86:7","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:7","nodeType":"YulIdentifier","src":"1324:6:7"},{"name":"tail","nativeSrc":"1333:4:7","nodeType":"YulIdentifier","src":"1333:4:7"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:7","nodeType":"YulIdentifier","src":"1260:63:7"},"nativeSrc":"1260:78:7","nodeType":"YulFunctionCall","src":"1260:78:7"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:7","nodeType":"YulIdentifier","src":"1252:4:7"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:7","nodeType":"YulTypedName","src":"1122:9:7","type":""},{"name":"value0","nativeSrc":"1134:6:7","nodeType":"YulTypedName","src":"1134:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:7","nodeType":"YulTypedName","src":"1145:4:7","type":""}],"src":"1032:313:7"},{"body":{"nativeSrc":"1391:35:7","nodeType":"YulBlock","src":"1391:35:7","statements":[{"nativeSrc":"1401:19:7","nodeType":"YulAssignment","src":"1401:19:7","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:7","nodeType":"YulLiteral","src":"1417:2:7","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:7","nodeType":"YulIdentifier","src":"1411:5:7"},"nativeSrc":"1411:9:7","nodeType":"YulFunctionCall","src":"1411:9:7"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:7","nodeType":"YulIdentifier","src":"1401:6:7"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:7","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:7","nodeType":"YulTypedName","src":"1384:6:7","type":""}],"src":"1351:75:7"},{"body":{"nativeSrc":"1521:28:7","nodeType":"YulBlock","src":"1521:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:7","nodeType":"YulLiteral","src":"1538:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:7","nodeType":"YulLiteral","src":"1541:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:7","nodeType":"YulIdentifier","src":"1531:6:7"},"nativeSrc":"1531:12:7","nodeType":"YulFunctionCall","src":"1531:12:7"},"nativeSrc":"1531:12:7","nodeType":"YulExpressionStatement","src":"1531:12:7"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:7","nodeType":"YulFunctionDefinition","src":"1432:117:7"},{"body":{"nativeSrc":"1644:28:7","nodeType":"YulBlock","src":"1644:28:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:7","nodeType":"YulLiteral","src":"1661:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:7","nodeType":"YulLiteral","src":"1664:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:7","nodeType":"YulIdentifier","src":"1654:6:7"},"nativeSrc":"1654:12:7","nodeType":"YulFunctionCall","src":"1654:12:7"},"nativeSrc":"1654:12:7","nodeType":"YulExpressionStatement","src":"1654:12:7"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:7","nodeType":"YulFunctionDefinition","src":"1555:117:7"},{"body":{"nativeSrc":"1723:81:7","nodeType":"YulBlock","src":"1723:81:7","statements":[{"nativeSrc":"1733:65:7","nodeType":"YulAssignment","src":"1733:65:7","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:7","nodeType":"YulIdentifier","src":"1748:5:7"},{"kind":"number","nativeSrc":"1755:42:7","nodeType":"YulLiteral","src":"1755:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:7","nodeType":"YulIdentifier","src":"1744:3:7"},"nativeSrc":"1744:54:7","nodeType":"YulFunctionCall","src":"1744:54:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:7","nodeType":"YulIdentifier","src":"1733:7:7"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:7","nodeType":"YulTypedName","src":"1705:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:7","nodeType":"YulTypedName","src":"1715:7:7","type":""}],"src":"1678:126:7"},{"body":{"nativeSrc":"1855:51:7","nodeType":"YulBlock","src":"1855:51:7","statements":[{"nativeSrc":"1865:35:7","nodeType":"YulAssignment","src":"1865:35:7","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:7","nodeType":"YulIdentifier","src":"1894:5:7"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:7","nodeType":"YulIdentifier","src":"1876:17:7"},"nativeSrc":"1876:24:7","nodeType":"YulFunctionCall","src":"1876:24:7"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:7","nodeType":"YulIdentifier","src":"1865:7:7"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:7","nodeType":"YulTypedName","src":"1837:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:7","nodeType":"YulTypedName","src":"1847:7:7","type":""}],"src":"1810:96:7"},{"body":{"nativeSrc":"1955:79:7","nodeType":"YulBlock","src":"1955:79:7","statements":[{"body":{"nativeSrc":"2012:16:7","nodeType":"YulBlock","src":"2012:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:7","nodeType":"YulLiteral","src":"2021:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:7","nodeType":"YulLiteral","src":"2024:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:7","nodeType":"YulIdentifier","src":"2014:6:7"},"nativeSrc":"2014:12:7","nodeType":"YulFunctionCall","src":"2014:12:7"},"nativeSrc":"2014:12:7","nodeType":"YulExpressionStatement","src":"2014:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:7","nodeType":"YulIdentifier","src":"1978:5:7"},{"arguments":[{"name":"value","nativeSrc":"2003:5:7","nodeType":"YulIdentifier","src":"2003:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:7","nodeType":"YulIdentifier","src":"1985:17:7"},"nativeSrc":"1985:24:7","nodeType":"YulFunctionCall","src":"1985:24:7"}],"functionName":{"name":"eq","nativeSrc":"1975:2:7","nodeType":"YulIdentifier","src":"1975:2:7"},"nativeSrc":"1975:35:7","nodeType":"YulFunctionCall","src":"1975:35:7"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:7","nodeType":"YulIdentifier","src":"1968:6:7"},"nativeSrc":"1968:43:7","nodeType":"YulFunctionCall","src":"1968:43:7"},"nativeSrc":"1965:63:7","nodeType":"YulIf","src":"1965:63:7"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:7","nodeType":"YulTypedName","src":"1948:5:7","type":""}],"src":"1912:122:7"},{"body":{"nativeSrc":"2092:87:7","nodeType":"YulBlock","src":"2092:87:7","statements":[{"nativeSrc":"2102:29:7","nodeType":"YulAssignment","src":"2102:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:7","nodeType":"YulIdentifier","src":"2124:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:7","nodeType":"YulIdentifier","src":"2111:12:7"},"nativeSrc":"2111:20:7","nodeType":"YulFunctionCall","src":"2111:20:7"},"variableNames":[{"name":"value","nativeSrc":"2102:5:7","nodeType":"YulIdentifier","src":"2102:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:7","nodeType":"YulIdentifier","src":"2167:5:7"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:7","nodeType":"YulIdentifier","src":"2140:26:7"},"nativeSrc":"2140:33:7","nodeType":"YulFunctionCall","src":"2140:33:7"},"nativeSrc":"2140:33:7","nodeType":"YulExpressionStatement","src":"2140:33:7"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:7","nodeType":"YulTypedName","src":"2070:6:7","type":""},{"name":"end","nativeSrc":"2078:3:7","nodeType":"YulTypedName","src":"2078:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:7","nodeType":"YulTypedName","src":"2086:5:7","type":""}],"src":"2040:139:7"},{"body":{"nativeSrc":"2230:32:7","nodeType":"YulBlock","src":"2230:32:7","statements":[{"nativeSrc":"2240:16:7","nodeType":"YulAssignment","src":"2240:16:7","value":{"name":"value","nativeSrc":"2251:5:7","nodeType":"YulIdentifier","src":"2251:5:7"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:7","nodeType":"YulIdentifier","src":"2240:7:7"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:7","nodeType":"YulTypedName","src":"2212:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:7","nodeType":"YulTypedName","src":"2222:7:7","type":""}],"src":"2185:77:7"},{"body":{"nativeSrc":"2311:79:7","nodeType":"YulBlock","src":"2311:79:7","statements":[{"body":{"nativeSrc":"2368:16:7","nodeType":"YulBlock","src":"2368:16:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:7","nodeType":"YulLiteral","src":"2377:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:7","nodeType":"YulLiteral","src":"2380:1:7","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:7","nodeType":"YulIdentifier","src":"2370:6:7"},"nativeSrc":"2370:12:7","nodeType":"YulFunctionCall","src":"2370:12:7"},"nativeSrc":"2370:12:7","nodeType":"YulExpressionStatement","src":"2370:12:7"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:7","nodeType":"YulIdentifier","src":"2334:5:7"},{"arguments":[{"name":"value","nativeSrc":"2359:5:7","nodeType":"YulIdentifier","src":"2359:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:7","nodeType":"YulIdentifier","src":"2341:17:7"},"nativeSrc":"2341:24:7","nodeType":"YulFunctionCall","src":"2341:24:7"}],"functionName":{"name":"eq","nativeSrc":"2331:2:7","nodeType":"YulIdentifier","src":"2331:2:7"},"nativeSrc":"2331:35:7","nodeType":"YulFunctionCall","src":"2331:35:7"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:7","nodeType":"YulIdentifier","src":"2324:6:7"},"nativeSrc":"2324:43:7","nodeType":"YulFunctionCall","src":"2324:43:7"},"nativeSrc":"2321:63:7","nodeType":"YulIf","src":"2321:63:7"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:7","nodeType":"YulTypedName","src":"2304:5:7","type":""}],"src":"2268:122:7"},{"body":{"nativeSrc":"2448:87:7","nodeType":"YulBlock","src":"2448:87:7","statements":[{"nativeSrc":"2458:29:7","nodeType":"YulAssignment","src":"2458:29:7","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:7","nodeType":"YulIdentifier","src":"2480:6:7"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:7","nodeType":"YulIdentifier","src":"2467:12:7"},"nativeSrc":"2467:20:7","nodeType":"YulFunctionCall","src":"2467:20:7"},"variableNames":[{"name":"value","nativeSrc":"2458:5:7","nodeType":"YulIdentifier","src":"2458:5:7"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:7","nodeType":"YulIdentifier","src":"2523:5:7"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:7","nodeType":"YulIdentifier","src":"2496:26:7"},"nativeSrc":"2496:33:7","nodeType":"YulFunctionCall","src":"2496:33:7"},"nativeSrc":"2496:33:7","nodeType":"YulExpressionStatement","src":"2496:33:7"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:7","nodeType":"YulTypedName","src":"2426:6:7","type":""},{"name":"end","nativeSrc":"2434:3:7","nodeType":"YulTypedName","src":"2434:3:7","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:7","nodeType":"YulTypedName","src":"2442:5:7","type":""}],"src":"2396:139:7"},{"body":{"nativeSrc":"2624:391:7","nodeType":"YulBlock","src":"2624:391:7","statements":[{"body":{"nativeSrc":"2670:83:7","nodeType":"YulBlock","src":"2670:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:7","nodeType":"YulIdentifier","src":"2672:77:7"},"nativeSrc":"2672:79:7","nodeType":"YulFunctionCall","src":"2672:79:7"},"nativeSrc":"2672:79:7","nodeType":"YulExpressionStatement","src":"2672:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:7","nodeType":"YulIdentifier","src":"2645:7:7"},{"name":"headStart","nativeSrc":"2654:9:7","nodeType":"YulIdentifier","src":"2654:9:7"}],"functionName":{"name":"sub","nativeSrc":"2641:3:7","nodeType":"YulIdentifier","src":"2641:3:7"},"nativeSrc":"2641:23:7","nodeType":"YulFunctionCall","src":"2641:23:7"},{"kind":"number","nativeSrc":"2666:2:7","nodeType":"YulLiteral","src":"2666:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:7","nodeType":"YulIdentifier","src":"2637:3:7"},"nativeSrc":"2637:32:7","nodeType":"YulFunctionCall","src":"2637:32:7"},"nativeSrc":"2634:119:7","nodeType":"YulIf","src":"2634:119:7"},{"nativeSrc":"2763:117:7","nodeType":"YulBlock","src":"2763:117:7","statements":[{"nativeSrc":"2778:15:7","nodeType":"YulVariableDeclaration","src":"2778:15:7","value":{"kind":"number","nativeSrc":"2792:1:7","nodeType":"YulLiteral","src":"2792:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:7","nodeType":"YulTypedName","src":"2782:6:7","type":""}]},{"nativeSrc":"2807:63:7","nodeType":"YulAssignment","src":"2807:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:7","nodeType":"YulIdentifier","src":"2842:9:7"},{"name":"offset","nativeSrc":"2853:6:7","nodeType":"YulIdentifier","src":"2853:6:7"}],"functionName":{"name":"add","nativeSrc":"2838:3:7","nodeType":"YulIdentifier","src":"2838:3:7"},"nativeSrc":"2838:22:7","nodeType":"YulFunctionCall","src":"2838:22:7"},{"name":"dataEnd","nativeSrc":"2862:7:7","nodeType":"YulIdentifier","src":"2862:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:7","nodeType":"YulIdentifier","src":"2817:20:7"},"nativeSrc":"2817:53:7","nodeType":"YulFunctionCall","src":"2817:53:7"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:7","nodeType":"YulIdentifier","src":"2807:6:7"}]}]},{"nativeSrc":"2890:118:7","nodeType":"YulBlock","src":"2890:118:7","statements":[{"nativeSrc":"2905:16:7","nodeType":"YulVariableDeclaration","src":"2905:16:7","value":{"kind":"number","nativeSrc":"2919:2:7","nodeType":"YulLiteral","src":"2919:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:7","nodeType":"YulTypedName","src":"2909:6:7","type":""}]},{"nativeSrc":"2935:63:7","nodeType":"YulAssignment","src":"2935:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:7","nodeType":"YulIdentifier","src":"2970:9:7"},{"name":"offset","nativeSrc":"2981:6:7","nodeType":"YulIdentifier","src":"2981:6:7"}],"functionName":{"name":"add","nativeSrc":"2966:3:7","nodeType":"YulIdentifier","src":"2966:3:7"},"nativeSrc":"2966:22:7","nodeType":"YulFunctionCall","src":"2966:22:7"},{"name":"dataEnd","nativeSrc":"2990:7:7","nodeType":"YulIdentifier","src":"2990:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:7","nodeType":"YulIdentifier","src":"2945:20:7"},"nativeSrc":"2945:53:7","nodeType":"YulFunctionCall","src":"2945:53:7"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:7","nodeType":"YulIdentifier","src":"2935:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:7","nodeType":"YulTypedName","src":"2586:9:7","type":""},{"name":"dataEnd","nativeSrc":"2597:7:7","nodeType":"YulTypedName","src":"2597:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:7","nodeType":"YulTypedName","src":"2609:6:7","type":""},{"name":"value1","nativeSrc":"2617:6:7","nodeType":"YulTypedName","src":"2617:6:7","type":""}],"src":"2541:474:7"},{"body":{"nativeSrc":"3063:48:7","nodeType":"YulBlock","src":"3063:48:7","statements":[{"nativeSrc":"3073:32:7","nodeType":"YulAssignment","src":"3073:32:7","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:7","nodeType":"YulIdentifier","src":"3098:5:7"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:7","nodeType":"YulIdentifier","src":"3091:6:7"},"nativeSrc":"3091:13:7","nodeType":"YulFunctionCall","src":"3091:13:7"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:7","nodeType":"YulIdentifier","src":"3084:6:7"},"nativeSrc":"3084:21:7","nodeType":"YulFunctionCall","src":"3084:21:7"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:7","nodeType":"YulIdentifier","src":"3073:7:7"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:7","nodeType":"YulTypedName","src":"3045:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:7","nodeType":"YulTypedName","src":"3055:7:7","type":""}],"src":"3021:90:7"},{"body":{"nativeSrc":"3176:50:7","nodeType":"YulBlock","src":"3176:50:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:7","nodeType":"YulIdentifier","src":"3193:3:7"},{"arguments":[{"name":"value","nativeSrc":"3213:5:7","nodeType":"YulIdentifier","src":"3213:5:7"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:7","nodeType":"YulIdentifier","src":"3198:14:7"},"nativeSrc":"3198:21:7","nodeType":"YulFunctionCall","src":"3198:21:7"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:7","nodeType":"YulIdentifier","src":"3186:6:7"},"nativeSrc":"3186:34:7","nodeType":"YulFunctionCall","src":"3186:34:7"},"nativeSrc":"3186:34:7","nodeType":"YulExpressionStatement","src":"3186:34:7"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:7","nodeType":"YulTypedName","src":"3164:5:7","type":""},{"name":"pos","nativeSrc":"3171:3:7","nodeType":"YulTypedName","src":"3171:3:7","type":""}],"src":"3117:109:7"},{"body":{"nativeSrc":"3324:118:7","nodeType":"YulBlock","src":"3324:118:7","statements":[{"nativeSrc":"3334:26:7","nodeType":"YulAssignment","src":"3334:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:7","nodeType":"YulIdentifier","src":"3346:9:7"},{"kind":"number","nativeSrc":"3357:2:7","nodeType":"YulLiteral","src":"3357:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:7","nodeType":"YulIdentifier","src":"3342:3:7"},"nativeSrc":"3342:18:7","nodeType":"YulFunctionCall","src":"3342:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:7","nodeType":"YulIdentifier","src":"3334:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:7","nodeType":"YulIdentifier","src":"3408:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:7","nodeType":"YulIdentifier","src":"3421:9:7"},{"kind":"number","nativeSrc":"3432:1:7","nodeType":"YulLiteral","src":"3432:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:7","nodeType":"YulIdentifier","src":"3417:3:7"},"nativeSrc":"3417:17:7","nodeType":"YulFunctionCall","src":"3417:17:7"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:7","nodeType":"YulIdentifier","src":"3370:37:7"},"nativeSrc":"3370:65:7","nodeType":"YulFunctionCall","src":"3370:65:7"},"nativeSrc":"3370:65:7","nodeType":"YulExpressionStatement","src":"3370:65:7"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:7","nodeType":"YulTypedName","src":"3296:9:7","type":""},{"name":"value0","nativeSrc":"3308:6:7","nodeType":"YulTypedName","src":"3308:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:7","nodeType":"YulTypedName","src":"3319:4:7","type":""}],"src":"3232:210:7"},{"body":{"nativeSrc":"3513:53:7","nodeType":"YulBlock","src":"3513:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:7","nodeType":"YulIdentifier","src":"3530:3:7"},{"arguments":[{"name":"value","nativeSrc":"3553:5:7","nodeType":"YulIdentifier","src":"3553:5:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:7","nodeType":"YulIdentifier","src":"3535:17:7"},"nativeSrc":"3535:24:7","nodeType":"YulFunctionCall","src":"3535:24:7"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:7","nodeType":"YulIdentifier","src":"3523:6:7"},"nativeSrc":"3523:37:7","nodeType":"YulFunctionCall","src":"3523:37:7"},"nativeSrc":"3523:37:7","nodeType":"YulExpressionStatement","src":"3523:37:7"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:7","nodeType":"YulTypedName","src":"3501:5:7","type":""},{"name":"pos","nativeSrc":"3508:3:7","nodeType":"YulTypedName","src":"3508:3:7","type":""}],"src":"3448:118:7"},{"body":{"nativeSrc":"3670:124:7","nodeType":"YulBlock","src":"3670:124:7","statements":[{"nativeSrc":"3680:26:7","nodeType":"YulAssignment","src":"3680:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:7","nodeType":"YulIdentifier","src":"3692:9:7"},{"kind":"number","nativeSrc":"3703:2:7","nodeType":"YulLiteral","src":"3703:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:7","nodeType":"YulIdentifier","src":"3688:3:7"},"nativeSrc":"3688:18:7","nodeType":"YulFunctionCall","src":"3688:18:7"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:7","nodeType":"YulIdentifier","src":"3680:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:7","nodeType":"YulIdentifier","src":"3760:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:7","nodeType":"YulIdentifier","src":"3773:9:7"},{"kind":"number","nativeSrc":"3784:1:7","nodeType":"YulLiteral","src":"3784:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:7","nodeType":"YulIdentifier","src":"3769:3:7"},"nativeSrc":"3769:17:7","nodeType":"YulFunctionCall","src":"3769:17:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:7","nodeType":"YulIdentifier","src":"3716:43:7"},"nativeSrc":"3716:71:7","nodeType":"YulFunctionCall","src":"3716:71:7"},"nativeSrc":"3716:71:7","nodeType":"YulExpressionStatement","src":"3716:71:7"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:7","nodeType":"YulTypedName","src":"3642:9:7","type":""},{"name":"value0","nativeSrc":"3654:6:7","nodeType":"YulTypedName","src":"3654:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:7","nodeType":"YulTypedName","src":"3665:4:7","type":""}],"src":"3572:222:7"},{"body":{"nativeSrc":"3900:519:7","nodeType":"YulBlock","src":"3900:519:7","statements":[{"body":{"nativeSrc":"3946:83:7","nodeType":"YulBlock","src":"3946:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:7","nodeType":"YulIdentifier","src":"3948:77:7"},"nativeSrc":"3948:79:7","nodeType":"YulFunctionCall","src":"3948:79:7"},"nativeSrc":"3948:79:7","nodeType":"YulExpressionStatement","src":"3948:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:7","nodeType":"YulIdentifier","src":"3921:7:7"},{"name":"headStart","nativeSrc":"3930:9:7","nodeType":"YulIdentifier","src":"3930:9:7"}],"functionName":{"name":"sub","nativeSrc":"3917:3:7","nodeType":"YulIdentifier","src":"3917:3:7"},"nativeSrc":"3917:23:7","nodeType":"YulFunctionCall","src":"3917:23:7"},{"kind":"number","nativeSrc":"3942:2:7","nodeType":"YulLiteral","src":"3942:2:7","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:7","nodeType":"YulIdentifier","src":"3913:3:7"},"nativeSrc":"3913:32:7","nodeType":"YulFunctionCall","src":"3913:32:7"},"nativeSrc":"3910:119:7","nodeType":"YulIf","src":"3910:119:7"},{"nativeSrc":"4039:117:7","nodeType":"YulBlock","src":"4039:117:7","statements":[{"nativeSrc":"4054:15:7","nodeType":"YulVariableDeclaration","src":"4054:15:7","value":{"kind":"number","nativeSrc":"4068:1:7","nodeType":"YulLiteral","src":"4068:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:7","nodeType":"YulTypedName","src":"4058:6:7","type":""}]},{"nativeSrc":"4083:63:7","nodeType":"YulAssignment","src":"4083:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:7","nodeType":"YulIdentifier","src":"4118:9:7"},{"name":"offset","nativeSrc":"4129:6:7","nodeType":"YulIdentifier","src":"4129:6:7"}],"functionName":{"name":"add","nativeSrc":"4114:3:7","nodeType":"YulIdentifier","src":"4114:3:7"},"nativeSrc":"4114:22:7","nodeType":"YulFunctionCall","src":"4114:22:7"},{"name":"dataEnd","nativeSrc":"4138:7:7","nodeType":"YulIdentifier","src":"4138:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:7","nodeType":"YulIdentifier","src":"4093:20:7"},"nativeSrc":"4093:53:7","nodeType":"YulFunctionCall","src":"4093:53:7"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:7","nodeType":"YulIdentifier","src":"4083:6:7"}]}]},{"nativeSrc":"4166:118:7","nodeType":"YulBlock","src":"4166:118:7","statements":[{"nativeSrc":"4181:16:7","nodeType":"YulVariableDeclaration","src":"4181:16:7","value":{"kind":"number","nativeSrc":"4195:2:7","nodeType":"YulLiteral","src":"4195:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:7","nodeType":"YulTypedName","src":"4185:6:7","type":""}]},{"nativeSrc":"4211:63:7","nodeType":"YulAssignment","src":"4211:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:7","nodeType":"YulIdentifier","src":"4246:9:7"},{"name":"offset","nativeSrc":"4257:6:7","nodeType":"YulIdentifier","src":"4257:6:7"}],"functionName":{"name":"add","nativeSrc":"4242:3:7","nodeType":"YulIdentifier","src":"4242:3:7"},"nativeSrc":"4242:22:7","nodeType":"YulFunctionCall","src":"4242:22:7"},{"name":"dataEnd","nativeSrc":"4266:7:7","nodeType":"YulIdentifier","src":"4266:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:7","nodeType":"YulIdentifier","src":"4221:20:7"},"nativeSrc":"4221:53:7","nodeType":"YulFunctionCall","src":"4221:53:7"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:7","nodeType":"YulIdentifier","src":"4211:6:7"}]}]},{"nativeSrc":"4294:118:7","nodeType":"YulBlock","src":"4294:118:7","statements":[{"nativeSrc":"4309:16:7","nodeType":"YulVariableDeclaration","src":"4309:16:7","value":{"kind":"number","nativeSrc":"4323:2:7","nodeType":"YulLiteral","src":"4323:2:7","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:7","nodeType":"YulTypedName","src":"4313:6:7","type":""}]},{"nativeSrc":"4339:63:7","nodeType":"YulAssignment","src":"4339:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:7","nodeType":"YulIdentifier","src":"4374:9:7"},{"name":"offset","nativeSrc":"4385:6:7","nodeType":"YulIdentifier","src":"4385:6:7"}],"functionName":{"name":"add","nativeSrc":"4370:3:7","nodeType":"YulIdentifier","src":"4370:3:7"},"nativeSrc":"4370:22:7","nodeType":"YulFunctionCall","src":"4370:22:7"},{"name":"dataEnd","nativeSrc":"4394:7:7","nodeType":"YulIdentifier","src":"4394:7:7"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:7","nodeType":"YulIdentifier","src":"4349:20:7"},"nativeSrc":"4349:53:7","nodeType":"YulFunctionCall","src":"4349:53:7"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:7","nodeType":"YulIdentifier","src":"4339:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:7","nodeType":"YulTypedName","src":"3854:9:7","type":""},{"name":"dataEnd","nativeSrc":"3865:7:7","nodeType":"YulTypedName","src":"3865:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:7","nodeType":"YulTypedName","src":"3877:6:7","type":""},{"name":"value1","nativeSrc":"3885:6:7","nodeType":"YulTypedName","src":"3885:6:7","type":""},{"name":"value2","nativeSrc":"3893:6:7","nodeType":"YulTypedName","src":"3893:6:7","type":""}],"src":"3800:619:7"},{"body":{"nativeSrc":"4468:43:7","nodeType":"YulBlock","src":"4468:43:7","statements":[{"nativeSrc":"4478:27:7","nodeType":"YulAssignment","src":"4478:27:7","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:7","nodeType":"YulIdentifier","src":"4493:5:7"},{"kind":"number","nativeSrc":"4500:4:7","nodeType":"YulLiteral","src":"4500:4:7","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:7","nodeType":"YulIdentifier","src":"4489:3:7"},"nativeSrc":"4489:16:7","nodeType":"YulFunctionCall","src":"4489:16:7"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:7","nodeType":"YulIdentifier","src":"4478:7:7"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:7","nodeType":"YulTypedName","src":"4450:5:7","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:7","nodeType":"YulTypedName","src":"4460:7:7","type":""}],"src":"4425:86:7"},{"body":{"nativeSrc":"4578:51:7","nodeType":"YulBlock","src":"4578:51:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:7","nodeType":"YulIdentifier","src":"4595:3:7"},{"arguments":[{"name":"value","nativeSrc":"4616:5:7","nodeType":"YulIdentifier","src":"4616:5:7"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:7","nodeType":"YulIdentifier","src":"4600:15:7"},"nativeSrc":"4600:22:7","nodeType":"YulFunctionCall","src":"4600:22:7"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:7","nodeType":"YulIdentifier","src":"4588:6:7"},"nativeSrc":"4588:35:7","nodeType":"YulFunctionCall","src":"4588:35:7"},"nativeSrc":"4588:35:7","nodeType":"YulExpressionStatement","src":"4588:35:7"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:7","nodeType":"YulTypedName","src":"4566:5:7","type":""},{"name":"pos","nativeSrc":"4573:3:7","nodeType":"YulTypedName","src":"4573:3:7","type":""}],"src":"4517:112:7"},{"body":{"nativeSrc":"4729:120:7","nodeType":"YulBlock","src":"4729:120:7","statements":[{"nativeSrc":"4739:26:7","nodeType":"YulAssignment","src":"4739:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:7","nodeType":"YulIdentifier","src":"4751:9:7"},{"kind":"number","nativeSrc":"4762:2:7","nodeType":"YulLiteral","src":"4762:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:7","nodeType":"YulIdentifier","src":"4747:3:7"},"nativeSrc":"4747:18:7","nodeType":"YulFunctionCall","src":"4747:18:7"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:7","nodeType":"YulIdentifier","src":"4739:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:7","nodeType":"YulIdentifier","src":"4815:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:7","nodeType":"YulIdentifier","src":"4828:9:7"},{"kind":"number","nativeSrc":"4839:1:7","nodeType":"YulLiteral","src":"4839:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:7","nodeType":"YulIdentifier","src":"4824:3:7"},"nativeSrc":"4824:17:7","nodeType":"YulFunctionCall","src":"4824:17:7"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:7","nodeType":"YulIdentifier","src":"4775:39:7"},"nativeSrc":"4775:67:7","nodeType":"YulFunctionCall","src":"4775:67:7"},"nativeSrc":"4775:67:7","nodeType":"YulExpressionStatement","src":"4775:67:7"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:7","nodeType":"YulTypedName","src":"4701:9:7","type":""},{"name":"value0","nativeSrc":"4713:6:7","nodeType":"YulTypedName","src":"4713:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:7","nodeType":"YulTypedName","src":"4724:4:7","type":""}],"src":"4635:214:7"},{"body":{"nativeSrc":"4921:263:7","nodeType":"YulBlock","src":"4921:263:7","statements":[{"body":{"nativeSrc":"4967:83:7","nodeType":"YulBlock","src":"4967:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:7","nodeType":"YulIdentifier","src":"4969:77:7"},"nativeSrc":"4969:79:7","nodeType":"YulFunctionCall","src":"4969:79:7"},"nativeSrc":"4969:79:7","nodeType":"YulExpressionStatement","src":"4969:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:7","nodeType":"YulIdentifier","src":"4942:7:7"},{"name":"headStart","nativeSrc":"4951:9:7","nodeType":"YulIdentifier","src":"4951:9:7"}],"functionName":{"name":"sub","nativeSrc":"4938:3:7","nodeType":"YulIdentifier","src":"4938:3:7"},"nativeSrc":"4938:23:7","nodeType":"YulFunctionCall","src":"4938:23:7"},{"kind":"number","nativeSrc":"4963:2:7","nodeType":"YulLiteral","src":"4963:2:7","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:7","nodeType":"YulIdentifier","src":"4934:3:7"},"nativeSrc":"4934:32:7","nodeType":"YulFunctionCall","src":"4934:32:7"},"nativeSrc":"4931:119:7","nodeType":"YulIf","src":"4931:119:7"},{"nativeSrc":"5060:117:7","nodeType":"YulBlock","src":"5060:117:7","statements":[{"nativeSrc":"5075:15:7","nodeType":"YulVariableDeclaration","src":"5075:15:7","value":{"kind":"number","nativeSrc":"5089:1:7","nodeType":"YulLiteral","src":"5089:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:7","nodeType":"YulTypedName","src":"5079:6:7","type":""}]},{"nativeSrc":"5104:63:7","nodeType":"YulAssignment","src":"5104:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:7","nodeType":"YulIdentifier","src":"5139:9:7"},{"name":"offset","nativeSrc":"5150:6:7","nodeType":"YulIdentifier","src":"5150:6:7"}],"functionName":{"name":"add","nativeSrc":"5135:3:7","nodeType":"YulIdentifier","src":"5135:3:7"},"nativeSrc":"5135:22:7","nodeType":"YulFunctionCall","src":"5135:22:7"},{"name":"dataEnd","nativeSrc":"5159:7:7","nodeType":"YulIdentifier","src":"5159:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5114:20:7","nodeType":"YulIdentifier","src":"5114:20:7"},"nativeSrc":"5114:53:7","nodeType":"YulFunctionCall","src":"5114:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:7","nodeType":"YulIdentifier","src":"5104:6:7"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"4855:329:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:7","nodeType":"YulTypedName","src":"4891:9:7","type":""},{"name":"dataEnd","nativeSrc":"4902:7:7","nodeType":"YulTypedName","src":"4902:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:7","nodeType":"YulTypedName","src":"4914:6:7","type":""}],"src":"4855:329:7"},{"body":{"nativeSrc":"5273:391:7","nodeType":"YulBlock","src":"5273:391:7","statements":[{"body":{"nativeSrc":"5319:83:7","nodeType":"YulBlock","src":"5319:83:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5321:77:7","nodeType":"YulIdentifier","src":"5321:77:7"},"nativeSrc":"5321:79:7","nodeType":"YulFunctionCall","src":"5321:79:7"},"nativeSrc":"5321:79:7","nodeType":"YulExpressionStatement","src":"5321:79:7"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5294:7:7","nodeType":"YulIdentifier","src":"5294:7:7"},{"name":"headStart","nativeSrc":"5303:9:7","nodeType":"YulIdentifier","src":"5303:9:7"}],"functionName":{"name":"sub","nativeSrc":"5290:3:7","nodeType":"YulIdentifier","src":"5290:3:7"},"nativeSrc":"5290:23:7","nodeType":"YulFunctionCall","src":"5290:23:7"},{"kind":"number","nativeSrc":"5315:2:7","nodeType":"YulLiteral","src":"5315:2:7","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5286:3:7","nodeType":"YulIdentifier","src":"5286:3:7"},"nativeSrc":"5286:32:7","nodeType":"YulFunctionCall","src":"5286:32:7"},"nativeSrc":"5283:119:7","nodeType":"YulIf","src":"5283:119:7"},{"nativeSrc":"5412:117:7","nodeType":"YulBlock","src":"5412:117:7","statements":[{"nativeSrc":"5427:15:7","nodeType":"YulVariableDeclaration","src":"5427:15:7","value":{"kind":"number","nativeSrc":"5441:1:7","nodeType":"YulLiteral","src":"5441:1:7","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5431:6:7","nodeType":"YulTypedName","src":"5431:6:7","type":""}]},{"nativeSrc":"5456:63:7","nodeType":"YulAssignment","src":"5456:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5491:9:7","nodeType":"YulIdentifier","src":"5491:9:7"},{"name":"offset","nativeSrc":"5502:6:7","nodeType":"YulIdentifier","src":"5502:6:7"}],"functionName":{"name":"add","nativeSrc":"5487:3:7","nodeType":"YulIdentifier","src":"5487:3:7"},"nativeSrc":"5487:22:7","nodeType":"YulFunctionCall","src":"5487:22:7"},{"name":"dataEnd","nativeSrc":"5511:7:7","nodeType":"YulIdentifier","src":"5511:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5466:20:7","nodeType":"YulIdentifier","src":"5466:20:7"},"nativeSrc":"5466:53:7","nodeType":"YulFunctionCall","src":"5466:53:7"},"variableNames":[{"name":"value0","nativeSrc":"5456:6:7","nodeType":"YulIdentifier","src":"5456:6:7"}]}]},{"nativeSrc":"5539:118:7","nodeType":"YulBlock","src":"5539:118:7","statements":[{"nativeSrc":"5554:16:7","nodeType":"YulVariableDeclaration","src":"5554:16:7","value":{"kind":"number","nativeSrc":"5568:2:7","nodeType":"YulLiteral","src":"5568:2:7","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5558:6:7","nodeType":"YulTypedName","src":"5558:6:7","type":""}]},{"nativeSrc":"5584:63:7","nodeType":"YulAssignment","src":"5584:63:7","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5619:9:7","nodeType":"YulIdentifier","src":"5619:9:7"},{"name":"offset","nativeSrc":"5630:6:7","nodeType":"YulIdentifier","src":"5630:6:7"}],"functionName":{"name":"add","nativeSrc":"5615:3:7","nodeType":"YulIdentifier","src":"5615:3:7"},"nativeSrc":"5615:22:7","nodeType":"YulFunctionCall","src":"5615:22:7"},{"name":"dataEnd","nativeSrc":"5639:7:7","nodeType":"YulIdentifier","src":"5639:7:7"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5594:20:7","nodeType":"YulIdentifier","src":"5594:20:7"},"nativeSrc":"5594:53:7","nodeType":"YulFunctionCall","src":"5594:53:7"},"variableNames":[{"name":"value1","nativeSrc":"5584:6:7","nodeType":"YulIdentifier","src":"5584:6:7"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5190:474:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5235:9:7","nodeType":"YulTypedName","src":"5235:9:7","type":""},{"name":"dataEnd","nativeSrc":"5246:7:7","nodeType":"YulTypedName","src":"5246:7:7","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5258:6:7","nodeType":"YulTypedName","src":"5258:6:7","type":""},{"name":"value1","nativeSrc":"5266:6:7","nodeType":"YulTypedName","src":"5266:6:7","type":""}],"src":"5190:474:7"},{"body":{"nativeSrc":"5698:152:7","nodeType":"YulBlock","src":"5698:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5715:1:7","nodeType":"YulLiteral","src":"5715:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5718:77:7","nodeType":"YulLiteral","src":"5718:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5708:6:7","nodeType":"YulIdentifier","src":"5708:6:7"},"nativeSrc":"5708:88:7","nodeType":"YulFunctionCall","src":"5708:88:7"},"nativeSrc":"5708:88:7","nodeType":"YulExpressionStatement","src":"5708:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5812:1:7","nodeType":"YulLiteral","src":"5812:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"5815:4:7","nodeType":"YulLiteral","src":"5815:4:7","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5805:6:7","nodeType":"YulIdentifier","src":"5805:6:7"},"nativeSrc":"5805:15:7","nodeType":"YulFunctionCall","src":"5805:15:7"},"nativeSrc":"5805:15:7","nodeType":"YulExpressionStatement","src":"5805:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5836:1:7","nodeType":"YulLiteral","src":"5836:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"5839:4:7","nodeType":"YulLiteral","src":"5839:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5829:6:7","nodeType":"YulIdentifier","src":"5829:6:7"},"nativeSrc":"5829:15:7","nodeType":"YulFunctionCall","src":"5829:15:7"},"nativeSrc":"5829:15:7","nodeType":"YulExpressionStatement","src":"5829:15:7"}]},"name":"panic_error_0x22","nativeSrc":"5670:180:7","nodeType":"YulFunctionDefinition","src":"5670:180:7"},{"body":{"nativeSrc":"5907:269:7","nodeType":"YulBlock","src":"5907:269:7","statements":[{"nativeSrc":"5917:22:7","nodeType":"YulAssignment","src":"5917:22:7","value":{"arguments":[{"name":"data","nativeSrc":"5931:4:7","nodeType":"YulIdentifier","src":"5931:4:7"},{"kind":"number","nativeSrc":"5937:1:7","nodeType":"YulLiteral","src":"5937:1:7","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"5927:3:7","nodeType":"YulIdentifier","src":"5927:3:7"},"nativeSrc":"5927:12:7","nodeType":"YulFunctionCall","src":"5927:12:7"},"variableNames":[{"name":"length","nativeSrc":"5917:6:7","nodeType":"YulIdentifier","src":"5917:6:7"}]},{"nativeSrc":"5948:38:7","nodeType":"YulVariableDeclaration","src":"5948:38:7","value":{"arguments":[{"name":"data","nativeSrc":"5978:4:7","nodeType":"YulIdentifier","src":"5978:4:7"},{"kind":"number","nativeSrc":"5984:1:7","nodeType":"YulLiteral","src":"5984:1:7","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5974:3:7","nodeType":"YulIdentifier","src":"5974:3:7"},"nativeSrc":"5974:12:7","nodeType":"YulFunctionCall","src":"5974:12:7"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5952:18:7","nodeType":"YulTypedName","src":"5952:18:7","type":""}]},{"body":{"nativeSrc":"6025:51:7","nodeType":"YulBlock","src":"6025:51:7","statements":[{"nativeSrc":"6039:27:7","nodeType":"YulAssignment","src":"6039:27:7","value":{"arguments":[{"name":"length","nativeSrc":"6053:6:7","nodeType":"YulIdentifier","src":"6053:6:7"},{"kind":"number","nativeSrc":"6061:4:7","nodeType":"YulLiteral","src":"6061:4:7","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6049:3:7","nodeType":"YulIdentifier","src":"6049:3:7"},"nativeSrc":"6049:17:7","nodeType":"YulFunctionCall","src":"6049:17:7"},"variableNames":[{"name":"length","nativeSrc":"6039:6:7","nodeType":"YulIdentifier","src":"6039:6:7"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6005:18:7","nodeType":"YulIdentifier","src":"6005:18:7"}],"functionName":{"name":"iszero","nativeSrc":"5998:6:7","nodeType":"YulIdentifier","src":"5998:6:7"},"nativeSrc":"5998:26:7","nodeType":"YulFunctionCall","src":"5998:26:7"},"nativeSrc":"5995:81:7","nodeType":"YulIf","src":"5995:81:7"},{"body":{"nativeSrc":"6128:42:7","nodeType":"YulBlock","src":"6128:42:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6142:16:7","nodeType":"YulIdentifier","src":"6142:16:7"},"nativeSrc":"6142:18:7","nodeType":"YulFunctionCall","src":"6142:18:7"},"nativeSrc":"6142:18:7","nodeType":"YulExpressionStatement","src":"6142:18:7"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6092:18:7","nodeType":"YulIdentifier","src":"6092:18:7"},{"arguments":[{"name":"length","nativeSrc":"6115:6:7","nodeType":"YulIdentifier","src":"6115:6:7"},{"kind":"number","nativeSrc":"6123:2:7","nodeType":"YulLiteral","src":"6123:2:7","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6112:2:7","nodeType":"YulIdentifier","src":"6112:2:7"},"nativeSrc":"6112:14:7","nodeType":"YulFunctionCall","src":"6112:14:7"}],"functionName":{"name":"eq","nativeSrc":"6089:2:7","nodeType":"YulIdentifier","src":"6089:2:7"},"nativeSrc":"6089:38:7","nodeType":"YulFunctionCall","src":"6089:38:7"},"nativeSrc":"6086:84:7","nodeType":"YulIf","src":"6086:84:7"}]},"name":"extract_byte_array_length","nativeSrc":"5856:320:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5891:4:7","nodeType":"YulTypedName","src":"5891:4:7","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5900:6:7","nodeType":"YulTypedName","src":"5900:6:7","type":""}],"src":"5856:320:7"},{"body":{"nativeSrc":"6247:53:7","nodeType":"YulBlock","src":"6247:53:7","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6264:3:7","nodeType":"YulIdentifier","src":"6264:3:7"},{"arguments":[{"name":"value","nativeSrc":"6287:5:7","nodeType":"YulIdentifier","src":"6287:5:7"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6269:17:7","nodeType":"YulIdentifier","src":"6269:17:7"},"nativeSrc":"6269:24:7","nodeType":"YulFunctionCall","src":"6269:24:7"}],"functionName":{"name":"mstore","nativeSrc":"6257:6:7","nodeType":"YulIdentifier","src":"6257:6:7"},"nativeSrc":"6257:37:7","nodeType":"YulFunctionCall","src":"6257:37:7"},"nativeSrc":"6257:37:7","nodeType":"YulExpressionStatement","src":"6257:37:7"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6182:118:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6235:5:7","nodeType":"YulTypedName","src":"6235:5:7","type":""},{"name":"pos","nativeSrc":"6242:3:7","nodeType":"YulTypedName","src":"6242:3:7","type":""}],"src":"6182:118:7"},{"body":{"nativeSrc":"6460:288:7","nodeType":"YulBlock","src":"6460:288:7","statements":[{"nativeSrc":"6470:26:7","nodeType":"YulAssignment","src":"6470:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6482:9:7","nodeType":"YulIdentifier","src":"6482:9:7"},{"kind":"number","nativeSrc":"6493:2:7","nodeType":"YulLiteral","src":"6493:2:7","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6478:3:7","nodeType":"YulIdentifier","src":"6478:3:7"},"nativeSrc":"6478:18:7","nodeType":"YulFunctionCall","src":"6478:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6470:4:7","nodeType":"YulIdentifier","src":"6470:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6550:6:7","nodeType":"YulIdentifier","src":"6550:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6563:9:7","nodeType":"YulIdentifier","src":"6563:9:7"},{"kind":"number","nativeSrc":"6574:1:7","nodeType":"YulLiteral","src":"6574:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6559:3:7","nodeType":"YulIdentifier","src":"6559:3:7"},"nativeSrc":"6559:17:7","nodeType":"YulFunctionCall","src":"6559:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6506:43:7","nodeType":"YulIdentifier","src":"6506:43:7"},"nativeSrc":"6506:71:7","nodeType":"YulFunctionCall","src":"6506:71:7"},"nativeSrc":"6506:71:7","nodeType":"YulExpressionStatement","src":"6506:71:7"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6631:6:7","nodeType":"YulIdentifier","src":"6631:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6644:9:7","nodeType":"YulIdentifier","src":"6644:9:7"},{"kind":"number","nativeSrc":"6655:2:7","nodeType":"YulLiteral","src":"6655:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6640:3:7","nodeType":"YulIdentifier","src":"6640:3:7"},"nativeSrc":"6640:18:7","nodeType":"YulFunctionCall","src":"6640:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6587:43:7","nodeType":"YulIdentifier","src":"6587:43:7"},"nativeSrc":"6587:72:7","nodeType":"YulFunctionCall","src":"6587:72:7"},"nativeSrc":"6587:72:7","nodeType":"YulExpressionStatement","src":"6587:72:7"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6713:6:7","nodeType":"YulIdentifier","src":"6713:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6726:9:7","nodeType":"YulIdentifier","src":"6726:9:7"},{"kind":"number","nativeSrc":"6737:2:7","nodeType":"YulLiteral","src":"6737:2:7","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6722:3:7","nodeType":"YulIdentifier","src":"6722:3:7"},"nativeSrc":"6722:18:7","nodeType":"YulFunctionCall","src":"6722:18:7"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6669:43:7","nodeType":"YulIdentifier","src":"6669:43:7"},"nativeSrc":"6669:72:7","nodeType":"YulFunctionCall","src":"6669:72:7"},"nativeSrc":"6669:72:7","nodeType":"YulExpressionStatement","src":"6669:72:7"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6306:442:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6416:9:7","nodeType":"YulTypedName","src":"6416:9:7","type":""},{"name":"value2","nativeSrc":"6428:6:7","nodeType":"YulTypedName","src":"6428:6:7","type":""},{"name":"value1","nativeSrc":"6436:6:7","nodeType":"YulTypedName","src":"6436:6:7","type":""},{"name":"value0","nativeSrc":"6444:6:7","nodeType":"YulTypedName","src":"6444:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6455:4:7","nodeType":"YulTypedName","src":"6455:4:7","type":""}],"src":"6306:442:7"},{"body":{"nativeSrc":"6852:124:7","nodeType":"YulBlock","src":"6852:124:7","statements":[{"nativeSrc":"6862:26:7","nodeType":"YulAssignment","src":"6862:26:7","value":{"arguments":[{"name":"headStart","nativeSrc":"6874:9:7","nodeType":"YulIdentifier","src":"6874:9:7"},{"kind":"number","nativeSrc":"6885:2:7","nodeType":"YulLiteral","src":"6885:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6870:3:7","nodeType":"YulIdentifier","src":"6870:3:7"},"nativeSrc":"6870:18:7","nodeType":"YulFunctionCall","src":"6870:18:7"},"variableNames":[{"name":"tail","nativeSrc":"6862:4:7","nodeType":"YulIdentifier","src":"6862:4:7"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6942:6:7","nodeType":"YulIdentifier","src":"6942:6:7"},{"arguments":[{"name":"headStart","nativeSrc":"6955:9:7","nodeType":"YulIdentifier","src":"6955:9:7"},{"kind":"number","nativeSrc":"6966:1:7","nodeType":"YulLiteral","src":"6966:1:7","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6951:3:7","nodeType":"YulIdentifier","src":"6951:3:7"},"nativeSrc":"6951:17:7","nodeType":"YulFunctionCall","src":"6951:17:7"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6898:43:7","nodeType":"YulIdentifier","src":"6898:43:7"},"nativeSrc":"6898:71:7","nodeType":"YulFunctionCall","src":"6898:71:7"},"nativeSrc":"6898:71:7","nodeType":"YulExpressionStatement","src":"6898:71:7"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6754:222:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6824:9:7","nodeType":"YulTypedName","src":"6824:9:7","type":""},{"name":"value0","nativeSrc":"6836:6:7","nodeType":"YulTypedName","src":"6836:6:7","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6847:4:7","nodeType":"YulTypedName","src":"6847:4:7","type":""}],"src":"6754:222:7"},{"body":{"nativeSrc":"7010:152:7","nodeType":"YulBlock","src":"7010:152:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7027:1:7","nodeType":"YulLiteral","src":"7027:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7030:77:7","nodeType":"YulLiteral","src":"7030:77:7","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7020:6:7","nodeType":"YulIdentifier","src":"7020:6:7"},"nativeSrc":"7020:88:7","nodeType":"YulFunctionCall","src":"7020:88:7"},"nativeSrc":"7020:88:7","nodeType":"YulExpressionStatement","src":"7020:88:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7124:1:7","nodeType":"YulLiteral","src":"7124:1:7","type":"","value":"4"},{"kind":"number","nativeSrc":"7127:4:7","nodeType":"YulLiteral","src":"7127:4:7","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7117:6:7","nodeType":"YulIdentifier","src":"7117:6:7"},"nativeSrc":"7117:15:7","nodeType":"YulFunctionCall","src":"7117:15:7"},"nativeSrc":"7117:15:7","nodeType":"YulExpressionStatement","src":"7117:15:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7148:1:7","nodeType":"YulLiteral","src":"7148:1:7","type":"","value":"0"},{"kind":"number","nativeSrc":"7151:4:7","nodeType":"YulLiteral","src":"7151:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7141:6:7","nodeType":"YulIdentifier","src":"7141:6:7"},"nativeSrc":"7141:15:7","nodeType":"YulFunctionCall","src":"7141:15:7"},"nativeSrc":"7141:15:7","nodeType":"YulExpressionStatement","src":"7141:15:7"}]},"name":"panic_error_0x11","nativeSrc":"6982:180:7","nodeType":"YulFunctionDefinition","src":"6982:180:7"},{"body":{"nativeSrc":"7212:147:7","nodeType":"YulBlock","src":"7212:147:7","statements":[{"nativeSrc":"7222:25:7","nodeType":"YulAssignment","src":"7222:25:7","value":{"arguments":[{"name":"x","nativeSrc":"7245:1:7","nodeType":"YulIdentifier","src":"7245:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7227:17:7","nodeType":"YulIdentifier","src":"7227:17:7"},"nativeSrc":"7227:20:7","nodeType":"YulFunctionCall","src":"7227:20:7"},"variableNames":[{"name":"x","nativeSrc":"7222:1:7","nodeType":"YulIdentifier","src":"7222:1:7"}]},{"nativeSrc":"7256:25:7","nodeType":"YulAssignment","src":"7256:25:7","value":{"arguments":[{"name":"y","nativeSrc":"7279:1:7","nodeType":"YulIdentifier","src":"7279:1:7"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7261:17:7","nodeType":"YulIdentifier","src":"7261:17:7"},"nativeSrc":"7261:20:7","nodeType":"YulFunctionCall","src":"7261:20:7"},"variableNames":[{"name":"y","nativeSrc":"7256:1:7","nodeType":"YulIdentifier","src":"7256:1:7"}]},{"nativeSrc":"7290:16:7","nodeType":"YulAssignment","src":"7290:16:7","value":{"arguments":[{"name":"x","nativeSrc":"7301:1:7","nodeType":"YulIdentifier","src":"7301:1:7"},{"name":"y","nativeSrc":"7304:1:7","nodeType":"YulIdentifier","src":"7304:1:7"}],"functionName":{"name":"add","nativeSrc":"7297:3:7","nodeType":"YulIdentifier","src":"7297:3:7"},"nativeSrc":"7297:9:7","nodeType":"YulFunctionCall","src":"7297:9:7"},"variableNames":[{"name":"sum","nativeSrc":"7290:3:7","nodeType":"YulIdentifier","src":"7290:3:7"}]},{"body":{"nativeSrc":"7330:22:7","nodeType":"YulBlock","src":"7330:22:7","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7332:16:7","nodeType":"YulIdentifier","src":"7332:16:7"},"nativeSrc":"7332:18:7","nodeType":"YulFunctionCall","src":"7332:18:7"},"nativeSrc":"7332:18:7","nodeType":"YulExpressionStatement","src":"7332:18:7"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7322:1:7","nodeType":"YulIdentifier","src":"7322:1:7"},{"name":"sum","nativeSrc":"7325:3:7","nodeType":"YulIdentifier","src":"7325:3:7"}],"functionName":{"name":"gt","nativeSrc":"7319:2:7","nodeType":"YulIdentifier","src":"7319:2:7"},"nativeSrc":"7319:10:7","nodeType":"YulFunctionCall","src":"7319:10:7"},"nativeSrc":"7316:36:7","nodeType":"YulIf","src":"7316:36:7"}]},"name":"checked_add_t_uint256","nativeSrc":"7168:191:7","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7199:1:7","nodeType":"YulTypedName","src":"7199:1:7","type":""},{"name":"y","nativeSrc":"7202:1:7","nodeType":"YulTypedName","src":"7202:1:7","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7208:3:7","nodeType":"YulTypedName","src":"7208:3:7","type":""}],"src":"7168:191:7"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":7,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461013457806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e657806323b872dd14610104575b600080fd5b6100a0610200565b6040516100ad9190610aaa565b60405180910390f35b6100d060048036038101906100cb9190610b65565b610292565b6040516100dd9190610bc0565b60405180910390f35b6100ee6102b5565b6040516100fb9190610bea565b60405180910390f35b61011e60048036038101906101199190610c05565b6102bf565b60405161012b9190610bc0565b60405180910390f35b61013c6102ee565b6040516101499190610c74565b60405180910390f35b61016c60048036038101906101679190610c8f565b6102f7565b6040516101799190610bea565b60405180910390f35b61018a61033f565b6040516101979190610aaa565b60405180910390f35b6101ba60048036038101906101b59190610b65565b6103d1565b6040516101c79190610bc0565b60405180910390f35b6101ea60048036038101906101e59190610cbc565b6103f4565b6040516101f79190610bea565b60405180910390f35b60606003805461020f90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610d2b565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008061029d61047b565b90506102aa818585610483565b600191505092915050565b6000600254905090565b6000806102ca61047b565b90506102d7858285610495565b6102e285858561052a565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461034e90610d2b565b80601f016020809104026020016040519081016040528092919081815260200182805461037a90610d2b565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6000806103dc61047b565b90506103e981858561052a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b610490838383600161061e565b505050565b60006104a184846103f4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156105245781811015610514578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161050b93929190610d6b565b60405180910390fd5b6105238484848403600061061e565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361059c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016105939190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361060e5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106059190610da2565b60405180910390fd5b6106198383836107f5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036106905760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016106879190610da2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107025760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016106f99190610da2565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156107ef578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107e69190610bea565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084757806002600082825461083b9190610dec565b9250508190555061091a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156108d3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016108ca93929190610d6b565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361096357806002600082825403925050819055506109b0565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0d9190610bea565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a54578082015181840152602081019050610a39565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a7c82610a1a565b610a868185610a25565b9350610a96818560208601610a36565b610a9f81610a60565b840191505092915050565b60006020820190508181036000830152610ac48184610a71565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610afc82610ad1565b9050919050565b610b0c81610af1565b8114610b1757600080fd5b50565b600081359050610b2981610b03565b92915050565b6000819050919050565b610b4281610b2f565b8114610b4d57600080fd5b50565b600081359050610b5f81610b39565b92915050565b60008060408385031215610b7c57610b7b610acc565b5b6000610b8a85828601610b1a565b9250506020610b9b85828601610b50565b9150509250929050565b60008115159050919050565b610bba81610ba5565b82525050565b6000602082019050610bd56000830184610bb1565b92915050565b610be481610b2f565b82525050565b6000602082019050610bff6000830184610bdb565b92915050565b600080600060608486031215610c1e57610c1d610acc565b5b6000610c2c86828701610b1a565b9350506020610c3d86828701610b1a565b9250506040610c4e86828701610b50565b9150509250925092565b600060ff82169050919050565b610c6e81610c58565b82525050565b6000602082019050610c896000830184610c65565b92915050565b600060208284031215610ca557610ca4610acc565b5b6000610cb384828501610b1a565b91505092915050565b60008060408385031215610cd357610cd2610acc565b5b6000610ce185828601610b1a565b9250506020610cf285828601610b1a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610d4357607f821691505b602082108103610d5657610d55610cfc565b5b50919050565b610d6581610af1565b82525050565b6000606082019050610d806000830186610d5c565b610d8d6020830185610bdb565b610d9a6040830184610bdb565b949350505050565b6000602082019050610db76000830184610d5c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df782610b2f565b9150610e0283610b2f565b9250828201905080821115610e1a57610e19610dbd565b5b9291505056fea264697066735822122091697556a616614bf1a9f85e5f96112eb19a3d890d40604efedd4b8da51a0c3664736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1D0 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0 PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x2B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x2BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18A PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xCBC JUMP JUMPDEST PUSH2 0x3F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x20F SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23B SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x288 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x288 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2AA DUP2 DUP6 DUP6 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2CA PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x2D7 DUP6 DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST PUSH2 0x2E2 DUP6 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0xD2B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3DC PUSH2 0x47B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E9 DUP2 DUP6 DUP6 PUSH2 0x52A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x490 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x61E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A1 DUP5 DUP5 PUSH2 0x3F4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x524 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x514 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x523 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x59C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x60E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x619 DUP4 DUP4 DUP4 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x690 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x687 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x702 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x7EF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7E6 SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x847 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83B SWAP2 SWAP1 PUSH2 0xDEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8D3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x963 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x9B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA54 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA7C DUP3 PUSH2 0xA1A JUMP JUMPDEST PUSH2 0xA86 DUP2 DUP6 PUSH2 0xA25 JUMP JUMPDEST SWAP4 POP PUSH2 0xA96 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA36 JUMP JUMPDEST PUSH2 0xA9F DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAC4 DUP2 DUP5 PUSH2 0xA71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP3 PUSH2 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB0C DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP2 EQ PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB29 DUP2 PUSH2 0xB03 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB42 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP2 EQ PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB5F DUP2 PUSH2 0xB39 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8A DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB9B DUP6 DUP3 DUP7 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBBA DUP2 PUSH2 0xBA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBE4 DUP2 PUSH2 0xB2F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBFF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC1E JUMPI PUSH2 0xC1D PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC2C DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC3D DUP7 DUP3 DUP8 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC4E DUP7 DUP3 DUP8 ADD PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6E DUP2 PUSH2 0xC58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC89 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH2 0xCA4 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP5 DUP3 DUP6 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD2 PUSH2 0xACC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE1 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCF2 DUP6 DUP3 DUP7 ADD PUSH2 0xB1A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD43 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD56 JUMPI PUSH2 0xD55 PUSH2 0xCFC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD65 DUP2 PUSH2 0xAF1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xD80 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0xD8D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0xD9A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBDB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDB7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF7 DUP3 PUSH2 0xB2F JUMP JUMPDEST SWAP2 POP PUSH2 0xE02 DUP4 PUSH2 0xB2F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1A JUMPI PUSH2 0xE19 PUSH2 0xDBD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 PUSH10 0x7556A616614BF1A9F85E PUSH0 SWAP7 GT 0x2E 0xB1 SWAP11 RETURNDATASIZE DUP10 0xD BLOCKHASH PUSH1 0x4E INVALID 0xDD 0x4B DUP14 0xA5 BYTE 0xC CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"136:147:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:474::-;5258:6;5266;5315:2;5303:9;5294:7;5290:23;5286:32;5283:119;;;5321:79;;:::i;:::-;5283:119;5441:1;5466:53;5511:7;5502:6;5491:9;5487:22;5466:53;:::i;:::-;5456:63;;5412:117;5568:2;5594:53;5639:7;5630:6;5619:9;5615:22;5594:53;:::i;:::-;5584:63;;5539:118;5190:474;;;;;:::o;5670:180::-;5718:77;5715:1;5708:88;5815:4;5812:1;5805:15;5839:4;5836:1;5829:15;5856:320;5900:6;5937:1;5931:4;5927:12;5917:22;;5984:1;5978:4;5974:12;6005:18;5995:81;;6061:4;6053:6;6049:17;6039:27;;5995:81;6123:2;6115:6;6112:14;6092:18;6089:38;6086:84;;6142:18;;:::i;:::-;6086:84;5907:269;5856:320;;;:::o;6182:118::-;6269:24;6287:5;6269:24;:::i;:::-;6264:3;6257:37;6182:118;;:::o;6306:442::-;6455:4;6493:2;6482:9;6478:18;6470:26;;6506:71;6574:1;6563:9;6559:17;6550:6;6506:71;:::i;:::-;6587:72;6655:2;6644:9;6640:18;6631:6;6587:72;:::i;:::-;6669;6737:2;6726:9;6722:18;6713:6;6669:72;:::i;:::-;6306:442;;;;;;:::o;6754:222::-;6847:4;6885:2;6874:9;6870:18;6862:26;;6898:71;6966:1;6955:9;6951:17;6942:6;6898:71;:::i;:::-;6754:222;;;;:::o;6982:180::-;7030:77;7027:1;7020:88;7127:4;7124:1;7117:15;7151:4;7148:1;7141:15;7168:191;7208:3;7227:20;7245:1;7227:20;:::i;:::-;7222:25;;7261:20;7279:1;7261:20;:::i;:::-;7256:25;;7304:1;7301;7297:9;7290:16;;7325:3;7322:1;7319:10;7316:36;;;7332:18;;:::i;:::-;7316:36;7168:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"734000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"343","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OurToken.sol\":\"OurToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/OurToken.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\r\\npragma solidity ^0.8.3;\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\n\\r\\ncontract OurToken is ERC20 {\\r\\n    constructor(uint256 initialSupply) ERC20(\\\"OurToken\\\", \\\"OT\\\") {\\r\\n        _mint(msg.sender, initialSupply);\\r\\n    }\\r\\n}\",\"keccak256\":\"0x9970e2b1e0179e2c89ea36d69bf30dc725cfd03a0272098126b9279cb18cf42d\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}","storageLayout":{"storage":[{"astId":159,"contract":"contracts/OurToken.sol:OurToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":165,"contract":"contracts/OurToken.sol:OurToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":167,"contract":"contracts/OurToken.sol:OurToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":169,"contract":"contracts/OurToken.sol:OurToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":171,"contract":"contracts/OurToken.sol:OurToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}